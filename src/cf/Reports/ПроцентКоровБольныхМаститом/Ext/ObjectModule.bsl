Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПериодОтчета 		= КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Получить(0); 
	ПолеФерма 			= Новый ПолеКомпоновкиДанных("Ферма");
	Если РольДоступна("ПолныеПрава") ИЛИ РольДоступна("ДоступКоВсемФермам") Тогда
		ЭлементФерма 	= ВернутьЭлементПользовательскогоОтбора(ПолеФерма);
	Иначе	
		ЭлементФерма 	= ВернутьЭлементОтбора(ПолеФерма,КомпоновщикНастроек.ФиксированныеНастройки);	
	КонецЕсли;
	Ферма				= ЭлементФерма.ПравоеЗначение;
	ФермаИспользование	= ЭлементФерма.Использование;
	НачалоПериода 		= ПериодОтчета.Значение.ДатаНачала;
	КонецПериода 		= ПериодОтчета.Значение.ДатаОкончания;
	Мастит				= Справочники.Заболевания.Мастит;
	СтатусБолезниНачало = Перечисления.ПериодыЗаболеваний.НачалоЛечения;
	СтатусБолезниТест 	= Перечисления.ПериодыЗаболеваний.ОжиданиеТеста;
	СтатусБолезниОкончание = Перечисления.ПериодыЗаболеваний.КонецЛечения;
	УчитыватьБракЭлемент= КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Получить(1);
	УчитыватьБрак       = УчитыватьБракЭлемент.Значение;
	УчитыватьБракИспользовать = УчитыватьБракЭлемент.Использование;	
	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПроизводствоСводка.Период, МЕСЯЦ) КАК Период,
	|	ПроизводствоСводка.Регистратор КАК Регистратор,
	|	ПроизводствоСводка.Ферма КАК Ферма,
	|	ПроизводствоСводка.КоличествоДойныхКоров КАК КоличествоДойныхКоров, 
	|	ПроизводствоСводка.Ферма.ПроцентКормодней КАК ПроцентКормодней	
	|ИЗ
	|	РегистрСведений.ПроизводствоСводка КАК ПроизводствоСводка
	|ГДЕ
	|	ПроизводствоСводка.Период МЕЖДУ &ДатаНачала И &ДатаОкончания"
	+ ?(ЗначениеЗаполнено(Ферма) И ФермаИспользование, " И ПроизводствоСводка.Ферма = &Ферма", "");
	
	Запрос.УстановитьПараметр("ДатаНачала", 	НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", 	КонецПериода);
	Если ЗначениеЗаполнено(Ферма) И ФермаИспользование Тогда
		Запрос.УстановитьПараметр("Ферма", Ферма);
	КонецЕсли;
	
	ПроизводственнаяСводка = Запрос.Выполнить().Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыБолезнейЖивотныхНачало.Регистратор.Ферма КАК Ферма,
		|	ПериодыБолезнейЖивотныхНачало.Период КАК ДатаНачалаЛечения,
		|	МАКСИМУМ(ЕСТЬNULL(ПериодыБолезнейЖивотныхКонец.Период, ВЫБОР
		|				КОГДА &ТекущаяДата < &ДатаОкончания
		|					ТОГДА &ТекущаяДата
		|				ИНАЧЕ &ДатаОкончания
		|			КОНЕЦ)) КАК ДатаОкончанияЛечения,
		|	ПериодыБолезнейЖивотныхНачало.Животное КАК Животное,
		|	ЕСТЬNULL(Выбытия.Период, ДАТАВРЕМЯ(3000, 1, 1)) КАК ДатаВыбытия
		|ПОМЕСТИТЬ ВременнаяТаблица
		|ИЗ
		|	РегистрСведений.ПериодыБолезнейЖивотных КАК ПериодыБолезнейЖивотныхНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПериодыБолезнейЖивотных КАК ПериодыБолезнейЖивотныхКонец
		|		ПО ПериодыБолезнейЖивотныхНачало.СписокПрепаратовПолеСвязи = ПериодыБолезнейЖивотныхКонец.СписокПрепаратовПолеСвязи
		|			И ПериодыБолезнейЖивотныхНачало.Животное = ПериодыБолезнейЖивотныхКонец.Животное
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Выбытия КАК Выбытия
		|		ПО ПериодыБолезнейЖивотныхНачало.Животное = Выбытия.Животное
		|ГДЕ
		|	ПериодыБолезнейЖивотныхНачало.Заболевание = &Мастит
		|	И ПериодыБолезнейЖивотныхНачало.СтатусБолезни = &СтатусБолезниНачалоЛечения
		|	И ПериодыБолезнейЖивотныхКонец.СтатусБолезни <> &СтатусБолезниТест
		|	И ПериодыБолезнейЖивотныхНачало.Регистратор ССЫЛКА Документ.ЖурналЛечения
		|	И ПериодыБолезнейЖивотныхКонец.Регистратор ССЫЛКА Документ.ЖурналЛечения
		|	И ПериодыБолезнейЖивотныхНачало.Период МЕЖДУ &ДатаНачалаЗапас И &ДатаОкончанияЗапас
		|	И ПериодыБолезнейЖивотныхКонец.Заболевание = &Мастит
		|	И ЕСТЬNULL(Выбытия.Период, ДАТАВРЕМЯ(3000, 1, 1)) > &ДатаНачала
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодыБолезнейЖивотныхНачало.Регистратор.Ферма,
		|	ПериодыБолезнейЖивотныхНачало.Период,
		|	ПериодыБолезнейЖивотныхНачало.Животное,
		|	Выбытия.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица.Ферма КАК Ферма,
		|	ВременнаяТаблица.ДатаНачалаЛечения КАК ДатаНачалаЛечения,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблица.ДатаНачалаЛечения = ВременнаяТаблица.ДатаОкончанияЛечения
		|			ТОГДА ВЫБОР
		|					КОГДА &ТекущаяДата < &ДатаОкончания
		|						ТОГДА &ТекущаяДата
		|					ИНАЧЕ &ДатаОкончания
		|				КОНЕЦ
		|		ИНАЧЕ ВременнаяТаблица.ДатаОкончанияЛечения
		|	КОНЕЦ КАК ДатаОкончанияЛечения,
		|	ВременнаяТаблица.Животное КАК Животное,
		|	ВременнаяТаблица.ДатаВыбытия КАК ДатаВыбытия
		|ИЗ
		|	ВременнаяТаблица КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыбраковкаЖивотных.СрезПоследних(&ДатаОкончания {(&ДатаОкончания)}, ) КАК ВыбраковкаЖивотныхСрезПоследних
		|		ПО ВременнаяТаблица.Животное = ВыбраковкаЖивотныхСрезПоследних.Животное
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &УчитыватьБрак
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ВыбраковкаЖивотныхСрезПоследних.Животное ЕСТЬ NULL
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА ВременнаяТаблица.ДатаНачалаЛечения = ВременнаяТаблица.ДатаОкончанияЛечения
		|				ТОГДА ВЫБОР
		|						КОГДА &ТекущаяДата < &ДатаОкончания
		|							ТОГДА &ТекущаяДата
		|						ИНАЧЕ &ДатаОкончания
		|					КОНЕЦ
		|			ИНАЧЕ ВременнаяТаблица.ДатаОкончанияЛечения
		|		КОНЕЦ МЕЖДУ &ДатаНачала И &ДатаОкончанияЗапас
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ферма";    
	//КОНЕЦПЕРИОДА(ВременнаяТаблица.ДатаОкончанияЛечения, МЕСЯЦ)
	Запрос.УстановитьПараметр("Мастит", Мастит);
	Запрос.УстановитьПараметр("СтатусБолезниНачалоЛечения", СтатусБолезниНачало);
	Запрос.УстановитьПараметр("СтатусБолезниТест", СтатусБолезниТест); 
	Запрос.УстановитьПараметр("СтатусБолезниОкончаниеЛечения", СтатусБолезниОкончание); 
	Запрос.УстановитьПараметр("ДатаНачала", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаНачалаЗапас", ДобавитьМесяц(НачалоПериода, -3));
	Запрос.УстановитьПараметр("ДатаОкончанияЗапас", ДобавитьМесяц(КонецПериода, 3)); 
	Запрос.УстановитьПараметр("УчитыватьБрак", УчитыватьБракИспользовать И УчитыватьБрак);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода); 
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата()); 
	
	ПериодыЗаболевания = Запрос.Выполнить().Выгрузить();
	
	СписокМесяцов = ПроизводственнаяСводка.Скопировать();
	СписокМесяцов.Свернуть("Период");
	
	ПериодыЗаболеваний = Новый ТаблицаЗначений;
	ПериодыЗаболеваний.Колонки.Добавить("Ферма");   
	ПериодыЗаболеваний.Колонки.Добавить("Период");
	ПериодыЗаболеваний.Колонки.Добавить("ФактКормодней");
	ПериодыЗаболеваний.Колонки.Добавить("КоличествоМаститныхКоров");
	ПериодыЗаболеваний.Колонки.Добавить("ПроцентМаститныхКоров");
	ПериодыЗаболеваний.Колонки.Добавить("Животное");
	
	Для каждого МесяцаОтчетности Из СписокМесяцов Цикл
		
		Для каждого СтрокаТабличнойЧасти Из ПериодыЗаболевания Цикл
			
			Отбор = Новый Структура("Период, Ферма, Животное", МесяцаОтчетности.Период, СтрокаТабличнойЧасти.Ферма, СтрокаТабличнойЧасти.Животное);
			НайденныеСтроки = ПериодыЗаболеваний.НайтиСтроки(Отбор);
			
			ДнейБолезни = ОбщегоНазначения.РазностьДат(Макс(СтрокаТабличнойЧасти.ДатаНачалаЛечения, МесяцаОтчетности.Период, НачалоПериода), 
							Мин(СтрокаТабличнойЧасти.ДатаОкончанияЛечения, СтрокаТабличнойЧасти.ДатаВыбытия, КонецМесяца(МесяцаОтчетности.Период), КонецПериода, ТекущаяДата())) - 1;
			ДнейБолезни = ?(ДнейБолезни > 0, 0,  - ДнейБолезни);
			
			Если ДнейБолезни = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если НайденныеСтроки.Количество() Тогда
				СтрокаДанных 		= НайденныеСтроки.Получить(0);
			Иначе
				СтрокаДанных 		= ПериодыЗаболеваний.Добавить();
				СтрокаДанных.Период	= МесяцаОтчетности.Период;
				СтрокаДанных.Ферма 	= СтрокаТабличнойЧасти.Ферма;
				СтрокаДанных.Животное 	= СтрокаТабличнойЧасти.Животное;
			КонецЕсли;
			
			СтрокаДанных.ФактКормодней = ?(СтрокаДанных.ФактКормодней = Неопределено, 0, СтрокаДанных.ФактКормодней) + ДнейБолезни;
			
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из ПериодыЗаболеваний Цикл
		
		НайденныеСтрокиБолезнейДляКоличестваЖивотных = ПериодыЗаболевания.НайтиСтроки(Новый Структура("Ферма, Животное", СтрокаТабличнойЧасти.Ферма, СтрокаТабличнойЧасти.Животное));
		
		ОбщееКоличествоЗаболевшихКоров = 0;
		Для каждого СтрокаТабличнойЧастиЖивотных Из НайденныеСтрокиБолезнейДляКоличестваЖивотных Цикл
			ОбщееКоличествоЗаболевшихКоров = ОбщееКоличествоЗаболевшихКоров + 
				?(НачалоМесяца(СтрокаТабличнойЧастиЖивотных.ДатаНачалаЛечения) = СтрокаТабличнойЧасти.Период 
					ИЛИ НачалоМесяца(СтрокаТабличнойЧастиЖивотных.ДатаОкончанияЛечения) >= СтрокаТабличнойЧасти.Период
						ИЛИ (СтрокаТабличнойЧастиЖивотных.ДатаВыбытия <> Дата(3000,1,1) И НачалоМесяца(СтрокаТабличнойЧастиЖивотных.ДатаВыбытия) >= СтрокаТабличнойЧасти.Период), 1, 0);
		КонецЦикла;
		
		СтрокаТабличнойЧасти.КоличествоМаститныхКоров = ОбщееКоличествоЗаболевшихКоров;
		
	КонецЦикла;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ПроизводственнаяСводка", ПроизводственнаяСводка); 
	ВнешниеНаборыДанных.Вставить("ПериодыЗаболеваний", ПериодыЗаболеваний); 

	КомпоновщикМакета 	= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки 		= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;	
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

Функция ВернутьЭлементОтбора(ПолеСКД,НастройкиОтчета)

	ЭлементыОтбора = НастройкиОтчета.Отбор.Элементы; 
	НайденныйЭлемент = Неопределено;
	Для каждого Элемент Из ЭлементыОтбора Цикл
		Если Элемент.ЛевоеЗначение = ПолеСКД Тогда
			НайденныйЭлемент = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныйЭлемент;
	
КонецФункции 

Функция ВернутьЭлементПользовательскогоОтбора(ПолеСКД)
	
	НайденныйЭлемент = ВернутьЭлементОтбора(ПолеСКД,КомпоновщикНастроек.Настройки);
	Если НайденныйЭлемент <> Неопределено Тогда
		НайденныйЭлемент = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(НайденныйЭлемент.ИдентификаторПользовательскойНастройки);
	КонецЕсли;
	
	Возврат НайденныйЭлемент;
	
КонецФункции 


