
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	// Сформируем отчет
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 
	
	МакетОформления = ПолучитьМакет("МакетОформленияСКД");

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, МакетОформления); 
	ДоработатьМакетКомпоновки_ДоработатьШапку(МакетКомпоновки);	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры 


Процедура ДоработатьМакетКомпоновки_ДоработатьШапку(МакетКомпоновкиСКД)
	
	Попытка
		МакетыШапки = Новый Массив;
		Для каждого ЭлементТела Из МакетКомпоновкиСКД.Тело Цикл
			Если ЗначениеЗаполнено(ЭлементТела.МакетШапки) Тогда
				МакетыШапки.Добавить(ЭлементТела.МакетШапки);	
			КонецЕсли;
		КонецЦикла;  
		
		Для каждого МакетШапки Из МакетыШапки Цикл
			
			Макеты = МакетКомпоновкиСКД.Макеты.Найти(МакетШапки).Макет;
			
			Для каждого Макет Из Макеты Цикл
				Для каждого Ячейка Из Макет.Ячейки Цикл
					Для каждого ЭлементЯчейки Из Ячейка.Элементы Цикл
						Если ЭлементЯчейки.Значение = "" Тогда
							ЭлементЯчейки.Значение = "Показатели";	
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	Исключение
	КонецПопытки;

КонецПроцедуры



