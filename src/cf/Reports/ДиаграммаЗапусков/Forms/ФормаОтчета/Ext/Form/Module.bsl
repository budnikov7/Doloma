
Функция ВернутьЭлементОтбора(ПолеСКД,НастройкиОтчета)

	ЭлементыОтбора = НастройкиОтчета.Отбор.Элементы; 
	НайденныйЭлемент = Неопределено;
	Для каждого Элемент Из ЭлементыОтбора Цикл
		Если Элемент.ЛевоеЗначение = ПолеСКД Тогда
			НайденныйЭлемент = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныйЭлемент;

КонецФункции 

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Если НЕ РольДоступна("ПолныеПрава") И НЕ РольДоступна("ДоступКоВсемФермам") Тогда
		КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
		НастройкиОтчета = КомпоновщикНастроекФормы.ФиксированныеНастройки; 
		ПолеСКДФерма = Новый ПолеКомпоновкиДанных("Ферма");
		ЭлементФерма = ВернутьЭлементОтбора(ПолеСКДФерма,НастройкиОтчета);
		Если ЭлементФерма = Неопределено Тогда
			ЭлементФерма = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			ЭлементФерма.ЛевоеЗначение = ПолеСКДФерма;
		КонецЕсли; 
		ЭлементФерма.ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь.ОсновнаяФерма;  
		ЭлементФерма.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементФерма.Использование = Истина;
		
		ЭлементФерма = ВернутьЭлементОтбора(ПолеСКДФерма, КомпоновщикНастроекФормы.Настройки);
		Если ЭлементФерма <> Неопределено Тогда
		    Настройки = КомпоновщикНастроекФормы.Настройки;
			Настройки.Отбор.Элементы.Удалить(ЭлементФерма); 
			КомпоновщикНастроекФормы.ЗагрузитьНастройки(Настройки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	ПриОткрытииНаСервере();
	
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   
	
	ЗначениеВарианта = "";
	Параметры.Свойство("КлючВарианта",ЗначениеВарианта);
	Если ЗначениеВарианта = Неопределено Тогда
		УстановитьТекущийВариант("Основной");
	КонецЕсли;  
	
КонецПроцедуры 

&НаСервере
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(Настройки, ИспользуютсяСтандартныеНастройки) 
	
	ПериодРасшифровки = Неопределено;
	Если Параметры.Свойство("ПериодРасшифровки",ПериодРасшифровки) Тогда
		УстановитьПользовательскийПараметрСКД(Настройки, "ПериодОтчета", ПериодРасшифровки);
	КонецЕсли; 
	ВариантДиаграммы = Неопределено;
	Если Параметры.Свойство("ВариантДиаграммы",ВариантДиаграммы) Тогда
		УстановитьПользовательскийПараметрСКД(Настройки, "ВариантДиаграммы", ВариантДиаграммы);
	КонецЕсли; 
	
	ИмяПоляОтбора = Неопределено;
	Если Параметры.Свойство("ИмяОтбора",ИмяПоляОтбора) Тогда
		УстановитьОтборСКД(ИмяПоляОтбора);
	КонецЕсли;  
	МассивОтбора = Неопределено;
	Если Параметры.Свойство("МассивОтбора",МассивОтбора) Тогда
		Для каждого Элемент Из МассивОтбора Цикл
			УстановитьОтборСКД(Элемент.ИмяПоля,Элемент.ВидСравнения,Элемент.Значение);
		КонецЦикла;
	КонецЕсли;  
	
КонецПроцедуры

//РАСШИФРОВКА

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь;
	ПоляРасшифровки = ПолучитьЗначениеРасшифровки(Расшифровка);
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВыборДействияЗавершение", ЭтаФорма, ПоляРасшифровки);
	ДоступныеДействия = Новый Массив;
	
	ДополнительныеПунктыМеню = Новый СписокЗначений;  
	Для каждого ПолеРасшифровки Из ПоляРасшифровки Цикл
		Если СтрНайти(ПолеРасшифровки.Ключ,"КоличествоЗапусков") Тогда
			ДополнительныеПунктыМеню.Добавить("Открыть отчет расшифровку");
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	Если ДополнительныеПунктыМеню.Количество()=0 Тогда 
		ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	КонецЕсли;
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения, Расшифровка, ДоступныеДействия, ДополнительныеПунктыМеню);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПоказатьВыборДействияЗавершение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		ПоказатьЗначение(Неопределено, ПараметрВыполненногоДействия);
	ИначеЕсли  ВыполненноеДействие = "Открыть отчет расшифровку" Тогда 
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
			СтруктураОтбора = Новый Структура; 
			ИмяРесурса = Неопределено;
			Для каждого ЭлементСтруктуры Из ДополнительныеПараметры Цикл  
				//СтруктураОтбора.Вставить(ЭлементСтруктуры.Ключ,ЭлементСтруктуры.Значение);
				Если ЗначениеЗаполнено(ЭлементСтруктуры.Значение) Тогда
					СтруктураОтбора.Вставить(ЭлементСтруктуры.Ключ,ЭлементСтруктуры.Значение);
				ИначеЕсли ЭлементСтруктуры.Значение = NULL Тогда
					ИмяРесурса = ЭлементСтруктуры.Ключ;
				КонецЕсли;
			КонецЦикла;
			ОткрытьОтчётСОтбором(СтруктураОтбора,"Расшифровка",ИмяРесурса);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьЗначениеРасшифровки(Расшифровка, ДанныеРасшифровкиКомпоновки=Неопределено, СтруктураВозврата=Неопределено)
	
	Если СтруктураВозврата = Неопределено Тогда
		СтруктураВозврата = Новый Структура;
	КонецЕсли;
	
	Если ДанныеРасшифровкиКомпоновки = Неопределено Тогда            
		ДанныеРасшифровкиКомпоновки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);   
		ЭлементРасшифровки = ДанныеРасшифровкиКомпоновки.Элементы[Расшифровка];
		Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			ПолеРасшифровки = ЭлементРасшифровки.ПолучитьПоля()[0];
			СтруктураВозврата.Вставить(ПолеРасшифровки.Поле, ПолеРасшифровки.Значение)
		КонецЕсли;
	КонецЕсли; 
	
	МассивРодителей = ДанныеРасшифровкиКомпоновки.Элементы[Расшифровка].ПолучитьРодителей();
	Для СчРодителей = 1 По МассивРодителей.Количество() Цикл
		
		ПолеРодитель = МассивРодителей[СчРодителей-1];
		Если Число(ПолеРодитель.Идентификатор) > 0 Тогда
			
			//Получим текущее поле
			Если ТипЗнч(ПолеРодитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
				МассивПолей = ПолеРодитель.ПолучитьПоля();
			ИначеЕсли ТипЗнч(ПолеРодитель) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
				МассивРодителей = ПолеРодитель.ПолучитьРодителей();
				Если МассивРодителей.Количество()>0 Тогда
					МассивПолей = МассивРодителей[0].ПолучитьПоля();
				Иначе
				    МассивПолей = Новый Массив;
				КонецЕсли;
			КонецЕсли; 
			
			Для СчПолей = 1 По МассивПолей.Количество() Цикл
				
				Поле = МассивПолей[СчПолей-1];
				
				//Выведем значения текущей расшифровки
				СтруктураВозврата.Вставить(Поле.Поле, Поле.Значение);
				
				//Рекурсивный вызов процедуры. 
				РасшифровкиВыше = ПолеРодитель.ПолучитьРодителей()[0].Идентификатор;
				ПолучитьЗначениеРасшифровки(РасшифровкиВыше,ДанныеРасшифровкиКомпоновки,СтруктураВозврата);
				
			КонецЦикла;    
			
		КонецЕсли;        
	КонецЦикла;
	ДанныеРасшифровкиКомпоновки=Неопределено;	
	Возврат СтруктураВозврата;
	
КонецФункции   

&НаКлиенте
Процедура ОткрытьОтчётСОтбором(ДополнительныеПараметры,НаименованиеВариантаОтчета,ИмяРесурса)
	
	НастройкиЗдесь = Отчет.КомпоновщикНастроек.Настройки;  
	НастройкиПользовательскиеЗдесь = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки;   
	
	МассивОтбора = Новый Массив;
	Для каждого Элемент Из НастройкиПользовательскиеЗдесь.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементОтбораКомпоновкиДанных") И Элемент.Использование = Истина Тогда 
			ПолеСКД = Неопределено;
			Для каждого ЭлементОтбора Из НастройкиЗдесь.Отбор.Элементы Цикл
				Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = Элемент.ИдентификаторПользовательскойНастройки Тогда
					ПолеСКД = ЭлементОтбора.ЛевоеЗначение;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ДополнительныеПараметры.Свойство(Строка(ПолеСКД)) = Ложь Тогда
				МассивОтбора.Добавить(Новый Структура("ИмяПоля,ВидСравнения,Значение",Строка(ПолеСКД), Элемент.ВидСравнения, Элемент.ПравоеЗначение));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ИДНастройкиПериодЗдесь = НастройкиЗдесь.ПараметрыДанных.Элементы.Найти("ПериодОтчета").ИдентификаторПользовательскойНастройки;
	НайденныйПараметрПериод = НастройкиПользовательскиеЗдесь.Элементы.Найти(ИДНастройкиПериодЗдесь);         
	ИДНастройкиВариантДиаграммыЗдесь = НастройкиЗдесь.ПараметрыДанных.Элементы.Найти("ВариантДиаграммы").ИдентификаторПользовательскойНастройки;
	НайденныйПараметрВариантДиаграммы = НастройкиПользовательскиеЗдесь.Элементы.Найти(ИДНастройкиВариантДиаграммыЗдесь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючВарианта", НаименованиеВариантаОтчета);
	ПараметрыФормы.Вставить("ИмяОтбора", ИмяРесурса);
	ПараметрыФормы.Вставить("МассивОтбора", МассивОтбора);
	Если НайденныйПараметрПериод <> Неопределено Тогда
		ПериодОтчета = Новый СтандартныйПериод(НайденныйПараметрПериод.Значение.ДатаНачала, НайденныйПараметрПериод.Значение.ДатаОкончания);
		ПараметрыФормы.Вставить("ПериодРасшифровки", ПериодОтчета);
	КонецЕсли;     
	Если НайденныйПараметрВариантДиаграммы <> Неопределено Тогда
		ПараметрыФормы.Вставить("ВариантДиаграммы", НайденныйПараметрВариантДиаграммы.Значение);
	КонецЕсли;     
	ПараметрыФормы.Вставить("Отбор", ДополнительныеПараметры);
	ОткрытьФорму(ЭтотОбъект.ИмяФормы, ПараметрыФормы, , Новый УникальныйИдентификатор);
	
КонецПроцедуры //  КомандаОткрытьОтчётСОтбором     

&НаСервере
Процедура УстановитьПользовательскийПараметрСКД(Настройки, ИмяПараметра, Значение)
	
	НастройкиЗдесь = Отчет.КомпоновщикНастроек.Настройки;  
	ПараметрДанных = НастройкиЗдесь.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	
	Если ЗначениеЗаполнено(ПараметрДанных.ИдентификаторПользовательскойНастройки) Тогда
		ПользовательскийПараметр = Настройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		ПользовательскийПараметр.Использование = Истина;
		ПользовательскийПараметр.Значение = Значение;
	КонецЕсли;
	
КонецПроцедуры  //  УстановитьПользовательскийПараметрСКД     

&НаСервере
Процедура УстановитьОтборСКД(ИмяПоля,ВидСравнения=Неопределено,Значение=Неопределено)
	
	Настройки = Отчет.КомпоновщикНастроек.Настройки;
	ПолеСКД = Новый ПолеКомпоновкиДанных(ИмяПоля); 
	ЭлементОтбора = Неопределено;
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл
		Если ЭлементНастройки.ЛевоеЗначение = ПолеСКД Тогда 
			ЭлементОтбора = ЭлементНастройки;
	        Прервать;
	    КонецЕсли;
	КонецЦикла; 
	Если ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = ПолеСКД;
	КонецЕсли;
	Если ВидСравнения=Неопределено Тогда
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Иначе	
		ЭлементОтбора.ВидСравнения = ВидСравнения;
	КонецЕсли;    
	
	Если Значение<>Неопределено Тогда
		ЭлементОтбора.ПравоеЗначение = Значение;
	КонецЕсли;    
	
	ЭлементОтбора.Использование = Истина;
	
	
КонецПроцедуры 






















