
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	ЗначениеВарианта = "";
	Параметры.Свойство("КлючВарианта",ЗначениеВарианта);
	Если ЗначениеВарианта = Неопределено Тогда
		УстановитьТекущийВариант("Основной");
	КонецЕсли;  
	
КонецПроцедуры
  
&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Если НЕ РольДоступна("ПолныеПрава") И НЕ РольДоступна("ДоступКоВсемФермам") Тогда
		КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
		НастройкиОтчета = КомпоновщикНастроекФормы.ФиксированныеНастройки; 
		ПолеСКДФерма = Новый ПолеКомпоновкиДанных("Ферма");
		ЭлементФерма = ВернутьЭлементОтбора(ПолеСКДФерма,НастройкиОтчета);
		Если ЭлементФерма = Неопределено Тогда
			ЭлементФерма = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			ЭлементФерма.ЛевоеЗначение = ПолеСКДФерма;
		КонецЕсли; 
		ЭлементФерма.ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь.ОсновнаяФерма;  
		ЭлементФерма.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементФерма.Использование = Истина;
		
		ЭлементФерма = ВернутьЭлементОтбора(ПолеСКДФерма, КомпоновщикНастроекФормы.Настройки);
		Если ЭлементФерма <> Неопределено Тогда
		    Настройки = КомпоновщикНастроекФормы.Настройки;
			Настройки.Отбор.Элементы.Удалить(ЭлементФерма); 
			КомпоновщикНастроекФормы.ЗагрузитьНастройки(Настройки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры  

&НаСервере
Процедура ПриЗагрузкеВариантаНаСервере(Настройки)
	ПриОткрытииНаСервере();
КонецПроцедуры

Функция ВернутьЭлементОтбора(ПолеСКД,НастройкиОтчета)

	ЭлементыОтбора = НастройкиОтчета.Отбор.Элементы; 
	НайденныйЭлемент = Неопределено;
	Для каждого Элемент Из ЭлементыОтбора Цикл
		Если Элемент.ЛевоеЗначение = ПолеСКД Тогда
			НайденныйЭлемент = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныйЭлемент;

КонецФункции 

&НаСервере
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(Настройки, ИспользуютсяСтандартныеНастройки) 
	
	ПериодРасшифровки = Неопределено;
	Если Параметры.Свойство("ПериодРасшифровки",ПериодРасшифровки) Тогда
		УстановитьПользовательскийПараметрСКД(Настройки, "ПериодОтчета", ПериодРасшифровки);
	КонецЕсли;
	
	ИмяПоляОтбора = Неопределено;
	Если Параметры.Свойство("ИмяОтбора",ИмяПоляОтбора) Тогда
		УстановитьОтборСКД(ИмяПоляОтбора);
	КонецЕсли;
	
	МассивОтбора = Неопределено;
	Если Параметры.Свойство("МассивОтбора",МассивОтбора) Тогда
		Для каждого Элемент Из МассивОтбора Цикл
			УстановитьОтборСКД(Элемент.ИмяПоля,Элемент.ВидСравнения,Элемент.Значение);
		КонецЦикла;
	КонецЕсли;  
	
КонецПроцедуры

//РАСШИФРОВКА

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	СтандартнаяОбработка = Ложь; 
	СтруктураРасшифровки = Новый Структура;
	ПолучитьСтруктуруРасшифровки(СтруктураРасшифровки, Расшифровка); 
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВыборДействияЗавершение", ЭтаФорма, СтруктураРасшифровки);
	ДоступныеДействия = Новый Массив;
	
	ДополнительныеПунктыМеню = Новый СписокЗначений;  
	Для каждого ПолеРасшифровки Из СтруктураРасшифровки Цикл  
		Если СтрНайти(ПолеРасшифровки.Ключ,"Животное") Тогда  
			ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
		КонецЕсли;	
	КонецЦикла; 
	
	Если ДоступныеДействия.Количество() = 0 Тогда
		ДополнительныеПунктыМеню.Добавить("Открыть отчет расшифровку");
	КонецЕсли;
	
	ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения, Расшифровка, ДоступныеДействия, ДополнительныеПунктыМеню);
	
КонецПроцедуры   

&НаКлиенте
Процедура ПоказатьВыборДействияЗавершение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
	
	Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		ПоказатьЗначение(Неопределено, ПараметрВыполненногоДействия);
	ИначеЕсли  ВыполненноеДействие = "Открыть отчет расшифровку" Тогда 
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
			СтруктураОтбора = Новый Структура; 
			ИмяРесурса = Неопределено;
			Для каждого ЭлементСтруктуры Из ДополнительныеПараметры Цикл  
				Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("Null") Тогда
					ИмяРесурса = ЭлементСтруктуры.Ключ;
					Прервать;
				ИначеЕсли ЗначениеЗаполнено(ЭлементСтруктуры.Значение) Тогда
					СтруктураОтбора.Вставить(ЭлементСтруктуры.Ключ,ЭлементСтруктуры.Значение);
				КонецЕсли;
			КонецЦикла;    
			Если ИмяРесурса <> Неопределено Тогда 
				МассивКУдалению = Новый Массив;
				Если ИмяРесурса = "КоличествоПригодныхКОхоте" ИЛИ ИмяРесурса = "КоличествоПригодныхКСтельности"
					 	ИЛИ ИмяРесурса = "ПроцентВыявления" ИЛИ ИмяРесурса = "ИндексЗачатияPR"
						Тогда
					Для каждого Элемент Из СтруктураОтбора Цикл
					    Если Элемент.Ключ = "Ферма" Тогда
							СтруктураОтбора.Вставить("_"+Элемент.Ключ,Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						ИначеЕсли Элемент.Ключ = "ДатаНачалаЦикла" Тогда
							СтруктураОтбора.Вставить("_"+Элемент.Ключ,Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						ИначеЕсли Элемент.Ключ = "ДатаОкончанияЦикла" Тогда
							СтруктураОтбора.Вставить("_"+Элемент.Ключ,Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						ИначеЕсли Элемент.Ключ = "ПроизводственнаяГруппа" Тогда
							СтруктураОтбора.Вставить("_"+Элемент.Ключ,Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						КонецЕсли;
					КонецЦикла; 
					Для каждого Элемент Из МассивКУдалению Цикл
						СтруктураОтбора.Удалить(Элемент);
					КонецЦикла; 
					Если ИмяРесурса = "ПроцентВыявления" ИЛИ ИмяРесурса = "ИндексЗачатияPR" Тогда
						ОткрытьОтчётСОтбором(СтруктураОтбора,"РасшифровкаПригодныхКОхоте",Неопределено);
					Иначе
						ОткрытьОтчётСОтбором(СтруктураОтбора,"РасшифровкаПригодныхКОхоте",ИмяРесурса);
					КонецЕсли;
				Иначе
					Для каждого Элемент Из СтруктураОтбора Цикл
					    Если Элемент.Ключ = "Ферма" Тогда
							СтруктураОтбора.Вставить(Элемент.Ключ+"1",Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						ИначеЕсли Элемент.Ключ = "ДатаНачалаЦикла" Тогда
							СтруктураОтбора.Вставить(Элемент.Ключ+"1",Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						ИначеЕсли Элемент.Ключ = "ДатаОкончанияЦикла" Тогда
							СтруктураОтбора.Вставить(Элемент.Ключ+"1",Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);   
						ИначеЕсли Элемент.Ключ = "ПроизводственнаяГруппа" Тогда
							СтруктураОтбора.Вставить(Элемент.Ключ+"1",Элемент.Значение);
							МассивКУдалению.Добавить(Элемент.Ключ);
						КонецЕсли;
					КонецЦикла; 
					Для каждого Элемент Из МассивКУдалению Цикл
						СтруктураОтбора.Удалить(Элемент);
					КонецЦикла;
					ОткрытьОтчётСОтбором(СтруктураОтбора,"РасшифровкаОсеменений",ИмяРесурса);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ПолучитьСтруктуруРасшифровки(СтруктураПолей, Расшифровка)
	
	ДанныеРасшифровкиКомпоновки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ПолучитьЗначенияПолей(СтруктураПолей, ДанныеРасшифровкиКомпоновки.Элементы, Расшифровка);
	
	ЭлементРасшифровки = ДанныеРасшифровкиКомпоновки.Элементы.Получить(Расшифровка);
	ПолучитьЗначениеПоля(СтруктураПолей, ЭлементРасшифровки);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗначенияПолей(СтруктураПолей, ЭлементыРасшифровки, Расшифровка)
	
	Для Каждого Родитель Из ЭлементыРасшифровки.Получить(Расшифровка).ПолучитьРодителей() Цикл
		
		ПолучитьЗначенияПолей(СтруктураПолей, ЭлементыРасшифровки, Родитель.Идентификатор);
		ПолучитьЗначениеПоля(СтруктураПолей, Родитель);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗначениеПоля(СтруктураПолей, ЭлементРасшифровки)
	
	Если НЕ ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
		
		Для Каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			Если ТипЗнч(Поле) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
				СтруктураПолей.Вставить(Поле.Поле, Поле.Значение);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура ОткрытьОтчётСОтбором(ДополнительныеПараметры,НаименованиеВариантаОтчета,ИмяРесурса)
	
	НастройкиЗдесь = Отчет.КомпоновщикНастроек.Настройки;  
	НастройкиПользовательскиеЗдесь = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки; 
	
	МассивОтбора = Новый Массив;
	Для каждого Элемент Из НастройкиПользовательскиеЗдесь.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементОтбораКомпоновкиДанных") И Элемент.Использование = Истина Тогда 
			ПолеСКД = Неопределено;
			Для каждого ЭлементОтбора Из НастройкиЗдесь.Отбор.Элементы Цикл
				Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = Элемент.ИдентификаторПользовательскойНастройки Тогда
					ПолеСКД = ЭлементОтбора.ЛевоеЗначение;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ДополнительныеПараметры.Свойство(Строка(ПолеСКД)) = Ложь Тогда
				МассивОтбора.Добавить(Новый Структура("ИмяПоля,ВидСравнения,Значение",Строка(ПолеСКД), Элемент.ВидСравнения, Элемент.ПравоеЗначение));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ИДНастройкиПериодЗдесь = НастройкиЗдесь.ПараметрыДанных.Элементы.Найти("ПериодОтчета").ИдентификаторПользовательскойНастройки;
	НайденныйПараметрПериод = НастройкиПользовательскиеЗдесь.Элементы.Найти(ИДНастройкиПериодЗдесь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючВарианта", НаименованиеВариантаОтчета);
	Если ИмяРесурса <> Неопределено Тогда
		ПараметрыФормы.Вставить("ИмяОтбора", ИмяРесурса);
	КонецЕсли;
	ПараметрыФормы.Вставить("МассивОтбора", МассивОтбора);
	Если НайденныйПараметрПериод <> Неопределено Тогда
		ПериодОтчета = НайденныйПараметрПериод.Значение;
		ПараметрыФормы.Вставить("ПериодРасшифровки", ПериодОтчета);
	КонецЕсли;
	ПараметрыФормы.Вставить("Отбор", ДополнительныеПараметры);
	ОткрытьФорму(ЭтотОбъект.ИмяФормы, ПараметрыФормы, , Новый УникальныйИдентификатор);
	
КонецПроцедуры //  КомандаОткрытьОтчётСОтбором     

&НаСервере
Процедура УстановитьПользовательскийПараметрСКД(Настройки, ИмяПараметра, Значение)
	
	НастройкиЗдесь = Отчет.КомпоновщикНастроек.Настройки;  
	ПараметрДанных = НастройкиЗдесь.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	
	Если ЗначениеЗаполнено(ПараметрДанных.ИдентификаторПользовательскойНастройки) Тогда
		ПользовательскийПараметр = Настройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		ПользовательскийПараметр.Использование = Истина;
		ПользовательскийПараметр.Значение = Значение;
	КонецЕсли;
	
КонецПроцедуры  //  УстановитьПользовательскийПараметрСКД  

&НаСервере
Процедура УстановитьОтборСКД(ИмяПоля,ВидСравнения=Неопределено,Значение=Неопределено)
	
	Настройки = Отчет.КомпоновщикНастроек.Настройки;
	ПолеСКД = Новый ПолеКомпоновкиДанных(ИмяПоля); 
	ЭлементОтбора = Неопределено;
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл
		Если ЭлементНастройки.ЛевоеЗначение = ПолеСКД Тогда 
			ЭлементОтбора = ЭлементНастройки;
	        Прервать;
	    КонецЕсли;
	КонецЦикла; 
	Если ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = ПолеСКД;
	КонецЕсли;
	Если ВидСравнения=Неопределено Тогда
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Иначе	
		ЭлементОтбора.ВидСравнения = ВидСравнения;
	КонецЕсли;    
	
	Если Значение<>Неопределено Тогда
		ЭлементОтбора.ПравоеЗначение = Значение;
	КонецЕсли;    
	
	ЭлементОтбора.Использование = Истина;
	
	
	//Настройки = Отчет.КомпоновщикНастроек.Настройки;
	//ПолеСКД = Новый ПолеКомпоновкиДанных(ИмяПараметра); 
	//ЭлементОтбора = Неопределено;
	//Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл
	//	Если ЭлементНастройки.ЛевоеЗначение = ПолеСКД Тогда 
	//		ЭлементОтбора = ЭлементНастройки;
	//        Прервать;
	//    КонецЕсли;
	//КонецЦикла; 
	//Если ЭлементОтбора = Неопределено Тогда
	//	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение  = ПолеСКД;
	//КонецЕсли;
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	//ЭлементОтбора.Использование = Истина;
	
КонецПроцедуры 

