
Процедура ЗаписатьРодственныеСвязи(Животное) Экспорт
	
	НаборЗаписей = РегистрыСведений.РодственныеСвязи.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Животное.Установить(Животное);
	НаборЗаписей.Записать();
	
	Если ЗначениеЗаполнено(Животное.Отец) Тогда
		ЗаписатьРодственныеСвязиРекурсивно(Животное, Животное.Отец, 1, "О");	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Животное.Мать) Тогда
		ЗаписатьРодственныеСвязиРекурсивно(Животное, Животное.Мать, 1, "М");	
	КонецЕсли;

КонецПроцедуры  

Процедура ЗаписатьРодственныеСвязиРекурсивно(Животное, Предок, Ряд, ТипСвязи)

	МенеджерЗаписи = РегистрыСведений.РодственныеСвязи.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Животное		= Животное;
	МенеджерЗаписи.Предок 		= Предок;
	МенеджерЗаписи.Ряд 			= Ряд;
	МенеджерЗаписи.РядРимскими 	= ПолучитьРядРимскими(Ряд);
	МенеджерЗаписи.ТипСвязи		= ТипСвязи;
	МенеджерЗаписи.Записать(); 
	
	Если Ряд = 4 Тогда
		Возврат;	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Предок.Отец) Тогда
		ЗаписатьРодственныеСвязиРекурсивно(Животное, Предок.Отец, Ряд + 1, "О" + ТипСвязи);	
	КонецЕсли;
	Если ЗначениеЗаполнено(Предок.Мать) Тогда
		ЗаписатьРодственныеСвязиРекурсивно(Животное, Предок.Мать, Ряд + 1, "М" + ТипСвязи);	
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьРядРимскими(Число)

	МассивАрабскихЧисел = СтрРазделить("1,2,3,4,5,6,7,8,9,10,11,12,13,14,15",",",Ложь);
	МассивРимскихЧисел = СтрРазделить("I,II,III,IV,V,VI,VII,VIII,IX,X,XI,XII,XIII,XIV,XV",",",Ложь);
	ИндексВМассиве = МассивАрабскихЧисел.Найти(Строка(Число));
	Если ИндексВМассиве <> Неопределено Тогда
	    Возврат МассивРимскихЧисел.Получить(ИндексВМассиве);
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;

КонецФункции

Функция СформироватьДеревоСвязей(Родословная) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РодственныеСвязи.Предок КАК Предок,
	|	РодственныеСвязи.Ряд КАК Ряд,
	|	РодственныеСвязи.РядРимскими КАК РядРимскими,
	|	РодственныеСвязи.ТипСвязи КАК ТипСвязи,
	|	РодственныеСвязи.Предок.Пол КАК ПолПредка
	|ИЗ
	|	РегистрСведений.РодственныеСвязи КАК РодственныеСвязи
	|ГДЕ
	|	РодственныеСвязи.Животное = &Родословная
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ряд,
	|	ПолПредка УБЫВ";
	Запрос.УстановитьПараметр("Родословная", Родословная);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДеревоСвязей = Новый ДеревоЗначений;           
	ДеревоСвязей.Колонки.Добавить("Предок", Новый ОписаниеТипов("СправочникСсылка.РодословнаяЖивотных"));
	ДеревоСвязей.Колонки.Добавить("ТипСвязи", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(15,ДопустимаяДлина.Переменная)));
	КорневаяСтрока = ДеревоСвязей;
	
	Пока Выборка.Следующий() Цикл 
		
		СтрокаДобавления = КорневаяСтрока;
		Если СтрДлина(Выборка.ТипСвязи) > 1 Тогда   
			НайденнаяРодительскаяСтрока = КорневаяСтрока.Строки.Найти(Сред(Выборка.ТипСвязи,2),"ТипСвязи",Истина);
			Если НайденнаяРодительскаяСтрока <> Неопределено Тогда
				СтрокаДобавления = НайденнаяРодительскаяСтрока;
			КонецЕсли;
		КонецЕсли; 
		НоваяСтрока = СтрокаДобавления.Строки.Добавить();
		НоваяСтрока.Предок = Выборка.Предок;
		НоваяСтрока.ТипСвязи = Выборка.ТипСвязи;
		
	КонецЦикла;
	
	Возврат ДеревоСвязей;

КонецФункции




	