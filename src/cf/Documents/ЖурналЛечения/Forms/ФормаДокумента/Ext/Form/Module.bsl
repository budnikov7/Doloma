&НаКлиенте
Перем СтараяФерма;
&НаКлиенте
Перем РанееИспользованнаяСтрока;
&НаКлиенте
Перем ПолеСвязи;
&НаКлиенте
Перем СтараяДата;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.Ферма = Объект.Автор.ОсновнаяФерма; 
		Объект.Склад = Объект.Автор.ОсновнойСклад;
		Объект.ЛечащийВрач = ПараметрыСеанса.ТекущийПользователь;
		Объект.Дата = ТекущаяДата();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСписокКолонокФормы();
	ОбновитьРасчетныеКолонки();
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	
КонецПроцедуры  

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьРасчетныеКолонки();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Для каждого Строчка Из Объект.ЖивотныеНаЛечении Цикл
		Если Объект.ВидЗаболевания = ПредопределенноеЗначение("Перечисление.ВидыЗаболеваний.Мастит") Тогда
			Строчка.Заболевание = ПредопределенноеЗначение("Справочник.Заболевания.Мастит");	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты) 
	
	Если Константы.ПроверятьЗаполнениеПрепаратов.Получить() = Истина Тогда
		Если Объект.ЖивотныеНаЛечении.Количество() > 0 И Объект.СписокИспользованныхПрепаратов.Количество() = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Заполните препараты применяемые при лечении",,"Объект.СписокИспользованныхПрепаратов",,Отказ);
		КонецЕсли; 
	КонецЕсли;	
	
КонецПроцедуры

//ОБРАБОТЧИКИ СОБЫТИЙ 
&НаКлиенте
Процедура ФермаПриИзменении(Элемент)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОкончанияВопросаОЗаполнении", ЭтотОбъект);
	
	Если Объект.ЖивотныеОжидающие.Количество() +
				Объект.ЖивотныеВСтадо.Количество() > 0 Тогда
				
				ПоказатьВопрос(ОписаниеОповещения, "При изменении фермы данные о животных будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОкончанияВопросаОЗаполнении(КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФермаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	СтараяФерма = Объект.Ферма;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотныеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", Объект.Ферма);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотныеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(Объект.Ферма, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеОжидающиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещение", ОбщегоНазначения);
	ПоказатьПредупреждение(ОписаниеОповещения, "Добавление данных вручную невозможно. Перенесите животного из списка 'Животные на лечении'");
	
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеВСтадоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещение", ОбщегоНазначения);
	ПоказатьПредупреждение(ОписаниеОповещения, "Добавление данные вручную невозможно. Перенесите животного из списка 'Животные на проверке'");
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Животное) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Заболевание) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.СписокПрепаратовПолеСвязи = ?(ЗначениеЗаполнено(ТекущиеДанные.СписокПрепаратовПолеСвязи), ТекущиеДанные.СписокПрепаратовПолеСвязи, Новый УникальныйИдентификатор);
	ТекущиеДанные.НачалоЛечения 	= ?(ЗначениеЗаполнено(ТекущиеДанные.НачалоЛечения), ТекущиеДанные.НачалоЛечения, Объект.Дата);
	ТекущиеДанные.ДнейБолезни		= ОбщегоНазначения.РазностьДат(Объект.Дата, ТекущиеДанные.НачалоЛечения,, Истина) + 1;	
	
	Отбор = Новый Структура;
	Отбор.Вставить("Животное", 		ТекущиеДанные.Животное);
	Отбор.Вставить("Заболевание", 	ТекущиеДанные.Заболевание);
	НайденныеСтроки = Объект.ЖивотныеНаЛечении.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 1 Тогда
		ПоказатьПредупреждение(, "В данном документе есть животное с таким заболеванием. Невозможно добавить две одинаковых строки");
		ТекущиеДанные.Заболевание = "";
		Возврат;
	КонецЕсли;
	
	Если Объект.ВидЗаболевания = ПредопределенноеЗначение("Перечисление.ВидыЗаболеваний.Мастит") Тогда
		ТекущиеДанные.МаститБольнаяЧасть = ?(ЗначениеЗаполнено(ТекущиеДанные.МаститБольнаяЧасть), ТекущиеДанные.МаститБольнаяЧасть, "0000");
		ТекущиеДанные.БольнойУчасток = "" + 
			?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 1, 1)), "ПЛ", "__") + "|" +
			?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 2, 1)), "ПП", "__") + "|" +
			?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 3, 1)), "ЗЛ", "__") + "|" +
			?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 4, 1)), "ЗП", "__");
	Иначе
		ТекущиеДанные.МаститБольнаяЧасть = "";	
		ТекущиеДанные.БольнойУчасток = "";
	КонецЕсли;

	ПолеСвязи = ТекущиеДанные.СписокПрепаратовПолеСвязи;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииСхемаЛеченияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииБольнойУчастокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормаВыбораБольногоУчастка 				= ПолучитьФорму("Документ.ЖурналЛечения.Форма.ФормаВыбораБольногоУчастка", , ЭтотОбъект);
	ФормаВыбораБольногоУчастка.БольнаяЧасть = ТекущиеДанные.МаститБольнаяЧасть;
	ФормаВыбораБольногоУчастка.Животное 	= ТекущиеДанные.Животное;
	ФормаВыбораБольногоУчастка.Открыть();
		
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаболеванияПриИзменении(Элемент)
	ОбновитьСписокКолонокФормы();
	ОбновитьСписокЖивотных();
КонецПроцедуры   

&НаКлиенте
Процедура ВидЗаболеванияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) 
	
	Если ВыбранноеЗначение <> Объект.ВидЗаболевания И (Объект.ЖивотныеНаЛечении.Количество() ИЛИ Объект.ЖивотныеОжидающие.Количество() ИЛИ Объект.ЖивотныеВСтадо.Количество()) Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыОповещения = Новый Структура("ВыбранныйВидЗаболевания",ВыбранноеЗначение);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВидЗаболеванияОбработкаВыбораЗавершение", ЭтотОбъект,ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, "При изменении вида заболевания данные о животных будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;  
	
КонецПроцедуры  

&НаКлиенте
Процедура ВидЗаболеванияОбработкаВыбораЗавершение(Результат, ПараметрыОповещения) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ВидЗаболевания = ПараметрыОповещения.ВыбранныйВидЗаболевания; 
		ОчиститьТЧПоВидуЗаболевания("ЖивотныеВСтадо");
		ОчиститьТЧПоВидуЗаболевания("ЖивотныеНаЛечении");
		ОчиститьТЧПоВидуЗаболевания("ЖивотныеОжидающие");
		ОбновитьСписокКолонокФормы();
		ОбновитьСписокЖивотных();
	КонецЕсли;

КонецПроцедуры // ВидЗаболеванияОбработкаВыбораЗавершение()

&НаСервере
Процедура ОчиститьТЧПоВидуЗаболевания(ТЧ)
	
	ЭтоМастит = (Объект.ВидЗаболевания = Перечисления.ВидыЗаболеваний.Мастит);
	ЗаболеваниеМастит = Справочники.Заболевания.Мастит;
	МассивКУдалению = Новый Массив;
	Для каждого Строчка Из Объект[ТЧ] Цикл
		Если ЭтоМастит Тогда
			Если Строчка.Заболевание <> ЗаболеваниеМастит Тогда 
				МассивКУдалению.Добавить(Строчка);
			КонецЕсли;	
		Иначе	
			Если Строчка.Заболевание = ЗаболеваниеМастит Тогда 
				МассивКУдалению.Добавить(Строчка);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	
	Для каждого Элемент Из МассивКУдалению Цикл
		Объект[ТЧ].Удалить(Элемент);
	КонецЦикла;

КонецПроцедуры // ОчиститьТЧПоВидуЗаболевания()

&НаКлиенте
Процедура ДатаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтараяДата = Объект.Дата;
КонецПроцедуры  

&НаКлиенте
Процедура ДатаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтараяДата = Объект.Дата;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Для каждого СтрокаТабличнойЧасти Из Объект.ЖивотныеНаЛечении Цикл
		
		Если НачалоДня(СтрокаТабличнойЧасти.НачалоЛечения) = НачалоДня(СтараяДата) Тогда
			СтрокаТабличнойЧасти.НачалоЛечения = НачалоДня(Объект.Дата);
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из Объект.ЖивотныеОжидающие Цикл
		
		Если НачалоДня(СтрокаТабличнойЧасти.НачалоЛечения) = НачалоДня(СтараяДата) Тогда
			СтрокаТабличнойЧасти.НачалоЛечения = НачалоДня(Объект.Дата);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеОжидающиеПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ЖивотныеОжидающие.ТекущиеДанные;
	
	Отказ = НачалоДня(ТекущиеДанные.НачалоЛечения) <> НачалоДня(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокИспользованныхПрепаратовПрепаратПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокИспользованныхПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Препарат, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЗаболеваниеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЗаболеваний(Объект.ВидЗаболевания));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЗаболеваниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ссылка", ДанныеЖивотных.ПолучитьСписокЗаболеваний(Объект.ВидЗаболевания));
	СтрОтбор = Новый Структура("Отбор",СписокПараметров);
	
	ОткрытьФорму("Справочник.Заболевания.ФормаВыбора",СтрОтбор,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЗаболеваниеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если НачалоДня(ТекущиеДанные.НачалоЛечения) <> НачалоДня(Объект.Дата) Тогда
		ПоказатьПредупреждение(, "Заболевание нельзя изменить в ходе лечения. Добавьте новую строку");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура ЖивотныеНаЛеченииЗаболеваниеПриИзменении(Элемент) 
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Заболевание) Тогда
		ТекущиеДанные.НачалоЛечения = Объект.Дата;
		ТекущиеДанные.ДнейБолезни = 1;
	Иначе  
		ЗаполнитьДанныеПоБолезниЖивотного(Объект.Дата,Элементы.ЖивотныеНаЛечении.ТекущаяСтрока);
		СтруктураОтбора = Новый Структура("Заболевание", ТекущиеДанные.Заболевание);
		НайденныеСтроки = ТаблицаБолезней.НайтиСтроки(СтруктураОтбора); 
		Если НайденныеСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ТекущиеДанные,НайденныеСтроки[0]);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотныеПриИзменении(Элемент)   
	ЗаполнитьДанныеПоЖивотному();	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьДанныеПоЖивотному()

	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;    
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьДанныеПоБолезниЖивотного(Объект.Дата,Элементы.ЖивотныеНаЛечении.ТекущаяСтрока); 
	Если ТаблицаБолезней.Количество() > 1 Тогда   
		ОбработкаВыбораЖивотного();
	ИначеЕсли ТаблицаБолезней.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТаблицаБолезней[0]); 
		Если ЗначениеЗаполнено(ТекущиеДанные.МаститБольнаяЧасть) Тогда
			ТекущиеДанные.БольнойУчасток = "" + 
				?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 1, 1)), "ПЛ", "__") + "|" +
				?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 2, 1)), "ПП", "__") + "|" +
				?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 3, 1)), "ЗЛ", "__") + "|" +
				?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 4, 1)), "ЗП", "__");
		КонецЕсли;
	ИначеЕсли ТаблицаБолезней.Количество() = 0 Тогда
		ТекущиеДанные.НачалоЛечения = Объект.Дата;
		ТекущиеДанные.ДнейБолезни = 1; 
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.СписокПрепаратовПолеСвязи) Тогда
		    ТекущиеДанные.СписокПрепаратовПолеСвязи = Новый УникальныйИдентификатор;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьДанныеПоЖивотному()


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборБольнойЧасти" 
			И Источник = ЭтаФорма Тогда
			
		ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.МаститБольнаяЧасть = Параметр;
		ТекущиеДанные.БольнойУчасток = "" + 
														?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 1, 1)), "ПЛ", "__") + "|" +
														?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 2, 1)), "ПП", "__") + "|" +
														?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 3, 1)), "ЗЛ", "__") + "|" +
														?(Число(Сред(ТекущиеДанные.МаститБольнаяЧасть, 4, 1)), "ЗП", "__");
		ЭтотОбъект.Модифицированность = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущиеДанные.Животное = ВыбранноеЗначение; 
	ЗаполнитьДанныеПоЖивотному();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЖивотного()   
	
	Элементы.ГруппаВыборБолезни.Видимость = Истина;
	идстро1 = ТаблицаБолезней[0].ПолучитьИдентификатор();	
	Элементы.ТаблицаБолезней.ТекущаяСтрока = идстро1;
	ПодключитьОбработчикОжидания("ПоказатьВсплывающуюГруппу",0.1,Истина);
	ПодключитьОбработчикОжидания("СкрытьВсплывающуюГруппу",1); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБолезнейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	ТекБолезнь = Элементы.ТаблицаБолезней.ТекущиеДанные;
	Если ТекБолезнь = Неопределено Тогда Возврат КонецЕсли;  
	ТекЖивотное = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	ЗаполнитьЗначенияСвойств(ТекЖивотное,ТекБолезнь);
	ЭтотОбъект.ТекущийЭлемент = Элементы.ЖивотныеНаЛеченииЖивотные;
	Элементы.ГруппаВыборБолезни.Видимость = Ложь; 
	
КонецПроцедуры


//СЛУЖЕБНЫЕ ФУНКЦИИ    

&НаКлиенте
Процедура ОбновитьРасчетныеКолонки()

	Для каждого СтрокаТабличнойЧасти Из Объект.ЖивотныеНаЛечении Цикл
		
		СтрокаТабличнойЧасти.ДнейБолезни = ОбщегоНазначения.РазностьДат(Объект.Дата, СтрокаТабличнойЧасти.НачалоЛечения,, Истина) + 1;
		
		Если Объект.ВидЗаболевания = ПредопределенноеЗначение("Перечисление.ВидыЗаболеваний.Мастит") И НЕ ПустаяСтрока(СтрокаТабличнойЧасти.МаститБольнаяЧасть) Тогда
			СтрокаТабличнойЧасти.БольнойУчасток = "" + 
			?(Число(Сред(СтрокаТабличнойЧасти.МаститБольнаяЧасть, 1, 1)), "ПЛ", "__") + "|" +
			?(Число(Сред(СтрокаТабличнойЧасти.МаститБольнаяЧасть, 2, 1)), "ПП", "__") + "|" +
			?(Число(Сред(СтрокаТабличнойЧасти.МаститБольнаяЧасть, 3, 1)), "ЗЛ", "__") + "|" +
			?(Число(Сред(СтрокаТабличнойЧасти.МаститБольнаяЧасть, 4, 1)), "ЗП", "__");
		Иначе
			СтрокаТабличнойЧасти.МаститБольнаяЧасть = "";
			СтрокаТабличнойЧасти.БольнойУчасток = "";
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ОбновитьРасчетныеКолонки()

&НаКлиенте
Процедура ПоказатьВсплывающуюГруппу()
    Элементы.ГруппаВыборБолезни.Видимость = Истина;
    Элементы.ГруппаВыборБолезни.Показать();
КонецПроцедуры

&НаКлиенте
Процедура СкрытьВсплывающуюГруппу()
    Если ЭтотОбъект.ТекущийЭлемент<>Элементы.ТаблицаБолезней и Элементы.ГруппаВыборБолезни.Видимость Тогда
        Элементы.ГруппаВыборБолезни.Видимость = Истина;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОкончанияВопросаОЗаполнении(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Объект.ЖивотныеВСтадо.Очистить();
		Объект.ЖивотныеНаЛечении.Очистить();
		Объект.ЖивотныеОжидающие.Очистить();
		
		ОбновитьСписокЖивотных();
	Иначе
		
		Объект.Ферма = СтараяФерма;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ОбновитьСписокКолонокФормы()
	
	Элементы.ГруппаДанныхТаблиц.Доступность = ЗначениеЗаполнено(Объект.ВидЗаболевания);
	
	ЭтоМастит = (Объект.ВидЗаболевания = Перечисления.ВидыЗаболеваний.Мастит);
	
	Элементы.ЖивотныеНаЛечении.ПодчиненныеЭлементы.ЖивотныеНаЛеченииЗаболевание.Видимость = НЕ ЭтоМастит;
	Элементы.ЖивотныеНаЛечении.ПодчиненныеЭлементы.ЖивотныеНаЛеченииБольнойУчасток.Видимость = ЭтоМастит; 
	Элементы.ЖивотныеНаЛечении.КоманднаяПанель.ПодчиненныеЭлементы.ЖивотныеНаЛеченииПеренестиЖивотноеНаПроверку.Видимость = ЭтоМастит;
	Элементы.ЖивотныеНаЛечении.КоманднаяПанель.ПодчиненныеЭлементы.ЖивотныеНаЛеченииПеренестиЖивотноеВСтадо.Видимость = НЕ ЭтоМастит;
	Элементы.ГруппаДанныхТаблиц.ПодчиненныеЭлементы.ГруппаДанныхТаблицСтраницы.ПодчиненныеЭлементы.ЖивотныеОжидание.Видимость = ЭтоМастит; 
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПоБолезниЖивотного(Дата, ТекущаяСтрока)
	
	ТекущиеДанные = Объект.ЖивотныеНаЛечении.НайтиПоИдентификатору(ТекущаяСтрока);  
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Животное) Тогда
		
		МассивЗаболеванийИсключить = Новый Массив;
		Для каждого Строчка Из Объект.ЖивотныеНаЛечении Цикл
			Если Строчка.Животное = ТекущиеДанные.Животное И Строчка.ПолучитьИдентификатор() <> ТекущаяСтрока И ЗначениеЗаполнено(Строчка.Заболевание) Тогда
				МассивЗаболеванийИсключить.Добавить(Строчка.Заболевание);
			КонецЕсли;
		КонецЦикла; 
		Для каждого Строчка Из Объект.ЖивотныеВСтадо Цикл
			Если Строчка.Животное = ТекущиеДанные.Животное И Строчка.ПолучитьИдентификатор() <> ТекущаяСтрока И ЗначениеЗаполнено(Строчка.Заболевание) Тогда
				МассивЗаболеванийИсключить.Добавить(Строчка.Заболевание);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПериодыБолезнейЖивотныхСрезПоследних.Заболевание КАК Заболевание,
			|	ПериодыБолезнейЖивотныхСрезПоследних.СтатусБолезни КАК СтатусБолезни,
			|	ПериодыБолезнейЖивотныхСрезПоследних.СхемаЛечения КАК СхемаЛечения,
			|	ПериодыБолезнейЖивотныхСрезПоследних.СписокПрепаратовПолеСвязи КАК СписокПрепаратовПолеСвязи,
			|	ПериодыБолезнейЖивотныхСрезПоследних.МаститБольнаяЧасть КАК МаститБольнаяЧасть,
			|	ПериодыБолезнейЖивотныхСрезПоследних.Период КАК НачалоЛечения,
			|	РАЗНОСТЬДАТ(ПериодыБолезнейЖивотныхСрезПоследних.Период, &ДатаПроверки, ДЕНЬ) + 1 КАК ДнейБолезни
			|ИЗ
			|	РегистрСведений.ПериодыБолезнейЖивотных.СрезПоследних(
			|			&ДатаПроверки,
			|			Животное = &Животное
			|				И ВЫБОР
			|					КОГДА &ВидЗаболевания = ЗНАЧЕНИЕ(Перечисление.ВидыЗаболеваний.Мастит)
			|						ТОГДА Заболевание = ЗНАЧЕНИЕ(Справочник.Заболевания.Мастит)
			|					ИНАЧЕ Заболевание <> ЗНАЧЕНИЕ(Справочник.Заболевания.Мастит)
			|				КОНЕЦ
			|				И НЕ Заболевание В (&МассивЗаболеванийИсключить)) КАК ПериодыБолезнейЖивотныхСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Выбытия.СрезПоследних(&ДатаПроверки, Животное = &Животное) КАК ВыбытияСрезПоследних
			|		ПО ПериодыБолезнейЖивотныхСрезПоследних.Животное = ВыбытияСрезПоследних.Животное
			|ГДЕ
			|	ВыбытияСрезПоследних.Животное ЕСТЬ NULL
			|	И ПериодыБолезнейЖивотныхСрезПоследних.СтатусБолезни <> ЗНАЧЕНИЕ(Перечисление.ПериодыЗаболеваний.КонецЛечения)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДнейБолезни УБЫВ";
		
		Запрос.УстановитьПараметр("ДатаПроверки", Дата);
		Запрос.УстановитьПараметр("Животное", ТекущиеДанные.Животное);
		Запрос.УстановитьПараметр("ВидЗаболевания", Объект.ВидЗаболевания);
		Запрос.УстановитьПараметр("МассивЗаболеванийИсключить", МассивЗаболеванийИсключить);
		
		Выборка = Запрос.Выполнить().Выбрать();
		ТаблицаБолезней.Очистить();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаБолезней.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры  

&НаСервере
Функция ОбновитьСписокЖивотных()
	
	//ЗАПОЛНИМ ТЕКУЩИМИ БОЛЬНЫМИ ЖИВОТНЫМИ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыБолезнейЖивотныхСрезПоследних.Животное КАК Животное,
		|	ПериодыБолезнейЖивотныхСрезПоследних.Заболевание КАК Заболевание,
		|	ПериодыБолезнейЖивотныхСрезПоследних.СтатусБолезни КАК СтатусБолезни,
		|	ПериодыБолезнейЖивотныхСрезПоследних.СхемаЛечения КАК СхемаЛечения,
		|	ПериодыБолезнейЖивотныхСрезПоследних.СписокПрепаратовПолеСвязи КАК СписокПрепаратовПолеСвязи,
		|	ПериодыБолезнейЖивотныхСрезПоследних.МаститБольнаяЧасть КАК МаститБольнаяЧасть,
		|	ПериодыБолезнейЖивотныхСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ПериодыБолезнейЖивотных.СрезПоследних(
		|			&ДатаПроверки,
		|			Регистратор.Ферма = &Ферма
		|				И ВЫБОР
		|					КОГДА &ВидЗаболевания = ЗНАЧЕНИЕ(Перечисление.ВидыЗаболеваний.Мастит)
		|						ТОГДА Заболевание = ЗНАЧЕНИЕ(Справочник.Заболевания.Мастит)
		|					ИНАЧЕ Заболевание <> ЗНАЧЕНИЕ(Справочник.Заболевания.Мастит)
		|				КОНЕЦ) КАК ПериодыБолезнейЖивотныхСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Выбытия.СрезПоследних(&ДатаПроверки, ) КАК ВыбытияСрезПоследних
		|		ПО ПериодыБолезнейЖивотныхСрезПоследних.Животное = ВыбытияСрезПоследних.Животное
		|ГДЕ
		|	ВыбытияСрезПоследних.Животное ЕСТЬ NULL
		|	И ПериодыБолезнейЖивотныхСрезПоследних.СтатусБолезни <> ЗНАЧЕНИЕ(Перечисление.ПериодыЗаболеваний.КонецЛечения)";
	
	Запрос.УстановитьПараметр("ДатаПроверки", Объект.Дата);
	Запрос.УстановитьПараметр("Ферма", Объект.Ферма);
	Запрос.УстановитьПараметр("ВидЗаболевания", Объект.ВидЗаболевания);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Объект.ЖивотныеОжидающие.Очистить();
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.СтатусБолезни = Перечисления.ПериодыЗаболеваний.ОжиданиеТеста Тогда
			
			НоваяСтрока 							= Объект.ЖивотныеОжидающие.Добавить();
			НоваяСтрока.Животное 					= СтрокаТабличнойЧасти.Животное;
			НоваяСтрока.НачалоЛечения 				= СтрокаТабличнойЧасти.Период;
			НоваяСтрока.Заболевание 				= СтрокаТабличнойЧасти.Заболевание;
			НоваяСтрока.СписокПрепаратовПолеСвязи	= СтрокаТабличнойЧасти.СписокПрепаратовПолеСвязи;
			
		КонецЕсли;
		
	КонецЦикла;
	//
	//ОбновитьСписокКолонокФормы();
	
КонецФункции

&НаКлиенте
Процедура ПеренестиЖивотноеНаПроверку(Команда)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ПОИЩЕМ, МОЖЕТ УЖЕ ЕСТЬ? 
	НайденныеСтроки = Объект.ЖивотныеОжидающие.НайтиСтроки(Новый Структура("Животное, Заболевание", ТекущиеДанные.Животное, ТекущиеДанные.Заболевание));
	Если Не НайденныеСтроки.Количество() Тогда
		
		НоваяСтрока 							= Объект.ЖивотныеОжидающие.Добавить();
		НоваяСтрока.Животное 					= ТекущиеДанные.Животное;
		НоваяСтрока.НачалоЛечения 				= Объект.Дата;
		НоваяСтрока.Заболевание 				= ТекущиеДанные.Заболевание;
		НоваяСтрока.СписокПрепаратовПолеСвязи	= ТекущиеДанные.СписокПрепаратовПолеСвязи;
	Иначе
		
	КонецЕсли;
	
	//УДАЛИМ СТРОКУ ИЗ ОСНОВНОЙ ТАБ ЧАСТИ 
	Объект.ЖивотныеНаЛечении.Удалить(Объект.ЖивотныеНаЛечении.НайтиПоИдентификатору(ТекущиеДанные.ПолучитьИдентификатор()));
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиЖивотноеВСтадо(Команда)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Заболевание = ПредопределенноеЗначение("Перечисление.ВидыЗаболеваний.Мастит") Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещение", ОбщегоНазначения);
		ПоказатьПредупреждение(ОписаниеОповещения, "В стадо можно отправить только животное, не болеющее Маститом");
		
		Возврат;
	КонецЕсли;
	
	//ПОИЩЕМ, МОЖЕТ УЖЕ ЕСТЬ? 
	НайденныеСтроки = Объект.ЖивотныеВСтадо.НайтиСтроки(Новый Структура("Животное, Заболевание", ТекущиеДанные.Животное, ТекущиеДанные.Заболевание));
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		НоваяСтрока 							= Объект.ЖивотныеВСтадо.Добавить();
		НоваяСтрока.Животное 					= ТекущиеДанные.Животное;
		НоваяСтрока.Заболевание 				= ТекущиеДанные.Заболевание;
		НоваяСтрока.СписокПрепаратовПолеСвязи 	= ТекущиеДанные.СписокПрепаратовПолеСвязи;
		
	КонецЕсли;
	
	//УДАЛИМ СТРОКУ ИЗ ОСНОВНОЙ ТАБ ЧАСТИ 
	Объект.ЖивотныеНаЛечении.Удалить(Объект.ЖивотныеНаЛечении.НайтиПоИдентификатору(ТекущиеДанные.ПолучитьИдентификатор()));
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиЖивотноеВСтадоСПроверки(Команда)
	
	ТекущиеДанные = Элементы.ЖивотныеОжидающие.ТекущиеДанные;
	
	//ПОИЩЕМ, МОЖЕТ УЖЕ ЕСТЬ? 
	НайденныеСтроки = Объект.ЖивотныеВСтадо.НайтиСтроки(Новый Структура("Животное, Заболевание", ТекущиеДанные.Животное, ТекущиеДанные.Заболевание));
	Если Не НайденныеСтроки.Количество() Тогда
		
		НоваяСтрока 								= Объект.ЖивотныеВСтадо.Добавить();
		НоваяСтрока.Животное 					= ТекущиеДанные.Животное;
		НоваяСтрока.Заболевание 				= ТекущиеДанные.Заболевание;
		НоваяСтрока.СписокПрепаратовПолеСвязи = ТекущиеДанные.СписокПрепаратовПолеСвязи;
		
	КонецЕсли;
	
	//УДАЛИМ СТРОКУ ИЗ ОСНОВНОЙ ТАБ ЧАСТИ 
	Объект.ЖивотныеОжидающие.Удалить(Объект.ЖивотныеОжидающие.НайтиПоИдентификатору(ТекущиеДанные.ПолучитьИдентификатор()));
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииПриАктивизацииСтроки(Элемент)
	
	Если РанееИспользованнаяСтрока = Элементы.ЖивотныеНаЛечении.ТекущиеДанные Тогда
		Возврат;
	КонецЕсли;
	
	РанееИспользованнаяСтрока = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если РанееИспользованнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеСвязи = РанееИспользованнаяСтрока.СписокПрепаратовПолеСвязи; 
	
КонецПроцедуры

&НаСервере
Функция УстановитьОтборПрепараты(ПолеСвязи)
	
	Если Не ЗначениеЗаполнено(ПолеСвязи) Тогда
		Возврат 0;
	КонецЕсли;
	
	Элементы.СписокИспользованныхПрепаратов.ОтборСтрок	= Новый ФиксированнаяСтруктура(Новый Структура("ПолеСвязи", ПолеСвязи));
	
КонецФункции

&НаКлиенте
Процедура СписокИспользованныхПрепаратовПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокИспользованныхПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ПолеСвязи = ПолеСвязи;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСхеме(Команда)
	
	ЗаполнитьПрепаратыПоСхеме(ПолеСвязи);	
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПрепаратыПоСхеме(ПолеСвязи)
	
	СтрокаЖивотного = Объект.ЖивотныеНаЛечении.НайтиСтроки(Новый Структура("СписокПрепаратовПолеСвязи", ПолеСвязи));
	
	Если СтрокаЖивотного.Количество() Тогда
		
		ТекущиеДанныеЖивотного 	= СтрокаЖивотного.Получить(0);
		СхемаЖивотного 			= ТекущиеДанныеЖивотного.СхемаЛечения;
		БольныеЧасти 			= ТекущиеДанныеЖивотного.МаститБольнаяЧасть;
		БольныеЧасти 			= СтрЗаменить(БольныеЧасти, "0", "");
		КоличествоЧастей 		= СтрДлина(БольныеЧасти);
		ПерваяСтрока 			= Истина;
		
		НайденныеСтрокиПрепаратов = Объект.СписокИспользованныхПрепаратов.НайтиСтроки(Новый Структура("ПолеСвязи", ПолеСвязи));
		Для каждого НайденнаяСтрока Из НайденныеСтрокиПрепаратов Цикл
			Объект.СписокИспользованныхПрепаратов.Удалить(НайденнаяСтрока);
		КонецЦикла;
		
		Для каждого ПрепаратаСхемы Из СхемаЖивотного.Препараты Цикл
			
			Если Не ЗначениеЗаполнено(ПрепаратаСхемы.Препарат) Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока 			= Объект.СписокИспользованныхПрепаратов.Добавить();
			НоваяСтрока.Препарат 	= ПрепаратаСхемы.Препарат;
			НоваяСтрока.Количество 	= ПрепаратаСхемы.Количество * ?(ПерваяСтрока, Макс(1, КоличествоЧастей), 1);
			НоваяСтрока.ЕдиницаИзмерения = ПрепаратаСхемы.ЕдиницаИзмерения;
			НоваяСтрока.ПолеСвязи 	= ПолеСвязи;
			
			ПерваяСтрока = Ложь;
			
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

































