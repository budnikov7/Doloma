
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.РасходКормов.Записывать	= Истина;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланКормленияРаздачи.Рацион КАК Рацион,
	|	ПланКормленияКорпуса.КоличествоГолов КАК КоличествоГолов,
	|	ПланКормленияКорпуса.ПроцентСуточногоКормления КАК ПроцентСуточногоКормления,
	|	ПланКормленияКорпуса.КоэффициентКормления КАК КоэффициентКормления,
	|	РационыКорма.Номенклатура КАК Номенклатура,
	|	РационыКорма.Вес * ПланКормленияКорпуса.КоличествоГолов * ПланКормленияКорпуса.ПроцентСуточногоКормления / 100 * ПланКормленияКорпуса.КоэффициентКормления КАК Вес,
	|	ПланКормленияКорпуса.КорпусКормления КАК Корпус,
	|	ПланЗагрузки.Ферма КАК Ферма,
	|	ПланЗагрузки.Склад КАК Склад,
	|	РационыКорма.ДоляСВ * ПланКормленияКорпуса.КоличествоГолов * ПланКормленияКорпуса.ПроцентСуточногоКормления / 100 * ПланКормленияКорпуса.КоэффициентКормления КАК СодержаниеСВ,
	|	ПланКормленияРаздачи.Рацион.ГруппаЖивотных КАК ГруппаЖивотных
	|ПОМЕСТИТЬ вт_Детали
	|ИЗ
	|	Документ.ПланЗагрузки КАК ПланЗагрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланЗагрузки.Раздачи КАК ПланКормленияРаздачи
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Рационы.Корма КАК РационыКорма
	|			ПО ПланКормленияРаздачи.Рацион = РационыКорма.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланЗагрузки.Корпуса КАК ПланКормленияКорпуса
	|			ПО ПланКормленияРаздачи.КлючСвязи = ПланКормленияКорпуса.КлючСвязи
	|				И ПланКормленияРаздачи.Ссылка = ПланКормленияКорпуса.Ссылка
	|		ПО ПланЗагрузки.Ссылка = ПланКормленияРаздачи.Ссылка
	|ГДЕ
	|	ПланЗагрузки.Ссылка = &Ссылка
	|	И РационыКорма.ВидКорма <> ЗНАЧЕНИЕ(Перечисление.ВидыКормов.Прочее)
	|	И ПланКормленияКорпуса.Ссылка = &Ссылка
	|	И ПланКормленияРаздачи.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Детали.Номенклатура КАК Номенклатура,
	|	СУММА(вт_Детали.Вес) КАК Вес,
	|	СУММА(вт_Детали.СодержаниеСВ) КАК СодержаниеСВ
	|ПОМЕСТИТЬ вт_КормаСвернутая
	|ИЗ
	|	вт_Детали КАК вт_Детали
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Детали.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_КормаСвернутая.Номенклатура КАК Номенклатура,
	|	вт_КормаСвернутая.Вес КАК КоличествоДокумент,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	вт_КормаСвернутая.СодержаниеСВ КАК СодержаниеСВ
	|ИЗ
	|	вт_КормаСвернутая КАК вт_КормаСвернутая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаПроверки, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО вт_КормаСвернутая.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	Запрос.УстановитьПараметр("ДатаПроверки", 		Дата);
	Запрос.УстановитьПараметр("Склад", 				Склад);
	
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными(); 
	
	РезультатФинальный = МассивРезультатов[2].Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатФинальный Цикл
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			Отказ = Истина;
			Сообщить("На складе " + Склад + " не хватает остатка корма " + СтрокаТабличнойЧасти.Номенклатура + 
								". На складе: " + СтрокаТабличнойЧасти.КоличествоОстаток + " кг" + 
								", требуется списать: " + СтрокаТабличнойЧасти.КоличествоДокумент + " кг");
		КонецЕсли;
	КонецЦикла;
	
	Если Не Отказ Тогда
		Для каждого СтрокаТабличнойЧасти Из РезультатФинальный Цикл
			
			НовоеДвижение 				= Движения.ТоварыНаСкладах.ДобавитьРасход();
			НовоеДвижение.Период 		= Дата;
			НовоеДвижение.Склад 		= Склад;
			НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
			НовоеДвижение.Количество 	= СтрокаТабличнойЧасти.КоличествоДокумент; 
			НовоеДвижение.Сумма 		= СтрокаТабличнойЧасти.КоличествоДокумент * СтрокаТабличнойЧасти.СуммаОстаток / СтрокаТабличнойЧасти.КоличествоОстаток;
			НовоеДвижение.Регистратор 	= Ссылка;
			
		КонецЦикла; 
		
		ВыборкаДетали = МассивРезультатов[0].Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
		
			НовоеДвижение 				= Движения.РасходКормов.Добавить();
			НовоеДвижение.Период 		= Дата;
			НовоеДвижение.Номенклатура 	= ВыборкаДетали.Номенклатура;
			НовоеДвижение.Склад 		= ВыборкаДетали.Склад;
			НовоеДвижение.Ферма 		= ВыборкаДетали.Ферма;
			НовоеДвижение.Корпус 		= ВыборкаДетали.Корпус;
			НовоеДвижение.ГруппаЖивотных= ВыборкаДетали.ГруппаЖивотных;
			НовоеДвижение.Количество 	= ВыборкаДетали.Вес; 
			НовоеДвижение.СодержаниеСВ 	= ВыборкаДетали.СодержаниеСВ; 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Строчка Из Раздачи Цикл
		Если Строчка.ЗаполненностьМиксера > 100 Тогда
			ТекстОшибки = СтрШаблон("Раздача %1: заполненность миксера больше 100%%", Строчка.НомерСтроки);
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки; 
			Сообщение.Поле = "Раздачи["+Строка(Строчка.НомерСтроки-1)+"].ЗаполненностьМиксера";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ТЗСвернутыеКорпуса = Корпуса.Выгрузить(,"КорпусКормления, ПроцентСуточногоКормления");
	ТЗСвернутыеКорпуса.Свернуть("КорпусКормления", "ПроцентСуточногоКормления");
	Для каждого Строчка Из ТЗСвернутыеКорпуса Цикл
		Если Строчка.ПроцентСуточногоКормления <> 100 Тогда
			ТекстОшибки = СтрШаблон("В корпусе %1: суммарный процент суточного кормления не равен 100%% (%2)",
				Строчка.КорпусКормления, Строчка.ПроцентСуточногоКормления);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки,ЭтотОбъект,"Корпуса",,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КоличествоРаздач = Раздачи.Количество();
	
КонецПроцедуры











