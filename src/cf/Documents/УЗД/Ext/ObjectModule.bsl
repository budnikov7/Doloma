
Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.СостояниеЖивотных.Записывать 			= Истина;
	Движения.УЗИисследования.Записывать 			= Истина;
	Движения.ДатаПредполагаемогоОтёла.Записывать 	= Истина;
	Движения.ДатаПредполагамогоЗапуска.Записывать 	= Истина; 
	Движения.Аборты.Записывать 						= Истина;  
	Движения.ВыбраковкаЖивотных.Записывать			= Истина; 
	Движения.ПроизводственныеГруппы.Записывать		= Истина; 
	
	Для каждого СтрокаТабличнойЧасти Из Животные Цикл
		
		НовоеДвижение 							= Движения.СостояниеЖивотных.Добавить();
		НовоеДвижение.Период 					= Дата;
		НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.СостояниеЖивотного 		= СтрокаТабличнойЧасти.Статус;
		
		НовоеДвижение 							= Движения.УЗИИсследования.Добавить();
		НовоеДвижение.Период 					= Дата;
		НовоеДвижение.Мать		 				= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.Акушер 					= СпециалистУЗИ;
		НовоеДвижение.Статус 					= СтрокаТабличнойЧасти.Статус;
		НовоеДвижение.Примечание 				= СтрокаТабличнойЧасти.Примечание;	
		НовоеДвижение.ДеньУЗИ 					= СтрокаТабличнойЧасти.ДеньУЗИ;
		НовоеДвижение.НомерУЗИ 					= СтрокаТабличнойЧасти.НомерУЗИ;	
		
		НовоеДвижение 							= Движения.ДатаПредполагаемогоОтёла.Добавить();
		НовоеДвижение.Период 					= Дата;
		НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.ДатаПредполагаемогоОтёла 	= СтрокаТабличнойЧасти.ДатаПредполагаемогоОтёла;
		
		НовоеДвижение 								= Движения.ДатаПредполагамогоЗапуска.Добавить();
		НовоеДвижение.Период 						= Дата;
		НовоеДвижение.Животное 						= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.ДатаЗапуска 					= СтрокаТабличнойЧасти.ДатаЗапуска;
		НовоеДвижение.ДатаПереводаВоВторойСухостой 	= СтрокаТабличнойЧасти.ДатаПереводаВоВторойСухостой; 
		
		Если СтрокаТабличнойЧасти.НомерУЗИ > 1 И СтрокаТабличнойЧасти.Статус = Перечисления.СтатусЖивотного.НеСтельная Тогда
			НовоеДвижение 								= Движения.Аборты.Добавить();
			НовоеДвижение.Период 						= Дата;
			НовоеДвижение.Мать							= СтрокаТабличнойЧасти.Животное;
			НовоеДвижение.ТипПрекращенияСтельности		= Перечисления.ТипПрекращенияСтельности.Аборт;
			НовоеДвижение.Осеменатор				 	= ПоследнийОсеменатор(СтрокаТабличнойЧасти.Животное); 
			
			Если Ферма.ВыбраковыватьЖивотныхПослеАборта Тогда
				НовоеДвижение 						= Движения.ВыбраковкаЖивотных.Добавить();
				НовоеДвижение.Животное 				= СтрокаТабличнойЧасти.Животное;
				НовоеДвижение.Период 				= Дата;
				НовоеДвижение.Брак					= Истина;
				НовоеДвижение.ПричинаВыбраковки     = Перечисления.ПричиныВыбраковки.Аборт; 
				
				НовоеДвижение 							= Движения.ПроизводственныеГруппы.Добавить();
				НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Животное;
				НовоеДвижение.Период 					= Дата;
				НовоеДвижение.ПроизводственнаяГруппа	= Перечисления.ПроизводственныеГруппы.Брак;  
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПоследнийОсеменатор(Животное)
	
	Осеменатор = Справочники.Сотрудники.ПустаяСсылка(); 
	ВыборкаПоследнегоОСеменения = Документы.Осеменение.ДанныеПоследнегоОсеменения(Дата,Животное);
	Если ВыборкаПоследнегоОСеменения <> Неопределено Тогда
		Осеменатор = ВыборкаПоследнегоОСеменения.Осеменатор; 
	КонецЕсли;
	Возврат Осеменатор;

КонецФункции // ПоследнийОсеменатор()

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НеСтельныеЖивотные = ВыборкаНеСтельныхЖивотных();
	Если НеСтельныеЖивотные.Количество() > 0 Тогда  
		Пока НеСтельныеЖивотные.Следующий() Цикл   
			Если НеСтельныеЖивотные.СостояниеЖивотного = Перечисления.СтатусЖивотного.Осеменена Тогда
				ТекстОшибки = СтрШаблон("Строка %1: у животного %2 не прошло 28 дней после осеменения (%3 дней)!", 
				НеСтельныеЖивотные.НомерСтроки,НеСтельныеЖивотные.Животное, НеСтельныеЖивотные.ДнейПослеОсеменения) + Символы.ПС;
			Иначе
				ТекстОшибки = СтрШаблон("Строка %1: у животного %2 нет осеменения!", 
				НеСтельныеЖивотные.НомерСтроки,НеСтельныеЖивотные.Животное) + Символы.ПС;
			КонецЕсли;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки; 
			Сообщение.Поле = "Животные["+Строка(НеСтельныеЖивотные.НомерСтроки-1)+"].Животное";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЦикла;
		Отказ = Истина; 	
	КонецЕсли;	
	
КонецПроцедуры  

Функция ВыборкаНеСтельныхЖивотных()
	
	ТЧЖивотные = Животные.Выгрузить(,"НомерСтроки, Животное");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЧЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ТЧЖивотные.Животное КАК Животное
	               |ПОМЕСТИТЬ втЖивотные
	               |ИЗ
	               |	&ТЧЖивотные КАК ТЧЖивотные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	втЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(втЖивотные.Животное) КАК Животное,
	               |	ВЫБОР
	               |		КОГДА ОсемененияСрезПоследних.Период ЕСТЬ NULL
	               |			ТОГДА СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ОсемененияСрезПоследних.Период > СостояниеЖивотныхСрезПоследних.Период
	               |					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |				ИНАЧЕ СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |			КОНЕЦ
	               |	КОНЕЦ КАК СостояниеЖивотного,
	               |	РАЗНОСТЬДАТ(ЕСТЬNULL(ОсемененияСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)), &ДатаДокумента, ДЕНЬ) КАК ДнейПослеОсеменения
	               |ИЗ
	               |	втЖивотные КАК втЖивотные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЖивотных.СрезПоследних(&МоментВремени, Регистратор <> &Ссылка) КАК СостояниеЖивотныхСрезПоследних
	               |		ПО втЖивотные.Животное = СостояниеЖивотныхСрезПоследних.Животное
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Осеменения.СрезПоследних(&МоментВремени, ) КАК ОсемененияСрезПоследних
	               |		ПО втЖивотные.Животное = ОсемененияСрезПоследних.Животное
	               |ГДЕ
	               |	(ВЫБОР
	               |				КОГДА ОсемененияСрезПоследних.Период ЕСТЬ NULL
	               |					ТОГДА СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ОсемененияСрезПоследних.Период > СостояниеЖивотныхСрезПоследних.Период
	               |							ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |						ИНАЧЕ СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |					КОНЕЦ
	               |			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.НеСтельная)
	               |			ИЛИ ВЫБОР
	               |					КОГДА ОсемененияСрезПоследних.Период ЕСТЬ NULL
	               |						ТОГДА СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ОсемененияСрезПоследних.Период > СостояниеЖивотныхСрезПоследних.Период
	               |								ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |							ИНАЧЕ СостояниеЖивотныхСрезПоследних.СостояниеЖивотного
	               |						КОНЕЦ
	               |				КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |				И РАЗНОСТЬДАТ(ЕСТЬNULL(ОсемененияСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)), &ДатаДокумента, ДЕНЬ) < 28)";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени()); 
	Запрос.УстановитьПараметр("ДатаДокумента",Дата); 
	
	Запрос.УстановитьПараметр("ТЧЖивотные",ТЧЖивотные);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;

КонецФункции // ПроверкаНаСтельность()






































