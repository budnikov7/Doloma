
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьВозможностьПроведения(Отказ);
	ПроверкаОстатков(Отказ);
	ПроверкаОстатковПрепаратов(Отказ);
	
	Если Не Отказ Тогда
		
		Движения.Осеменения.Записывать  					= Истина;
		Движения.СостояниеЖивотных.Записывать  				= Истина;
		Движения.Взвешивания.Записывать 					= Истина;
		Движения.ТоварыНаСкладах.Записывать 				= Истина;
		Движения.ЖивотныеНаСхемеСинхронизации.Записывать 	= Истина;
		
		МассивРезультатов 	= ПолучитьДанныеДляПроведения();
		ВыборкаЖивотных 	= МассивРезультатов[3].Выбрать();
		ВыборкаНоменклатуры = МассивРезультатов[4].Выбрать(); 
		ВыборкаПрепаратов	= МассивРезультатов[6].Выбрать(); 
		
		Пока ВыборкаЖивотных.Следующий() Цикл
			
			//РЕГИСТР ОСЕМЕНЕНИЯ 
			НовоеДвижение  						= Движения.Осеменения.Добавить();
			НовоеДвижение.Период  				= Дата;
			НовоеДвижение.Животное 				= ВыборкаЖивотных.Животное;
			НовоеДвижение.Семя 					= ВыборкаЖивотных.Номенклатура;
			НовоеДвижение.Осеменатор  			= Осеменатор;
			НовоеДвижение.Инъекция 				= ВыборкаЖивотных.Инъекция; 
			НовоеДвижение.СхемаСинхронизации 	= ВыборкаЖивотных.СхемаСинхронизации; 
			НовоеДвижение.КоличествоДоз 		= ВыборкаЖивотных.Количество * ВыборкаЖивотных.Коэффициент;
			НовоеДвижение.Примечание  			= ВыборкаЖивотных.Примечание;
			
			//РЕГИСТР СОСТОЯНИЕЖИВОТНЫХ
			НовоеДвижение  						= Движения.СостояниеЖивотных.Добавить();
			НовоеДвижение.Период  				= Дата;
			НовоеДвижение.Животное 				= ВыборкаЖивотных.Животное;
			НовоеДвижение.СостояниеЖивотного 	= Перечисления.СтатусЖивотного.Осеменена;
			
			//РЕГИСТР ЖивотныеНаСхемеСинхронизации   
			Если ВыборкаЖивотных.СобытиеСинхронизации = Перечисления.СобытияСхемСинхронизации.Начало Тогда
				НовоеДвижение  						= Движения.ЖивотныеНаСхемеСинхронизации.Добавить();
				НовоеДвижение.Период  				= Дата;
				НовоеДвижение.Животное 				= ВыборкаЖивотных.Животное; 
				НовоеДвижение.СхемаСинхронизации	= ВыборкаЖивотных.СхемаСинхронизации;
				НовоеДвижение.Событие 				= Перечисления.СобытияСхемСинхронизации.Завершение;
				НовоеДвижение.КоличествоДней        = ВыборкаЖивотных.КоличествоДнейСинхронизации;
				НовоеДвижение.ОсеменениеВнутриСхемы = (ВыборкаЖивотных.КоличествоДнейСинхронизации > 0 
													  И ВыборкаЖивотных.КоличествоДнейСинхронизации < ВыборкаЖивотных.ДлительностьСхемыСинхронизации); 
			КонецЕсли;
			
		КонецЦикла;    
		
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			
			НовоеДвижение   			= Движения.ТоварыНаСкладах.Добавить();
			НовоеДвижение.ВидДвижения  	= ВидДвиженияНакопления.Расход;
			НовоеДвижение.Период 		= Дата;
			НовоеДвижение.Регистратор 	= Ссылка;
			НовоеДвижение.Номенклатура  = ВыборкаНоменклатуры.Номенклатура;
			НовоеДвижение.Склад 		= Склад;
			НовоеДвижение.Количество  	= ВыборкаНоменклатуры.Количество * ВыборкаНоменклатуры.Коэффициент;
			НовоеДвижение.Сумма 		= ВыборкаНоменклатуры.Сумма;  
			
		КонецЦикла;
		
		Пока ВыборкаПрепаратов.Следующий() Цикл
		
			НовоеДвижение   			= Движения.ТоварыНаСкладах.Добавить();
			НовоеДвижение.Период 		= Дата;
			НовоеДвижение.ВидДвижения  	= ВидДвиженияНакопления.Расход;
			НовоеДвижение.Регистратор 	= Ссылка;
			НовоеДвижение.Номенклатура  = ВыборкаПрепаратов.Препарат;
			НовоеДвижение.Склад  		= Склад;
			НовоеДвижение.Количество 	= ВыборкаПрепаратов.Количество * ВыборкаПрепаратов.Коэффициент;
			НовоеДвижение.Сумма  		= ВыборкаПрепаратов.Сумма;;
			
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьВозможностьПроведения(Отказ)
	
	Для каждого СтрокаТабличнойЧасти Из Животные Цикл
		
		ДатаРождения = ДанныеЖивотных.ДатаРожденияЖивотного(СтрокаТабличнойЧасти.Животное);
		
		Если ДатаРождения > ЭтотОбъект.Дата Тогда
			
			Сообщить("Дата документа больше, чем дата рождения коровы " + СтрокаТабличнойЧасти.Животное);
			
			Отказ = Истина;
		КонецЕсли;  
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьСреднююЦенуНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ВЫБОР КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = 0 Тогда
	| 0
	|ИНАЧЕ
	| ТоварыНаСкладахОстатки.СуммаОстаток / ТоварыНаСкладахОстатки.КоличествоОстаток
	|КОНЕЦ КАК СредняяЦена
	|ИЗ
	| РегистрНакопления.ТоварыНаСкладах.Остатки(
	| &ДатаПроверки,
	| Номенклатура = &Номенклатура
	|  И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("ДатаПроверки",  Дата);
	Запрос.УстановитьПараметр("Номенклатура",  Номенклатура);
	Запрос.УстановитьПараметр("Склад",  Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СредняяЦена;
	
КонецФункции   

Функция ПолучитьДанныеДляПроведения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсеменениеЖивотные.Животное КАК Животное,
	|	ОсеменениеЖивотные.Номенклатура КАК Номенклатура,
	|	ОсеменениеЖивотные.Количество КАК Количество,
	|	ОсеменениеЖивотные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОсеменениеЖивотные.СхемаСинхронизации КАК СхемаСинхронизации,
	|	ОсеменениеЖивотные.Инъекция КАК Инъекция,
	|	ПОДСТРОКА(ОсеменениеЖивотные.Примечание, 1, 500) КАК Примечание
	|ПОМЕСТИТЬ втЖивотные
	|ИЗ
	|	Документ.Осеменение.Животные КАК ОсеменениеЖивотные
	|ГДЕ
	|	ОсеменениеЖивотные.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втЖивотные.Животное КАК Животное,
	|	втЖивотные.Номенклатура КАК Номенклатура,
	|	втЖивотные.Количество КАК Количество,
	|	втЖивотные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втЖивотные.СхемаСинхронизации КАК СхемаСинхронизации,
	|	втЖивотные.Инъекция КАК Инъекция,
	|	втЖивотные.Примечание КАК Примечание,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураЕдиницыИзмерения.Коэффициент, 1)) КАК Коэффициент
	|ПОМЕСТИТЬ втЖивотныеСКоэффициентами
	|ИЗ
	|	втЖивотные КАК втЖивотные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ЕдиницыИзмерения КАК НоменклатураЕдиницыИзмерения
	|		ПО втЖивотные.Номенклатура = НоменклатураЕдиницыИзмерения.Ссылка
	|			И втЖивотные.ЕдиницаИзмерения = НоменклатураЕдиницыИзмерения.ЕдиницаИзмерения
	|
	|СГРУППИРОВАТЬ ПО
	|	втЖивотные.Животное,
	|	втЖивотные.Номенклатура,
	|	втЖивотные.Количество,
	|	втЖивотные.ЕдиницаИзмерения,
	|	втЖивотные.СхемаСинхронизации,
	|	втЖивотные.Инъекция,
	|	втЖивотные.Примечание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЖивотныеСКоэффициентами.Номенклатура КАК Номенклатура,
	|	СУММА(втЖивотныеСКоэффициентами.Количество) КАК Количество,
	|	втЖивотныеСКоэффициентами.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втЖивотныеСКоэффициентами.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ втНоменклатураСвернутая
	|ИЗ
	|	втЖивотныеСКоэффициентами КАК втЖивотныеСКоэффициентами
	|
	|СГРУППИРОВАТЬ ПО
	|	втЖивотныеСКоэффициентами.Номенклатура,
	|	втЖивотныеСКоэффициентами.ЕдиницаИзмерения,
	|	втЖивотныеСКоэффициентами.Коэффициент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЖивотныеСКоэффициентами.Животное КАК Животное,
	|	втЖивотныеСКоэффициентами.Номенклатура КАК Номенклатура,
	|	втЖивотныеСКоэффициентами.СхемаСинхронизации КАК СхемаСинхронизации,
	|	втЖивотныеСКоэффициентами.Инъекция КАК Инъекция,
	|	втЖивотныеСКоэффициентами.Примечание КАК Примечание,
	|	ЕСТЬNULL(ЖивотныеНаСхемеСинхронизацииСрезПоследних.Событие, ЗНАЧЕНИЕ(Перечисление.СобытияСхемСинхронизации.ПустаяСсылка)) КАК СобытиеСинхронизации,
	|	ВЫБОР
	|		КОГДА ЖивотныеНаСхемеСинхронизацииСрезПоследних.Событие ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ РАЗНОСТЬДАТ(ЖивотныеНаСхемеСинхронизацииСрезПоследних.Период, &ДатаДокумента, ДЕНЬ)
	|	КОНЕЦ КАК КоличествоДнейСинхронизации,
	|	ЖивотныеНаСхемеСинхронизацииСрезПоследних.СхемаСинхронизации.Длительность КАК ДлительностьСхемыСинхронизации,
	|	втЖивотныеСКоэффициентами.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втЖивотныеСКоэффициентами.Количество КАК Количество,
	|	втЖивотныеСКоэффициентами.Коэффициент КАК Коэффициент
	|ИЗ
	|	втЖивотныеСКоэффициентами КАК втЖивотныеСКоэффициентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖивотныеНаСхемеСинхронизации.СрезПоследних(&ДатаДокумента, Регистратор <> &Ссылка) КАК ЖивотныеНаСхемеСинхронизацииСрезПоследних
	|		ПО втЖивотныеСКоэффициентами.Животное = ЖивотныеНаСхемеСинхронизацииСрезПоследних.Животное
	|			И (РАЗНОСТЬДАТ(ЖивотныеНаСхемеСинхронизацииСрезПоследних.Период, &ДатаДокумента, ДЕНЬ) <= 50)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатураСвернутая.Номенклатура КАК Номенклатура,
	|	втНоменклатураСвернутая.Количество КАК Количество,
	|	втНоменклатураСвернутая.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = втНоменклатураСвернутая.Количество
	|			ТОГДА ТоварыНаСкладахОстатки.СуммаОстаток
	|		ИНАЧЕ ТоварыНаСкладахОстатки.СуммаОстаток / ТоварыНаСкладахОстатки.КоличествоОстаток * втНоменклатураСвернутая.Количество * втНоменклатураСвернутая.Коэффициент
	|	КОНЕЦ КАК Сумма,
	|	втНоменклатураСвернутая.Коэффициент КАК Коэффициент
	|ИЗ
	|	втНоменклатураСвернутая КАК втНоменклатураСвернутая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО втНоменклатураСвернутая.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсеменениеСписокПрепаратов.Препарат КАК Препарат,
	|	ОсеменениеСписокПрепаратов.Количество КАК Количество,
	|	ОсеменениеСписокПрепаратов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МАКСИМУМ(ЕСТЬNULL(НоменклатураЕдиницыИзмерения.Коэффициент, 1)) КАК Коэффициент
	|ПОМЕСТИТЬ втПрепараты
	|ИЗ
	|	Документ.Осеменение.СписокПрепаратов КАК ОсеменениеСписокПрепаратов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ЕдиницыИзмерения КАК НоменклатураЕдиницыИзмерения
	|		ПО ОсеменениеСписокПрепаратов.Препарат = НоменклатураЕдиницыИзмерения.Ссылка
	|			И ОсеменениеСписокПрепаратов.ЕдиницаИзмерения = НоменклатураЕдиницыИзмерения.ЕдиницаИзмерения
	|ГДЕ
	|	ОсеменениеСписокПрепаратов.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсеменениеСписокПрепаратов.ЕдиницаИзмерения,
	|	ОсеменениеСписокПрепаратов.Препарат,
	|	ОсеменениеСписокПрепаратов.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПрепараты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	втПрепараты.Количество КАК Количество,
	|	втПрепараты.Коэффициент КАК Коэффициент,
	|	втПрепараты.Препарат КАК Препарат,
	|	ВЫБОР
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = 0
	|			ТОГДА 0
	|		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = втПрепараты.Количество
	|			ТОГДА ТоварыНаСкладахОстатки.СуммаОстаток
	|		ИНАЧЕ ТоварыНаСкладахОстатки.СуммаОстаток / ТоварыНаСкладахОстатки.КоличествоОстаток * втПрепараты.Количество * втПрепараты.Коэффициент
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	втПрепараты КАК втПрепараты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|		ПО втПрепараты.Препарат = ТоварыНаСкладахОстатки.Номенклатура";	
	Запрос.УстановитьПараметр("ДатаДокумента",	Дата);
	Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	Запрос.УстановитьПараметр("Склад",			Склад);
	Результат = Запрос.ВыполнитьПакет();
	Возврат Результат;

КонецФункции

Процедура ПроверкаОстатков(Отказ)
	
	ЖивотныеКопия = Животные.Выгрузить(,"Номенклатура,ЕдиницаИзмерения,Количество");  
	ЖивотныеКопия.Свернуть("Номенклатура,ЕдиницаИзмерения","Количество");
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(ЖивотныеКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	| ТаблицаДокумента.Номенклатура КАК Номенклатура,
	| ТаблицаДокумента.Количество КАК КоличествоДокумент, 
	| ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	| &ВременнаяТаблица КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	| ТаблицаДокумента.Номенклатура КАК Номенклатура,
	| ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
	| ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	| ЕстьNull(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
	|ИЗ
	| ТаблицаДокумента КАК ТаблицаДокумента
	|  ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	| Остатки.Номенклатура КАК Номенклатура,
	| Остатки.КоличествоОстаток КАК КоличествоОстаток
	|  ИЗ
	| РегистрНакопления.ТоварыНаСкладах.Остатки(
	| &ДатаПроверки,
	| Номенклатура В
	| (ВЫБРАТЬ
	|  ТаблицаДокумента.Номенклатура
	| ИЗ
	|  ТаблицаДокумента)
	|  И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
	|  ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", ЖивотныеКопия);
	Запрос.УстановитьПараметр("Склад",   Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить("На складе - " + Склад + " не хватает остатка по товару " + СтрокаТабличнойЧасти.Номенклатура + 
			". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток)  + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения + 
			", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаОстатковПрепаратов(Отказ)
	
	СписокПрепаратовКопия = СписокПрепаратов.Выгрузить(); 
	СписокПрепаратовКопия.Свернуть("Препарат,ЕдиницаИзмерения","Количество");
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(СписокПрепаратовКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	| ТаблицаДокумента.Препарат КАК Номенклатура,
	| ТаблицаДокумента.Количество КАК КоличествоДокумент, 
	| ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	| &ВременнаяТаблица КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	| ТаблицаДокумента.Номенклатура КАК Номенклатура,
	| ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
	| ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	| ЕстьNull(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
	|ИЗ
	| ТаблицаДокумента КАК ТаблицаДокумента
	|  ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	| Остатки.Номенклатура КАК Номенклатура,
	| Остатки.КоличествоОстаток КАК КоличествоОстаток
	|  ИЗ
	| РегистрНакопления.ТоварыНаСкладах.Остатки(
	| &ДатаПроверки,
	| Номенклатура В
	| (ВЫБРАТЬ
	|  ТаблицаДокумента.Номенклатура
	| ИЗ
	|  ТаблицаДокумента)
	|  И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
	|  ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", СписокПрепаратовКопия.Скопировать());
	Запрос.УстановитьПараметр("Склад",   Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить("На складе - " + Склад + " не хватает остатка препарата " + СтрокаТабличнойЧасти.Номенклатура + 
			". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения  + 
			", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) 
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	СтельныеЖивотные = ВыборкаСтельныхЖивотных();
	Если СтельныеЖивотные.Количество() > 0 Тогда  
		Пока СтельныеЖивотные.Следующий() Цикл
			ТекстОшибки = "- между осеменениями прошло меньше 4 дней!";
			Если СтельныеЖивотные.СостояниеЖивотного = Перечисления.СтатусЖивотного.Стельная Тогда
				ТекстОшибки = " стельное!";
			КонецЕсли;
			ТекстОшибки = СтрШаблон("Строка %1: животное %2 %3", СтельныеЖивотные.НомерСтроки,СтельныеЖивотные.Животное,ТекстОшибки) + Символы.ПС;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки; 
			Сообщение.Поле = "Животные["+Строка(СтельныеЖивотные.НомерСтроки-1)+"].Животное";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЦикла;
		Отказ = Истина;  
	КонецЕсли; 
	
КонецПроцедуры  

Функция ВыборкаСтельныхЖивотных()
	
	ТЧЖивотные = Животные.Выгрузить(,"НомерСтроки, Животное");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЧЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ТЧЖивотные.Животное КАК Животное
	               |ПОМЕСТИТЬ втЖивотные
	               |ИЗ
	               |	&ТЧЖивотные КАК ТЧЖивотные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(втЖивотные.Животное) КАК Животное,
	               |	СостояниеЖивотныхСрезПоследних.СостояниеЖивотного КАК СостояниеЖивотного,
	               |	ВЫБОР
	               |		КОГДА СостояниеЖивотныхСрезПоследних.СостояниеЖивотного = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |			ТОГДА РАЗНОСТЬДАТ(СостояниеЖивотныхСрезПоследних.Период, &ДатаДокумента, ДЕНЬ)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ДнейПослеПоследнегоОсеменения
	               |ИЗ
	               |	втЖивотные КАК втЖивотные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЖивотных.СрезПоследних(&ДатаДокумента, ) КАК СостояниеЖивотныхСрезПоследних
	               |		ПО втЖивотные.Животное = СостояниеЖивотныхСрезПоследних.Животное
	               |ГДЕ
	               |	(СостояниеЖивотныхСрезПоследних.СостояниеЖивотного = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Стельная)
	               |			ИЛИ СостояниеЖивотныхСрезПоследних.СостояниеЖивотного = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |				И ВЫБОР
	               |					КОГДА СостояниеЖивотныхСрезПоследних.СостояниеЖивотного = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Осеменена)
	               |						ТОГДА РАЗНОСТЬДАТ(СостояниеЖивотныхСрезПоследних.Период, &ДатаДокумента, ДЕНЬ)
	               |					ИНАЧЕ 1000
	               |				КОНЕЦ < 0)
	               |	И СостояниеЖивотныхСрезПоследних.Регистратор <> &Регистратор";
	Запрос.УстановитьПараметр("ДатаДокумента",Дата);
	Запрос.УстановитьПараметр("ТЧЖивотные",ТЧЖивотные);
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;
	
КонецФункции // ПроверкаНаСтельность()











































