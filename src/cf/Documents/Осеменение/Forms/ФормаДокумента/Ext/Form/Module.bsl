
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Автор 	= ПараметрыСеанса.ТекущийПользователь;
		Объект.Ферма  	= Объект.Автор.ОсновнаяФерма;
		Объект.Склад  	= Объект.Автор.ОсновнойСклад;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКоличествоПрепаратов(ЗадаватьВопрос = Истина)

	Если Объект.СписокПрепаратов.Количество() > 0 Тогда
		//КоличествоЖивотных = Объект.Животные.Количество();  
		КоличествоДоз = Объект.Животные.Итог("Количество");
		ПересчитатьПрепараты = Ложь;
		Для каждого СтрочкаПрепарат Из Объект.СписокПрепаратов Цикл
		    Если КоличествоДоз <> СтрочкаПрепарат.Количество Тогда
				ПересчитатьПрепараты = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;  
		
		ДопПараметры = Новый Структура("КоличествоДоз", КоличествоДоз);
		Если ПересчитатьПрепараты = Истина Тогда
			Если ЗадаватьВопрос Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьКоличествоПрепаратовОкончание", ЭтотОбъект, ДопПараметры);
				ПоказатьВопрос(ОписаниеОповещения, "Количество препаратов не соответствует количеству животных. Перезаполнить количество препаратов?", РежимДиалогаВопрос.ДаНет);
			Иначе	
			    ПроверитьКоличествоПрепаратовОкончание(КодВозвратаДиалога.Да, ДопПараметры); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПроверитьКоличествоПрепаратовОкончание(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		КоличествоДоз = ДополнительныеПараметры.КоличествоДоз;
		Для каждого СтрочкаПрепарат Из Объект.СписокПрепаратов Цикл
			СтрочкаПрепарат.Количество = КоличествоДоз;	
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЖивотныеЖивотноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(Объект.Ферма, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Животные") Тогда
	
		БракЖивотного = ДанныеЖивотных.ЖивотноеСписаноВБарк(ВыбранноеЗначение, Объект.Дата);
		
		Если БракЖивотного Тогда
			Сообщить("Выбранное животное находится в браке. Осеменение невозможно");
			Возврат;
		КонецЕсли;
		
		Если ДанныеЖивотных.СтатусЖивотного(ВыбранноеЗначение, Объект.Дата) = ПредопределенноеЗначение("Перечисление.СтатусЖивотного.Стельная") Тогда
			Сообщить("Животное стельно, создайте документ Аборт");
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
		ТекущиеДанные.Животное = ВыбранноеЗначение;
		ЖивотныеЖивотноеПриИзменении(Неопределено); 
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ШаблоныПрепаратов") Тогда
		
		ЗаполнитьПрепаратыПоШаблону(ВыбранноеЗначение);
	Иначе
		
		ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
		ТекущиеДанные.Семя = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", Объект.Ферма);
	СписокПараметров.Вставить("НеобходимоОповестить", Истина);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДанныеЖивотного = ПолучитьДанныеЖивотного(ТекущиеДанные.Животное, Объект.Дата, Объект.Ссылка);
	ТекущиеДанные.СхемаСинхронизации = ДанныеЖивотного.СхемаСинхронизации; 
	
	Если ДанныеЖивотных.КоличествоОтелов(ТекущиеДанные.Животное, Объект.Дата) > 0 Тогда
		ТекущиеДанные.ВесПриОсеменении = 0;
		Возврат;	
	КонецЕсли;
	
	Если ДанныеЖивотного.КоличествоДнейМежду > 150 ИЛИ ДанныеЖивотного.ВесПоследнегоВзвешивания = 0 Тогда
		ТекущиеДанные.ВесПриОсеменении = -1;
		Возврат;
	КонецЕсли;
		
	ТекущиеДанные.ВесПриОсеменении = ДанныеЖивотного.ПоследнийСреднесуточныйПривес * ДанныеЖивотного.КоличествоДнейМежду + ДанныеЖивотного.ВесПоследнегоВзвешивания;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеБыкПриИзменении(Элемент) 
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные; 
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокСемени = ПолучитьСемяБыка(ТекущиеДанные.Бык); 
	Если СписокСемени.Количество() = 1 Тогда
		ТекущиеДанные.Номенклатура = СписокСемени[0].Значение;
		ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаИзмерения");

	ИначеЕсли СписокСемени.Количество() > 1 Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВыбораЭлемента", ЭтотОбъект);
		СписокСемени.ПоказатьВыборЭлемента(Оповещение, "Выберите семя.");	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеВыбораЭлемента(ВыбранныйЭлемент, СписокПараметров) Экспорт

	Если ВыбранныйЭлемент <> Неопределено Тогда
		ВыбранноеЗначение = ВыбранныйЭлемент.Значение;
		ТекущиеДанные = Элементы.Животные.ТекущиеДанные; 
		ТекущиеДанные.Номенклатура = ВыбранноеЗначение;
		ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаИзмерения");
	КонецЕсли; 
	
КонецПроцедуры // ПослеВыбораЭлемента()

&НаКлиенте
Процедура ЖивотныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование) 
	
    Если НоваяСтрока И Не Копирование Тогда
        Элемент.ТекущиеДанные.Количество = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПрепаратовПрепаратПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Препарат, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеСемяПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Номенклатура, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьАвтоматическиеШаблоны()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШаблоныПрепаратов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШаблоныПрепаратов КАК ШаблоныПрепаратов
	|ГДЕ
	|	(ШаблоныПрепаратов.АвтоматическоеЗаполнение = 1
	|			ИЛИ ШаблоныПрепаратов.АвтоматическоеЗаполнение = 3)";
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьПрепаратыПоШаблону(ВыборкаДетальныеЗаписи.Ссылка);    	
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	ОткрытьФорму("Справочник.ШаблоныПрепаратов.ФормаВыбора", , ЭтаФорма);
	
КонецПроцедуры  

&НаКлиенте
Процедура ПерезаполнитьКоличество(Команда)
	
	ПроверитьКоличествоПрепаратов(Ложь); 
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПрепаратыПоШаблону(Шаблон) 
	
	Объект.СписокПрепаратов.Очистить();
	//КоличествоЖивотных = Объект.Животные.Количество();
	КоличествоДоз = Объект.Животные.Итог("Количество");
	
	Для каждого СтрокаТабличнойЧасти Из Шаблон.СписокПрепаратов Цикл
		НоваяСтрока = Объект.СписокПрепаратов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		НоваяСтрока.Количество = НоваяСтрока.Количество * КоличествоДоз; 
	КонецЦикла;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСемяБыка(Бык)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Семя
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Бык = &Бык
		|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
		|	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Семя)";
	
	Запрос.УстановитьПараметр("Бык", Бык);
	Выборка = Запрос.Выполнить().Выбрать();
	СписокСемени = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		СписокСемени.Добавить(Выборка.Семя);
	КонецЦикла;
	
	Возврат СписокСемени;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеЖивотного(Животное, ДатаПроверки, ТекущийДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Животные.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ вт_Животные
	|ИЗ
	|	Справочник.Животные КАК Животные
	|ГДЕ
	|	Животные.Ссылка = &Животное
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВзвешиванияСрезПоследних.Вес, 0) КАК ВесПоследнегоВзвешивания,
	|	ЕСТЬNULL(ВзвешиванияСрезПоследних.СреднеСуточныйПривес, 0) КАК ПоследнийСреднесуточныйПривес,
	|	ВЫБОР
	|		КОГДА ВзвешиванияСрезПоследних.Период ЕСТЬ NULL
	|			ТОГДА РАЗНОСТЬДАТ(ИнформацияОРожденииСрезПоследних.Период, &ДатаПроверки, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ВзвешиванияСрезПоследних.Период, &ДатаПроверки, ДЕНЬ)
	|	КОНЕЦ КАК КоличествоДнейМежду,
	|	ЕСТЬNULL(ЖивотныеНаСхемеСинхронизацииСрезПоследних.СхемаСинхронизации, ЗНАЧЕНИЕ(Справочник.СхемыСинхронизации.ПустаяСсылка)) КАК СхемаСинхронизации
	|ИЗ
	|	вт_Животные КАК вт_Животные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Взвешивания.СрезПоследних(
	|				&ДатаПроверки,
	|				Животное = &Животное
	|					И Регистратор <> &ТекущийДокумент) КАК ВзвешиванияСрезПоследних
	|		ПО вт_Животные.Ссылка = ВзвешиванияСрезПоследних.Животное
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖивотныеНаСхемеСинхронизации.СрезПоследних(
	|				&ДатаПроверки,
	|				Животное = &Животное
	|					И Регистратор <> &ТекущийДокумент) КАК ЖивотныеНаСхемеСинхронизацииСрезПоследних
	|		ПО вт_Животные.Ссылка = ЖивотныеНаСхемеСинхронизацииСрезПоследних.Животное
	|			И (ЖивотныеНаСхемеСинхронизацииСрезПоследних.Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияСхемСинхронизации.Завершение))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформацияОРождении.СрезПоследних(, Животное = &Животное) КАК ИнформацияОРожденииСрезПоследних
	|		ПО вт_Животные.Ссылка = ИнформацияОРожденииСрезПоследних.Животное
	|ГДЕ
	|	ВзвешиванияСрезПоследних.Регистратор <> &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 			Животное);
	Запрос.УстановитьПараметр("ТекущийДокумент", 	ТекущийДокумент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтруктураДанных = Новый Структура("ВесПоследнегоВзвешивания, ПоследнийСреднесуточныйПривес, КоличествоДнейМежду, СхемаСинхронизации");
	
	Если Выборка.Следующий() Тогда  
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции






