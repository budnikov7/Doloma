
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Дата = НачалоДня(ТекущаяДата()) Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	Движения.Аборты.Записывать 					= Истина;
	Движения.СостояниеЖивотных.Записывать		= Истина; 
	Движения.ВыбраковкаЖивотных.Записывать  	= Истина;
	Движения.ПроизводственныеГруппы.Записывать 	= Истина;  
	Движения.КоличествоЛактаций.Записывать		= Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АбортЖивотные.Ссылка КАК Ссылка,
	|	АбортЖивотные.НомерСтроки КАК НомерСтроки,
	|	АбортЖивотные.Мать КАК Мать,
	|	АбортЖивотные.ТипПрекращенияСтельности КАК ТипПрекращенияСтельности,
	|	АбортЖивотные.Осеменатор КАК Осеменатор,
	|	ПОДСТРОКА(АбортЖивотные.Примечание, 1, 500) КАК Примечание,
	|	АбортЖивотные.ОткрытьЛактацию КАК ОткрытьЛактацию,
	|	ЕСТЬNULL(ПроизводственныеГруппыСрезПоследних.ПроизводственнаяГруппа, ЗНАЧЕНИЕ(Перечисление.ПроизводственныеГруппы.ПустаяСсылка)) КАК ПроизводственнаяГруппа,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА Отелы.Период ЕСТЬ NULL
	|					И Аборты.Период ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ РАЗНОСТЬДАТ(ВЫБОР
	|						КОГДА ЕСТЬNULL(Отелы.Период, ДАТАВРЕМЯ(1, 1, 1)) >= ЕСТЬNULL(Аборты.Период, ДАТАВРЕМЯ(1, 1, 1))
	|							ТОГДА ЕСТЬNULL(Отелы.Период, ДАТАВРЕМЯ(1, 1, 1))
	|						ИНАЧЕ ЕСТЬNULL(Аборты.Период, ДАТАВРЕМЯ(1, 1, 1))
	|					КОНЕЦ, &Дата, ДЕНЬ)
	|		КОНЕЦ) КАК МежотёльныйПериод
	|ИЗ
	|	Документ.Аборт.Животные КАК АбортЖивотные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроизводственныеГруппы.СрезПоследних(&Дата, ) КАК ПроизводственныеГруппыСрезПоследних
	|		ПО АбортЖивотные.Мать = ПроизводственныеГруппыСрезПоследних.Животное
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Отелы КАК Отелы
	|		ПО АбортЖивотные.Мать = Отелы.Мать
	|			И (&Дата > Отелы.Период)
	|			И (&Ссылка <> Отелы.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Аборты КАК Аборты
	|		ПО АбортЖивотные.Мать = Аборты.Мать
	|			И (&Ссылка <> Аборты.Регистратор)
	|			И (&Дата > Аборты.Период)
	|			И (Аборты.ОткрытьЛактацию = ИСТИНА)
	|ГДЕ
	|	АбортЖивотные.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	АбортЖивотные.Ссылка,
	|	АбортЖивотные.НомерСтроки,
	|	АбортЖивотные.Мать,
	|	АбортЖивотные.ТипПрекращенияСтельности,
	|	АбортЖивотные.Осеменатор,
	|	ПОДСТРОКА(АбортЖивотные.Примечание, 1, 500),
	|	АбортЖивотные.ОткрытьЛактацию,
	|	ЕСТЬNULL(ПроизводственныеГруппыСрезПоследних.ПроизводственнаяГруппа, ЗНАЧЕНИЕ(Перечисление.ПроизводственныеГруппы.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мать
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	СписокЖивотныхРодителей = Запрос.Выполнить().Выгрузить();
	
	РанееИспользованноеЖивотное = "";
	
	Для Каждого СтрокаТабличнойЧасти Из СписокЖивотныхРодителей Цикл
		
		Если РанееИспользованноеЖивотное = СтрокаТабличнойЧасти.Мать Тогда
			РанееИспользованноеЖивотное = СтрокаТабличнойЧасти.Мать;
			Продолжить;
		Иначе
			РанееИспользованноеЖивотное = СтрокаТабличнойЧасти.Мать;
		КонецЕсли;
		
		НовоеДвижение 							= Движения.Аборты.Добавить();
		НовоеДвижение.Регистратор	 			= Ссылка;
		НовоеДвижение.Период 					= Дата;
		НовоеДвижение.Мать						= СтрокаТабличнойЧасти.Мать;
		НовоеДвижение.ТипПрекращенияСтельности 	= СтрокаТабличнойЧасти.ТипПрекращенияСтельности;
		НовоеДвижение.Осеменатор 				= СтрокаТабличнойЧасти.Осеменатор;
		НовоеДвижение.Примечание 				= СтрокаТабличнойЧасти.Примечание;
		НовоеДвижение.ОткрытьЛактацию 			= СтрокаТабличнойЧасти.ОткрытьЛактацию;
		НовоеДвижение.МежотёльныйПериод			= СтрокаТабличнойЧасти.МежотёльныйПериод;
		
		НовоеДвижение 							= Движения.СостояниеЖивотных.Добавить();
		НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Мать;
		НовоеДвижение.Период 					= Дата;
		НовоеДвижение.Регистратор 				= Ссылка;
		НовоеДвижение.СостояниеЖивотного 		= Перечисления.СтатусЖивотного.НеСтельная;  
		
		Выбраковывать = Ферма.ВыбраковыватьЖивотныхПослеАборта;
		Если Выбраковывать Тогда
			НовоеДвижение 						= Движения.ВыбраковкаЖивотных.Добавить();
			НовоеДвижение.Животное 				= СтрокаТабличнойЧасти.Мать;
			НовоеДвижение.Период 				= Дата;
			НовоеДвижение.Регистратор 			= Ссылка;
			НовоеДвижение.Брак					= Истина;
			НовоеДвижение.ПричинаВыбраковки     = Перечисления.ПричиныВыбраковки.Аборт; 
			
			Если СтрокаТабличнойЧасти.ПроизводственнаяГруппа <> Перечисления.ПроизводственныеГруппы.Брак Тогда
				НовоеДвижение 							= Движения.ПроизводственныеГруппы.Добавить();
				НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Мать;
				НовоеДвижение.Период 					= Дата;
				НовоеДвижение.ПроизводственнаяГруппа	= Перечисления.ПроизводственныеГруппы.Брак; 
			КонецЕсли;  
			
		ИначеЕсли СтрокаТабличнойЧасти.ОткрытьЛактацию И СтрокаТабличнойЧасти.ПроизводственнаяГруппа <> Перечисления.ПроизводственныеГруппы.Корова 
					И СтрокаТабличнойЧасти.ПроизводственнаяГруппа <> Перечисления.ПроизводственныеГруппы.Брак Тогда	
			НовоеДвижение 							= Движения.ПроизводственныеГруппы.Добавить();
			НовоеДвижение.Животное 					= СтрокаТабличнойЧасти.Мать;
			НовоеДвижение.Период 					= Дата;
			НовоеДвижение.ПроизводственнаяГруппа	= Перечисления.ПроизводственныеГруппы.Корова; 
		КонецЕсли; 
		
		Если СтрокаТабличнойЧасти.ОткрытьЛактацию Тогда
			НовоеДвижение 						= Движения.КоличествоЛактаций.Добавить();
			НовоеДвижение.ВидДвижения 			= ВидДвиженияНакопления.Приход;
			НовоеДвижение.КоличествоЛактаций 	= 1;
			НовоеДвижение.Мать					= СтрокаТабличнойЧасти.Мать;
			НовоеДвижение.Период				= Дата;
			НовоеДвижение.Регистратор			= Ссылка;
			НовоеДвижение.Ферма					= Ферма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УЗД") Тогда
		
		Автор 							= ДанныеЗаполнения.Автор;
		ДокументОснование 				= ДанныеЗаполнения.Ссылка;
		Ферма 							= ДанныеЗаполнения.Ферма;
		
		Для Каждого СтрокаТабличнойЧасти Из ДанныеЗаполнения.Животные Цикл
			
			Если СтрокаТабличнойЧасти.Статус = Перечисления.СтатусЖивотного.НеСтельная Тогда
				
				НоваяСтрока 														= Животные.Добавить();
				НоваяСтрока.Мать 												= СтрокаТабличнойЧасти.Животное;
				НоваяСтрока.ТипПрекращенияСтельности 	= Перечисления.ТипПрекращенияСтельности.Аборт;
				НоваяСтрока.Осеменатор									= ДанныеЗаполнения.Ссылка.СпециалистУЗИ;
				НоваяСтрока.ОткрытьЛактацию 						= Истина;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НеСтельныеЖивотные = ВыборкаНеСтельныхЖивотных();
	Если НеСтельныеЖивотные.Количество() > 0 Тогда  
		Пока НеСтельныеЖивотные.Следующий() Цикл
			ТекстОшибки = "Строка " + НеСтельныеЖивотные.НомерСтроки + ": животное " + НеСтельныеЖивотные.Животное + " не стельное!" + Символы.ПС;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки; 
			Сообщение.Поле = "Животные["+Строка(НеСтельныеЖивотные.НомерСтроки-1)+"].Мать";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЦикла;
		Отказ = Истина; 	
	КонецЕсли;	
	
КонецПроцедуры  

Функция ВыборкаНеСтельныхЖивотных()
	
	ТЧЖивотные = Животные.Выгрузить(,"НомерСтроки, Мать");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЧЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ТЧЖивотные.Мать КАК Животное
	               |ПОМЕСТИТЬ втЖивотные
	               |ИЗ
	               |	&ТЧЖивотные КАК ТЧЖивотные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втЖивотные.НомерСтроки КАК НомерСтроки,
	               |	ПРЕДСТАВЛЕНИЕССЫЛКИ(втЖивотные.Животное) КАК Животное,
	               |	СостояниеЖивотныхСрезПоследних.СостояниеЖивотного КАК СостояниеЖивотного
	               |ИЗ
	               |	втЖивотные КАК втЖивотные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЖивотных.СрезПоследних(&ДатаДокумента, Регистратор <> &Ссылка) КАК СостояниеЖивотныхСрезПоследних
	               |		ПО втЖивотные.Животное = СостояниеЖивотныхСрезПоследних.Животное
	               |ГДЕ
	               |	СостояниеЖивотныхСрезПоследних.СостояниеЖивотного = ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.НеСтельная)";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",МоментВремени());
	Запрос.УстановитьПараметр("ТЧЖивотные",ТЧЖивотные);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;

КонецФункции // ПроверкаНаСтельность()


