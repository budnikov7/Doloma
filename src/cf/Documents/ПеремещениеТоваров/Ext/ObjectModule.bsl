
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
    Движения.ТоварыНаСкладах.Очистить();
    Движения.ТоварыНаСкладах.Записывать = Истина;
    Движения.Записать();
    
    ВыборкаТовары = РасчетСебестоимостиСервер.ПолучитьОстатки("ПеремещениеТоваров", "Товары", "Номенклатура",Ссылка, СкладОтправитель);
    
    Пока ВыборкаТовары.Следующий() Цикл
       
        Дефицит = ВыборкаТовары.Количество - ВыборкаТовары.КоличествоОстатокВЕдиницахДокумента;
        Если Дефицит > 0 Тогда
            Отказ = Истина;
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = СтрШаблон("Номенклатуры %1 недостаточно в количестве %2 %3",ВыборкаТовары.НоменклатураПредставление,Дефицит,ВыборкаТовары.ЕдиницаИзмерения);
            Сообщение.Сообщить();
        КонецЕсли;
       
        Если Отказ Тогда
            Продолжить;
        КонецЕсли;  
        
        Если ВыборкаТовары.Количество = ВыборкаТовары.КоличествоОстатокВЕдиницахДокумента Тогда
	        Сумма		 		= ВыборкаТовары.СуммаОстаток;
		Иначе
	        Сумма		 		= ВыборкаТовары.Количество * ВыборкаТовары.Кофффициент * ВыборкаТовары.Цена;
	    КонецЕсли;  
        
        Движение 				= Движения.ТоварыНаСкладах.ДобавитьРасход();
        Движение.Период 		= Дата;
        Движение.Склад 			= ВыборкаТовары.Склад;
        Движение.Номенклатура 	= ВыборкаТовары.Номенклатура;
        Движение.Количество 	= ВыборкаТовары.Количество * ВыборкаТовары.Кофффициент;
	    Движение.Сумма		 	= Сумма;
	    
		Движение				= Движения.ТоварыНаСкладах.ДобавитьПриход();
		Движение.Период			= Дата;  
		Движение.Склад			= СкладПолучатель;
		Движение.Номенклатура 	= ВыборкаТовары.Номенклатура;
		Движение.Количество		= ВыборкаТовары.Количество * ВыборкаТовары.Кофффициент;
		Движение.Сумма 			= Сумма;
        
    КонецЦикла;
    
	//ПроверкаОстатков(Отказ); 
	//Если Не Отказ Тогда
	//
	//	Для каждого СтрокаТабличнойЧасти Из Товары Цикл
	//		
	//		НовоеДвижение				= Движения.ТоварыНаСкладах.Добавить();
	//		НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
	//		НовоеДвижение.Период		= Дата;
	//		НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
	//		НовоеДвижение.Склад			= СкладПолучатель;
	//		НовоеДвижение.Количество	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
	//		НовоеДвижение.Сумма 		= СтрокаТабличнойЧасти.Сумма;
	//		
	//		НовоеДвижение				= Движения.ТоварыНаСкладах.Добавить();
	//		НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	//		НовоеДвижение.Период		= Дата;
	//		НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
	//		НовоеДвижение.Склад			= СкладОтправитель;
	//		НовоеДвижение.Количество	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
	//		НовоеДвижение.Сумма 		= СтрокаТабличнойЧасти.Сумма;
	//		
	//	КонецЦикла;
	//КонецЕсли;  
	
    Движения.ТоварыНаСкладах.Записывать = Истина;	
	
КонецПроцедуры 

Процедура ПроверкаОстатков(Отказ)
	
	ТоварыКопия = Товары.Выгрузить();
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(ТоварыКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК КоличествоДокумент, 
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ВременнаяТаблица КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Остатки.Номенклатура КАК Номенклатура,
		|			Остатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(
		|					&ДатаПроверки,
		|					Номенклатура В
		|							(ВЫБРАТЬ
		|								ТаблицаДокумента.Номенклатура
		|							ИЗ
		|								ТаблицаДокумента)
		|						И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
		|		ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 				Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", 		ТоварыКопия.Скопировать());
	Запрос.УстановитьПараметр("Склад", 								СкладОтправитель);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить("На складе - " + СкладОтправитель + " не хватает остатка по товару " + СтрокаТабличнойЧасти.Номенклатура + 
								". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения + 
								", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры



