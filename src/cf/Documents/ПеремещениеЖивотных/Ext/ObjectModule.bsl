Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроверкаЗаполнения(Отказ);
	
	Если ЖивотныеЗапуск.Количество() Тогда
		ПроверкаОстатков(Отказ);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Движения.РазмещениеЖивотных.Записывать 	= Истина;
	Движения.КонтрольныеНадои.Записывать 	= Истина;
	Движения.ТоварыНаСкладах.Записывать		= Истина;
	Движения.ЗапускЖивотных.Записывать 		= Истина;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеЗапуск Цикл
		
		НовоеДвижение 			= Движения.РазмещениеЖивотных.Добавить();
		НовоеДвижение.Период 	= Дата;
		НовоеДвижение.Животное 	= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.Корпус 	= КорпусПолучатель;
		НовоеДвижение.Ферма 	= ДанныеЖивотных.МестонахождениеЖивотного(СтрокаТабличнойЧасти.Животное, Дата, Истина);
		
		НовоеДвижение 				= Движения.ЗапускЖивотных.Добавить();
		НовоеДвижение.Животное 		= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.Регистратор 	= Ссылка;
		НовоеДвижение.Период 		= Дата;
		НовоеДвижение.ДатаЗапуска 	= Дата;
			
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из СписокПрепаратов Цикл
			
		НовоеДвижение 				= Движения.ТоварыНаСкладах.Добавить();
		НовоеДвижение.Период		= Дата;
		НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		НовоеДвижение.Регистратор 	= Ссылка;
		НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Препарат;
		НовоеДвижение.Склад 		= Склад;
		НовоеДвижение.Количество 	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(СтрокаТабличнойЧасти.Препарат, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
		НовоеДвижение.Сумма		 	= СредняяЦенаПрепарата(СтрокаТабличнойЧасти.Препарат) * НовоеДвижение.Количество;
			
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеМеждуКорпусами Цикл
		
		НовоеДвижение 			= Движения.РазмещениеЖивотных.Добавить();
		НовоеДвижение.Период   	= Дата;
		НовоеДвижение.Животное 	= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.Корпус   	= КорпусПолучатель;
		НовоеДвижение.Ферма		= ДанныеЖивотных.МестонахождениеЖивотного(СтрокаТабличнойЧасти.Животное, Дата, Истина);
		
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеМеждуФермами Цикл
		
		НовоеДвижение 			= Движения.РазмещениеЖивотных.Добавить();
		НовоеДвижение.Период   	= Дата;
		НовоеДвижение.Животное 	= СтрокаТабличнойЧасти.Животное;
		НовоеДвижение.Корпус   	= КорпусПолучатель;
		НовоеДвижение.Ферма		= ФермаПолучатель;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаЗаполнения(Отказ)

	Если ЖивотныеЗапуск.Количество() 
		И Не ЗначениеЗаполнено(КорпусПолучатель) Тогда
		
		Сообщить("Не заполнен корпус получатель для операции 'Запуск'. Движения по запуску невозможны");
		Отказ = Истина;
	КонецЕсли;                                           
	
	Если СписокПрепаратов.Количество() 
		И Не ЗначениеЗаполнено(Склад) Тогда
		
		Сообщить("Не заполнен склад препаратов для операции 'Запуск'. Движения по запуску невозможны");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЖивотныеМеждуКорпусами.Количество()
		И Не ЗначениеЗаполнено(КорпусПолучатель) Тогда
		
		Сообщить("Не заполнен корпус получатель для операции 'Между корпусами'. Движения между корпусами невозможны");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЖивотныеМеждуФермами.Количество() 
		И Не ЗначениеЗаполнено(КорпусПолучатель) Тогда
		
		Сообщить("Не заполнен корпус получатель для операции 'Между фермами'. Движения между фермами невозможны");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЖивотныеМеждуФермами.Количество() 
		И Не ЗначениеЗаполнено(ФермаПолучатель) Тогда
		
		Сообщить("Не заполнена ферма получатель для операции 'Между фермами'. Движения между фермами невозможны");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция СредняяЦенаПрепарата(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|ВЫБОР КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = 0 Тогда
		|	0
		|ИНАЧЕ
		|	ТоварыНаСкладахОстатки.СуммаОстаток / ТоварыНаСкладахОстатки.КоличествоОстаток
		|КОНЕЦ КАК СредняяЦена
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаПроверки,
		|			Номенклатура = &Номенклатура
		|				И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	Дата);
	Запрос.УстановитьПараметр("Номенклатура",	Номенклатура);
	Запрос.УстановитьПараметр("Склад", 			Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СредняяЦена;
	
КонецФункции

Процедура ПроверкаОстатков(Отказ)
	
	Если Не СписокПрепаратов.Количество() Тогда
		Возврат;
	КонецЕсли;	
	
	СписокПрепаратовКопия = СписокПрепаратов.Выгрузить();
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(СписокПрепаратовКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Препарат КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК КоличествоДокумент, 
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ВременнаяТаблица КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕстьNull(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Остатки.Номенклатура КАК Номенклатура,
		|			Остатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(
		|					&ДатаПроверки,
		|					Номенклатура В
		|							(ВЫБРАТЬ
		|								ТаблицаДокумента.Номенклатура
		|							ИЗ
		|								ТаблицаДокумента)
		|						И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
		|		ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 				Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", 		СписокПрепаратовКопия.Скопировать());
	Запрос.УстановитьПараметр("Склад", 								Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить(		"На складе - " + Склад + " не хватает остатка препарата " + СтрокаТабличнойЧасти.Номенклатура + 
									". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения + 
									", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РождениеТеленка") Тогда
		
		Автор 				= ДанныеЗаполнения.Автор;
		Запуск	 			= Ложь;
		ДокументОснование 	= ДанныеЗаполнения;
		КорпусПолучатель 	= ДанныеЗаполнения.КорпусПеремещения;
		КорпусОтправитель	= ДанныеЗаполнения.Ферма.КорпусДляОтела;	
		
		ЖивотныеСписок  	= ДанныеЗаполнения.Животные.Выгрузить();
		ЖивотныеСписок.Свернуть("Мать");
		
		
		Для Каждого ТекСтрокаЖивотные Из ЖивотныеСписок Цикл
			
			НоваяСтрока 			= ЖивотныеМеждуКорпусами.Добавить();
			НоваяСтрока.Животное 	= ТекСтрокаЖивотные.Мать;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеМеждуКорпусами Цикл
		
		Если ЗначениеЗаполнено(МеждуКорпусамиПредставление) Тогда
			МеждуКорпусамиПредставление = МеждуКорпусамиПредставление + ", ";
		КонецЕсли;
		
		МеждуКорпусамиПредставление = МеждуКорпусамиПредставление + СтрокаТабличнойЧасти.Животное;
		
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеМеждуФермами Цикл
		
		Если ЗначениеЗаполнено(МеждуФермамиПредставление) Тогда
			МеждуФермамиПредставление = МеждуФермамиПредставление + ", ";
		КонецЕсли;
		
		МеждуФермамиПредставление = МеждуФермамиПредставление + СтрокаТабличнойЧасти.Животное;
		
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеЗапуск Цикл
		
		Если ЗначениеЗаполнено(ЗапускПредставление) Тогда
			ЗапускПредставление = ЗапускПредставление + ", ";
		КонецЕсли;
		
		ЗапускПредставление = ЗапускПредставление + СтрокаТабличнойЧасти.Животное;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ВыборкаПроверки = ВыборкаНеправильногоРазмещения();
	Если ВыборкаПроверки.Количество() > 0 Тогда
		Пока ВыборкаПроверки.Следующий() Цикл
			ТекстОшибки = "Строка " + ВыборкаПроверки.НомерСтроки + ": животное " + ВыборкаПроверки.Животное
					+ " находится на ферме " + ВыборкаПроверки.Ферма +
					?(ВыборкаПроверки.ТЧ<>"ЖивотныеМеждуФермами", " в корпусе " + ВыборкаПроверки.Корпус,"") + "!" + Символы.ПС;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Поле = ВыборкаПроверки.ТЧ + "["+Строка(ВыборкаПроверки.НомерСтроки-1)+"].Животное";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;
	
	ВыборкаПроверки = ВыборкаНеСтельныхВЗапуске();
	Если ВыборкаПроверки.Количество() > 0 Тогда
		Пока ВыборкаПроверки.Следующий() Цикл
			ТекстОшибки = "Строка " + ВыборкаПроверки.НомерСтроки + ": животное " + ВыборкаПроверки.Животное
					+ " не стельная" + Символы.ПС;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Поле = "ЖивотныеЗапуск["+Строка(ВыборкаПроверки.НомерСтроки-1)+"].Животное";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборкаНеправильногоРазмещения()
	
	ТЧЖивотныеЗапуск 			= ЖивотныеЗапуск.Выгрузить(,"НомерСтроки, Животное");
	ТЧЖивотныеМеждуКорпусами 	= ЖивотныеМеждуКорпусами.Выгрузить(,"НомерСтроки, Животное");
	ТЧЖивотныеМеждуФермами 		= ЖивотныеМеждуФермами.Выгрузить(,"НомерСтроки, Животное");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",МоментВремени());
	Запрос.УстановитьПараметр("ТЧЖивотныеЗапуск",ТЧЖивотныеЗапуск);
	Запрос.УстановитьПараметр("ТЧЖивотныеМеждуКорпусами",ТЧЖивотныеМеждуКорпусами);
	Запрос.УстановитьПараметр("ТЧЖивотныеМеждуФермами",ТЧЖивотныеМеждуФермами);
	Запрос.УстановитьПараметр("Ферма",ФермаОтправитель);
	Запрос.УстановитьПараметр("Корпус",КорпусОтправитель);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧЖивотныеЗапуск.НомерСтроки КАК НомерСтроки,
	|	ТЧЖивотныеЗапуск.Животное КАК Животное,
	|	""ЖивотныеЗапуск"" КАК ТЧ
	|ПОМЕСТИТЬ втЖивотныеЗапуск
	|ИЗ
	|	&ТЧЖивотныеЗапуск КАК ТЧЖивотныеЗапуск
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧЖивотныеМеждуКорпусами.НомерСтроки КАК НомерСтроки,
	|	ТЧЖивотныеМеждуКорпусами.Животное КАК Животное,
	|	""ЖивотныеМеждуКорпусами"" КАК ТЧ
	|ПОМЕСТИТЬ втЖивотныеМеждуКорпусами
	|ИЗ
	|	&ТЧЖивотныеМеждуКорпусами КАК ТЧЖивотныеМеждуКорпусами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧЖивотныеМеждуФермами.НомерСтроки КАК НомерСтроки,
	|	ТЧЖивотныеМеждуФермами.Животное КАК Животное,
	|	""ЖивотныеМеждуФермами"" КАК ТЧ
	|ПОМЕСТИТЬ втЖивотныеМеждуФермами
	|ИЗ
	|	&ТЧЖивотныеМеждуФермами КАК ТЧЖивотныеМеждуФермами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЖивотныеЗапуск.НомерСтроки КАК НомерСтроки,
	|	втЖивотныеЗапуск.Животное КАК Животное,
	|	втЖивотныеЗапуск.ТЧ КАК ТЧ
	|ПОМЕСТИТЬ втОбъединенная
	|ИЗ
	|	втЖивотныеЗапуск КАК втЖивотныеЗапуск
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЖивотныеМеждуКорпусами.НомерСтроки,
	|	втЖивотныеМеждуКорпусами.Животное,
	|	втЖивотныеМеждуКорпусами.ТЧ
	|ИЗ
	|	втЖивотныеМеждуКорпусами КАК втЖивотныеМеждуКорпусами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втЖивотныеМеждуФермами.НомерСтроки,
	|	втЖивотныеМеждуФермами.Животное,
	|	втЖивотныеМеждуФермами.ТЧ
	|ИЗ
	|	втЖивотныеМеждуФермами КАК втЖивотныеМеждуФермами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъединенная.НомерСтроки КАК НомерСтроки,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(втОбъединенная.Животное) КАК Животное,
	|	РазмещениеЖивотныхСрезПоследних.Ферма КАК Ферма,
	|	РазмещениеЖивотныхСрезПоследних.Корпус КАК Корпус,
	|	втОбъединенная.ТЧ КАК ТЧ
	|ИЗ
	|	втОбъединенная КАК втОбъединенная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЖивотных.СрезПоследних(&ДатаДокумента, Регистратор <> &Ссылка) КАК РазмещениеЖивотныхСрезПоследних
	|		ПО втОбъединенная.Животное = РазмещениеЖивотныхСрезПоследних.Животное
	|ГДЕ
	|	(РазмещениеЖивотныхСрезПоследних.Ферма <> &Ферма
	|			ИЛИ ВЫБОР
	|				КОГДА втОбъединенная.ТЧ <> ""ЖивотныеМеждуФермами""
	|					ТОГДА РазмещениеЖивотныхСрезПоследних.Корпус <> &Корпус
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;

КонецФункции // ПроверкаНаСтельность()

Функция ВыборкаНеСтельныхВЗапуске()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента",МоментВремени());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеЖивотныхЖивотныеЗапуск.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеЖивотныхЖивотныеЗапуск.Животное КАК Животное
	|ИЗ
	|	Документ.ПеремещениеЖивотных.ЖивотныеЗапуск КАК ПеремещениеЖивотныхЖивотныеЗапуск
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЖивотных.СрезПоследних(&ДатаДокумента, ) КАК СостояниеЖивотныхСрезПоследних
	|		ПО ПеремещениеЖивотныхЖивотныеЗапуск.Животное = СостояниеЖивотныхСрезПоследних.Животное
	|ГДЕ
	|	ПеремещениеЖивотныхЖивотныеЗапуск.Ссылка = &Ссылка
	|	И СостояниеЖивотныхСрезПоследних.СостояниеЖивотного <> ЗНАЧЕНИЕ(Перечисление.СтатусЖивотного.Стельная)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеЖивотныхЖивотныеЗапуск.НомерСтроки";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Возврат Выборка;
	
КонецФункции





































