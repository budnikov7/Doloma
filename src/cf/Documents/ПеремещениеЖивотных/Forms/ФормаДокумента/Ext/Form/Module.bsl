&НаКлиенте
Перем РанееИспользованнаяСтрока;
&НаКлиенте
Перем ПолеСвязи;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.ФермаОтправитель = Объект.Автор.ОсновнаяФерма;
	Конецесли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ГруппаСтраницыПриСменеСтраницы(Неопределено, Элементы.ГруппаСтраницы.ТекущаяСтраница); 
	
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Константы.ПроверятьЗаполнениеПрепаратов.Получить() = Истина Тогда
		Если Объект.ЖивотныеЗапуск.Количество() > 0 И НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			ОбщегоНазначения.СообщитьПользователю("Заполните склад для списания препаратов, применяемых при лечении",,"Объект.Склад",,Отказ);
		КонецЕсли;
		Если Объект.ЖивотныеЗапуск.Количество() > 0 И Объект.СписокПрепаратов.Количество() = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Заполните препараты применяемые при лечении",,"Объект.СписокПрепаратов",,Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущиеДанные = Элементы[ЭтаФорма.ТекущийЭлемент.Имя].ТекущиеДанные;
	
	ТекущиеДанные.Животное = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеМеждуКорпусамиЖивотноеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЖивотныеМеждуКорпусами.ТекущиеДанные;	
	МестонахождениеКоровыФерма = ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата, Истина);
	МестонахождениеКоровыКорпус = ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата);
	
	Если НЕ МестонахождениеКоровыФерма = Объект.ФермаОтправитель Тогда

		Сообщить("Животное находится на другой ферме - " + МестонахождениеКоровыФерма + ". Перемещение с текущей фермы невозможно.");
		ТекущиеДанные.Животное = "";
		Возврат;
	КонецЕсли;
	
	Если НЕ МестонахождениеКоровыКорпус = Объект.КорпусОтправитель Тогда

		Сообщить("Животное находится в другом корпусе - " + МестонахождениеКоровыКорпус + ". Перемещение с текущего корпуса невозможно.");
		ТекущиеДанные.Животное = "";
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеМеждуФермамиЖивотноеПриИзменении(Элемент)
	
    ТекущиеДанные = Элементы.ЖивотныеМеждуФермами.ТекущиеДанные;
	
	ФермаЖивотного 	= ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата, Истина);
	КорпусЖивотного = ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата);	
	
	Если НЕ (ФермаЖивотного = Объект.ФермаОтправитель И КорпусЖивотного = Объект.КорпусОтправитель) Тогда 
		Сообщить("Данное животное находится на другой ферме или в другом корпусе. Текущее местопложение:" + Символы.ПС + "Ферма - " + ФермаЖивотного + Символы.ПС + "Корпус - " + КорпусЖивотного);
		ТекущиеДанные.Животное = "";
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЗапускЖивотноеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЖивотныеЗапуск.ТекущиеДанные;
	
	ТекущиеДанные.ПолеСвязи = ?(ЗначениеЗаполнено(ТекущиеДанные.ПолеСвязи), ТекущиеДанные.ПолеСвязи, Новый УникальныйИдентификатор);
	ПолеСвязи = ТекущиеДанные.ПолеСвязи;
	
	//Элементы.СписокПрепаратов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ПолеСвязи", ТекущиеДанные.ПолеСвязи));  
	
	ФермаЖивотного 	= ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата, Истина);
	КорпусЖивотного = ДанныеЖивотных.МестонахождениеЖивотного(ТекущиеДанные.Животное, Объект.Дата);	
	
	Если НЕ (ФермаЖивотного = Объект.ФермаОтправитель И КорпусЖивотного = Объект.КорпусОтправитель) Тогда 
		Сообщить("Данное животное находится на другой ферме или в другом корпусе. Текущее местопложение:" + Символы.ПС + "Ферма - " + ФермаЖивотного + Символы.ПС + "Корпус - " + КорпусЖивотного);
		ТекущиеДанные.Животное = "";
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЗапускПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ЖивотныеЗапуск.ТекущиеДанные;
	
	Если РанееИспользованнаяСтрока = ТекущиеДанные Тогда
		
		Возврат;
		
	КонецЕсли;
	
	РанееИспользованнаяСтрока = ТекущиеДанные;
	
	Если РанееИспользованнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеСвязи = РанееИспользованнаяСтрока.ПолеСвязи; 
	
	//Элементы.СписокПрепаратов.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("ПолеСвязи", ТекущиеДанные.ПолеСвязи));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПрепаратовПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ПолеСвязи = ПолеСвязи;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПрепаратовПрепаратПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Препарат, "ЕдиницаИзмерения");
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//СКРЫВАЕМ ИЛИ ОТКРЫВАЕМ ВИДИМОСТЬ ЭЛЕМЕНОВ ОСНОВНЫХ ДАННЫХ 
	
	Элементы.МеждуКорпусамиОсновныеДанные.Видимость 			= ТекущаяСтраница.Имя = "МеждуКорпусами";
	Элементы.МеждуФермамиОсновныеДанные.Видимость				= ТекущаяСтраница.Имя = "МеждуФермами";
	Элементы.ЗапускОсновныеДанные.Видимость 					= ТекущаяСтраница.Имя = "ЗапускЖивотного";
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаВозможностиИзмененияРеквизита(ВыбранноеЗначение, СтандартнаяОбработка, НазваниеРеквизита) 
	
	//ПРОВЕРИМ НЕ ДОБАВЛЯЛИ ЛИ ЖИВОТНЫХ С ЭТИМ ЗНАЧЕНИЕМ
	Если Не Объект[НазваниеРеквизита] = ВыбранноеЗначение
			И ТипЗнч(Объект[НазваниеРеквизита]) = Тип("СправочникСсылка.Корпуса") Тогда
		
		Если Объект.ЖивотныеМеждуКорпусами.Количество()
				ИЛИ Объект.ЖивотныеМеждуФермами.Количество()
				ИЛИ Объект.ЖивотныеЗапуск.Количество() Тогда
				
				СтандартнаяОбработка = Ложь;
				Сообщить("Изменение корпуса невозможно. В документе добавлены животные, находящиеся в этом корпусе");
				
		КонецЕсли;		
	ИначеЕсли Не Объект[НазваниеРеквизита] = ВыбранноеЗначение
			И ТипЗнч(Объект[НазваниеРеквизита]) = Тип("СправочникСсылка.Фермы") Тогда
			
			Если Объект.ЖивотныеМеждуФермами.Количество() ИЛИ Объект.ЖивотныеМеждуКорпусами.Количество() 
				ИЛИ Объект.ЖивотныеЗапуск.Количество() Тогда
				СтандартнаяОбработка = Ложь;
				Сообщить("Изменение фермы невозможно. В документ добавлены животные, находящиеся в этой ферме");
			КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура КорпусОтправительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверкаВозможностиИзмененияРеквизита(ВыбранноеЗначение, СтандартнаяОбработка, "КорпусОтправитель");
	
КонецПроцедуры

&НаКлиенте
Процедура ФермаОтправительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверкаВозможностиИзмененияРеквизита(ВыбранноеЗначение, СтандартнаяОбработка, "ФермаОтправитель");
	
КонецПроцедуры

&НаКлиенте
Процедура КорпусОтправитель1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверкаВозможностиИзмененияРеквизита(ВыбранноеЗначение, СтандартнаяОбработка, "КорпусОтправитель");
	
КонецПроцедуры

&НаКлиенте
Процедура КорпусОтправитель2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПроверкаВозможностиИзмененияРеквизита(ВыбранноеЗначение, СтандартнаяОбработка, "КорпусОтправитель");
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФермаПользователя = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ОбщегоНазначения.ТекущийПользователь(), "ОсновнаяФерма"); 
	Если ЗначениеЗаполнено(ФермаПользователя) Тогда
		Если Объект.ФермаОтправитель <> ФермаПользователя Тогда
			ПоказатьПредупреждение(,"Ферма в документе не соответствует ферме пользователя: " + ФермаПользователя + ". Выбор невозможен.",10,"Выбор животного");
			Возврат;
		КонецЕсли;
	Иначе
		ФермаПользователя = Объект.ФермаОтправитель;
	КонецЕсли;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", ФермаПользователя);
	СписокПараметров.Вставить("НеобходимоОповестить", Истина);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	ФермаПользователя = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ОбщегоНазначения.ТекущийПользователь(), "ОсновнаяФерма");
	Если ЗначениеЗаполнено(ФермаПользователя) Тогда
		Если Объект.ФермаОтправитель <> ФермаПользователя Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	Иначе
		ФермаПользователя = Объект.ФермаОтправитель;
	КонецЕсли;
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(ФермаПользователя, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;
	
КонецПроцедуры
















