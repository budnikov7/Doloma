
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверкаОстатков(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ПериодыБолезнейЖивотных.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать			= Истина;
	
	Для каждого СтрокаТабличнойЧасти Из ЖивотныеНаЛечении Цикл
		
		НовоеДвижение	 			= Движения.ПериодыБолезнейЖивотных.Добавить();
		НовоеДвижение.Период 		= НачалоДня(Дата);
		НовоеДвижение.Животное 		= СтрокаТабличнойЧасти.Животное;
		Если ВидМероприятия = Перечисления.ВидыМероприятий.Групповые Тогда
			НовоеДвижение.Заболевание 	= ПроводимоеМероприятие;
		Иначе	
			НовоеДвижение.Заболевание 	= СтрокаТабличнойЧасти.Заболевание;
		КонецЕсли;
		НовоеДвижение.СтатусБолезни = Перечисления.ПериодыЗаболеваний.КонецЛечения;
		НовоеДвижение.СписокПрепаратовПолеСвязи	= ?(СтрокаТабличнойЧасти.Заболевание = Справочники.Заболевания.Мастит, "", СтрокаТабличнойЧасти.ПолеСвязи);
		
	КонецЦикла;
	
	Для каждого СтрокаТабличнойЧасти Из СписокИспользованныхПрепаратов Цикл
		
		НовоеДвижение 				= Движения.ТоварыНаСкладах.Добавить();
		НовоеДвижение.Период		= Дата;
		НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		НовоеДвижение.Регистратор 	= Ссылка;
		НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Препарат;
		НовоеДвижение.Склад 		= Склад;
		НовоеДвижение.Количество 	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(
										СтрокаТабличнойЧасти.Препарат, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
		НовоеДвижение.Сумма		 	= СредняяЦенаПрепарата(СтрокаТабличнойЧасти.Препарат) * НовоеДвижение.Количество;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) 
	
	НепроверяемыеРеквизиты = Новый Массив();
	
	Если Проведен Тогда  
		НепроверяемыеРеквизиты.Добавить("ВидМероприятия");
	КонецЕсли; 
  	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);  
	
	Если ВидМероприятия = Перечисления.ВидыМероприятий.Групповые Тогда
		ПроверяемыеРеквизиты.Добавить("ПроводимоеМероприятие");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция СредняяЦенаПрепарата(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|ВЫБОР КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток = 0 Тогда
		|	0
		|ИНАЧЕ
		|	ТоварыНаСкладахОстатки.СуммаОстаток / ТоварыНаСкладахОстатки.КоличествоОстаток
		|КОНЕЦ КАК СредняяЦена
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|&ДатаПроверки,
		|Номенклатура = &Номенклатура
		|	И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	Дата);
	Запрос.УстановитьПараметр("Номенклатура",	Номенклатура);
	Запрос.УстановитьПараметр("Склад", 		Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.СредняяЦена;
	
КонецФункции

&НаСервере
Процедура ПроверкаОстатков(Отказ)
	
	СписокПрепаратов = СписокИспользованныхПрепаратов.Выгрузить();
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(СписокПрепаратов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Препарат КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК КоличествоДокумент, 
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ВременнаяТаблица КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕстьNull(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|Остатки.Номенклатура КАК Номенклатура,
		|Остатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|РегистрНакопления.ТоварыНаСкладах.Остатки(
		|		&ДатаПроверки,
		|		Номенклатура В
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.Номенклатура
		|	ИЗ
		|		ТаблицаДокумента)
		|И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
		|		ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", 		СписокПрепаратов.Скопировать());
	Запрос.УстановитьПараметр("Склад", 		Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда

Отказ = Истина;
Сообщить("На складе - " + Склад + " не хватает остатка препарата " + СтрокаТабличнойЧасти.Номенклатура + 
		". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения  + 
		", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	КоличествоЖивотных = ЖивотныеНаЛечении.Количество();
	
КонецПроцедуры
