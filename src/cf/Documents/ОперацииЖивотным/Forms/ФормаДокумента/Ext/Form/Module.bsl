
&НаКлиенте
Перем РанееИспользованнаяСтрока, ВидМероприятия;  

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.Ферма = Объект.Автор.ОсновнаяФерма;
		Объект.Склад = Объект.Автор.ОсновнойСклад;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	ВидМероприятия = Объект.ВидМероприятия;
	УстановитьВидимость();
	
КонецПроцедуры 

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Константы.ПроверятьЗаполнениеПрепаратов.Получить() = Истина Тогда
		Если Объект.СписокИспользованныхПрепаратов.Количество() = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("Заполните препараты применяемые при лечении",,"Объект.СписокИспользованныхПрепаратов",,Отказ);
		КонецЕсли; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Животные") Тогда
		
		ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ТекущиеДанные.Животное = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ШаблоныПрепаратов") Тогда
		
		ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
		ЗаполнитьПрепаратыПоШаблону(ВыбранноеЗначение); 
		
	КонецЕсли;
	
КонецПроцедуры  

&НаКлиенте
Процедура ВидМероприятияПриИзменении(Элемент)  

	Если Объект.СписокИспользованныхПрепаратов.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВидМероприятияПриИзмененииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "При изменении вида мероприятия список использованных препаратов будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ВидМероприятияПриИзмененииЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;                                                            
	
КонецПроцедуры  

&НаКлиенте
Процедура ВидМероприятияПриИзмененииЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда 
		Объект.ВидМероприятия = ВидМероприятия;
		Возврат;
	КонецЕсли;
	
	ВидМероприятия = Объект.ВидМероприятия;
	Объект.СписокИспользованныхПрепаратов.Очистить();	
	
	УстановитьВидимость();
	
КонецПроцедуры 

//События ТЧ  

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", Объект.Ферма);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(Объект.Ферма, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииЖивотноеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Животное", 		ТекущиеДанные.Животное);
	Отбор.Вставить("Заболевание", 	ТекущиеДанные.Заболевание);
	НайденныеСтроки = Объект.ЖивотныеНаЛечении.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 1 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещение", ОбщегоНазначения);
		ПоказатьПредупреждение(ОписаниеОповещения, "В данном документе уже есть животное с таким мероприятием. Нельзя добавить две одинаковых строки");
		ТекущиеДанные.Заболевание = "";
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеНаЛеченииПриАктивизацииСтроки(Элемент)
	
	Если РанееИспользованнаяСтрока = Элементы.ЖивотныеНаЛечении.ТекущиеДанные Тогда
		Возврат;
	КонецЕсли;
	
	РанееИспользованнаяСтрока = Элементы.ЖивотныеНаЛечении.ТекущиеДанные;
	
	Если РанееИспользованнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьАвтоматическиеШаблоны()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныПрепаратов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ШаблоныПрепаратов КАК ШаблоныПрепаратов
		|ГДЕ
		|	(ШаблоныПрепаратов.АвтоматическоеЗаполнение = 2
		|			ИЛИ ШаблоныПрепаратов.АвтоматическоеЗаполнение = 3)";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьПрепаратыПоШаблону(ВыборкаДетальныеЗаписи.Ссылка);    	
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура СписокИспользованныхПрепаратовПрепаратПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокИспользованныхПрепаратов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ЕдиницаИзмерения = ОбщегоНазначения.ПолучитьСвойствоОбъекта(ТекущиеДанные.Препарат, "ЕдиницаИзмерения");
	
КонецПроцедуры

//Прочие процедуры и функции

&НаКлиенте
Процедура ЗаполнитьПоШаблону(Команда)
	
	ОткрытьФорму("Справочник.ШаблоныПрепаратов.ФормаВыбора", , ЭтаФорма);
	
КонецПроцедуры  

&НаСервере
Функция ЗаполнитьПрепаратыПоШаблону(Шаблон) 
	
	Для каждого СтрокаТабличнойЧасти Из Шаблон.СписокПрепаратов Цикл
		НоваяСтрока = Объект.СписокИспользованныхПрепаратов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	ГрупповоеМероприятие = (Объект.ВидМероприятия = ПредопределенноеЗначение("Перечисление.ВидыМероприятий.Групповые"));
	Элементы.Корпус.Видимость 								= ГрупповоеМероприятие;
	Элементы.ПроводимоеМероприятие.Видимость 				= ГрупповоеМероприятие; 
	Элементы.ПроводимоеМероприятие.АвтоОтметкаНезаполненного= ГрупповоеМероприятие;
	Элементы.ЖивотныеНаЛеченииЗаболевание.Видимость 		= НЕ ГрупповоеМероприятие;
	Элементы.Отобрать.Видимость 							= ГрупповоеМероприятие;

КонецПроцедуры // УстановитьВидимость()

//Команды

&НаКлиенте
Процедура Отобрать(Команда) 
	
	Если Не ЗначениеЗаполнено(Объект.Ферма) ИЛИ Не ЗначениеЗаполнено(Объект.Корпус) Тогда
		ПоказатьПредупреждение(, "Перед отбором необходимо выбрать ферму и корпус");
		Возврат;	
	КонецЕсли;
	
	Если Объект.ЖивотныеНаЛечении.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтобратьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОтобратьЗавершение(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтобратьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЖивотныеНаЛечении.Очистить();
	Объект.СписокИспользованныхПрепаратов.Очистить();	
	ОтобратьНаСервере(); 
	
КонецПроцедуры 

&НаСервере
Процедура ОтобратьНаСервере() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазмещениеЖивотныхСрезПоследних.Животное КАК Животное
		|ИЗ
		|	РегистрСведений.РазмещениеЖивотных.СрезПоследних(, ) КАК РазмещениеЖивотныхСрезПоследних
		|ГДЕ
		|	РазмещениеЖивотныхСрезПоследних.Ферма = &Ферма
		|	И РазмещениеЖивотныхСрезПоследних.Корпус = &Корпус
		|
		|УПОРЯДОЧИТЬ ПО
		|	Животное
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Ферма",	Объект.Ферма);
	Запрос.УстановитьПараметр("Корпус", Объект.Корпус);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		НоваяСтрока = Объект.ЖивотныеНаЛечении.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
		
	КонецЦикла;

КонецПроцедуры




