
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//ПРОВЕРИМ НАЛИЧИЕ МОЛОКА
	Движения.ТоварыНаСкладах.Записывать 		= Истина;
	Движения.ВзаиморасчетыСКлиентами.Записывать = Истина; 
    Движения.Записать();

    ВыборкаТовары = РасчетСебестоимостиСервер.ПолучитьОстатки("РеализацияТоваровУслуг", "Продукция", "Номенклатура",Ссылка, Склад);
    
	ПроверкаОстатков(Отказ);
	
	Если Не Отказ Тогда
		
		Для каждого СтрокаТабличнойЧасти Из Продукция Цикл
			
			Если СтрокаТабличнойЧасти.Номенклатура.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
				НовоеДвижение 				= Движения.ТоварыНаСкладах.ДобавитьРасход();
				НовоеДвижение.Период 		= Дата;
				НовоеДвижение.Склад 		= Склад;
				НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
				НовоеДвижение.Количество 	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
				Если СтрокаТабличнойЧасти.СуммаСНДС <> 0 Тогда
					НовоеДвижение.Сумма 	= СтрокаТабличнойЧасти.СуммаСНДС;
				Иначе
					НовоеДвижение.Сумма 	= СтрокаТабличнойЧасти.Сумма;
				КонецЕсли;
				НовоеДвижение.Регистратор 	= Ссылка;
			КонецЕсли;
			
			НовоеДвижение 				= Движения.ВзаиморасчетыСКлиентами.Добавить();
			НовоеДвижение.Период 		= Дата;
			НовоеДвижение.Регистратор 	= Ссылка;
			НовоеДвижение.Контрагент 	= Контрагент;
			НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
			Если СтрокаТабличнойЧасти.СуммаСНДС <> 0 Тогда
				НовоеДвижение.Сумма 	= СтрокаТабличнойЧасти.СуммаСНДС;
			Иначе
				НовоеДвижение.Сумма 	= СтрокаТабличнойЧасти.Сумма;
			КонецЕсли;
			НовоеДвижение.Цена			= СтрокаТабличнойЧасти.Цена;
			НовоеДвижение.Количество	= СтрокаТабличнойЧасти.Количество;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаОстатков(Отказ)
	
	ПродукцияКопия = Продукция.ВыгрузитьКолонки();
	Для каждого Строчка Из Продукция Цикл
		Если Строчка.Номенклатура.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
			НоваяСтрока = ПродукцияКопия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строчка); 
		КонецЕсли;
	КонецЦикла;
	
	//ПродукцияКопия = Продукция.Выгрузить();
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(ПродукцияКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК КоличествоДокумент, 
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ВременнаяТаблица КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕстьNull(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Остатки.Номенклатура КАК Номенклатура,
		|			Остатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(
		|					&ДатаПроверки,
		|					Номенклатура В
		|							(ВЫБРАТЬ
		|								ТаблицаДокумента.Номенклатура
		|							ИЗ
		|								ТаблицаДокумента)
		|						И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
		|		ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		Дата);
	Запрос.УстановитьПараметр("ВременнаяТаблица", 	ПродукцияКопия.Скопировать());
	Запрос.УстановитьПараметр("Склад", 				Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить("На складе - " + Склад + " не хватает остатка по товару " + СтрокаТабличнойЧасти.Номенклатура + 
								". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения + 
								", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПроизводственнаяСводка") Тогда
		
		Дата 				= ДанныеЗаполнения.Дата;
		Склад 				= ДанныеЗаполнения.Склад;
		Автор				= ОбщегоНазначения.ТекущийПользователь();
		ДокументОснование 	= ДанныеЗаполнения;
		
		НоваяСтрока 					= Продукция.Добавить();
		НоваяСтрока.Номенклатура 		= Справочники.Номенклатура.Молоко;
		НоваяСтрока.ЕдиницаИзмерения	= Справочники.Номенклатура.Молоко.ЕдиницаИзмерения;
		НоваяСтрока.Количество 			= ОстатокМолока();
		
	КонецЕсли;		
	
КонецПроцедуры

Функция ОстатокМолока()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаПроверки,
		|			Номенклатура = &Номенклатура
		|				И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	КонецДня(Дата));
	Запрос.УстановитьПараметр("Склад", 				Склад);
	Запрос.УстановитьПараметр("Номенклатура", 	Справочники.Номенклатура.Молоко);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КоличествоОстаток;
	
КонецФункции

