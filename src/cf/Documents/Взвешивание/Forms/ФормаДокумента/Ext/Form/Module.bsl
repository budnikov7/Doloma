
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		
		Объект.Ферма = Объект.Автор.ОсновнаяФерма;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	ТекущиеДанные.Животное = ВыбранноеЗначение;
	
	ЖивотныеЖивотноеПриИзменении(Неопределено);
	
КонецПроцедуры  

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаполнениеДанныхИзФайлаВзвешивание" И Источник = ОбщегоНазначения.ТекущийПользователь() Тогда
		ЗаполнитьНаОснованииФайлаНаСервере(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЖивотныеЖивотноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", Объект.Ферма);
	СписокПараметров.Вставить("НеобходимоОповестить", Истина);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(Объект.Ферма, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	ТекущиеДанные.ПрошлыйВес = ДанныеЖивотных.ПолучитьПоследнийВесЖивотного(ТекущиеДанные.Животное, Объект.Дата, Объект.Ссылка);
	
	РасчитатьВесЖивотного();
	
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеВесПриИзменении(Элемент)
	
	РасчитатьВесЖивотного();
	
КонецПроцедуры
	
#КонецОбласти 

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаполнитьФайл(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ферма) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПустоеОповещение", ОбщегоНазначения);
		ПоказатьПредупреждение(ОписаниеОповещения, "Перед заполнением данных на основании файла необходимо выбрать ферму");
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВопросаЗапись", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Документ должен быть записан перед заполнением. Записать?", РежимДиалогаВопрос.ДаНет);
		Возврат;	
	КонецЕсли;
	
	ВзаимодействиеКлиент.ОткрытьФормуЗаполненияОбъектаНаОснованииФайла(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Функция ЗавершениеВопросаЗапись(ОтветПользователя, Параметры) Экспорт
	
	Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат 0;
	КонецЕсли;
	
	Попытка 
		ЭтотОбъект.Записать();
		ВзаимодействиеКлиент.ОткрытьФормуЗаполненияОбъектаНаОснованииФайла(ЭтаФорма, Объект.Ссылка);
	Исключение
		ВызватьИсключение "Ошибка при попытке записи";
	КонецПопытки;
	
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

&НаКлиенте
Функция РасчитатьВесЖивотного()
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	ТекущиеДанные.РазницаВВесе 			= ТекущиеДанные.Вес - ТекущиеДанные.ПрошлыйВес;
	ТекущиеДанные.СреднеСуточныйПривес 	= ТекущиеДанные.РазницаВВесе / ДанныеЖивотных.КоличествоДнейПоследнегоВзвешивания(ТекущиеДанные.Животное, Объект.Дата, Объект.Ссылка);
	
КонецФункции 

&НаСервере
Функция ЗаполнитьНаОснованииФайлаНаСервере(Параметр)

	МассивЖивотных = Параметр.Выгрузить(,"Животное").ВыгрузитьКолонку("Животное"); 
	ТаблицаДанных = ПолучитьПрошлыйВесИМестонахождение(МассивЖивотных);
	
	Для каждого СтрокаТабличнойЧасти Из Параметр Цикл  
		
		СтрОтбора = Новый Структура("Животное", СтрокаТабличнойЧасти.Животное);
		ДанныеЖивотного = ТаблицаДанных.НайтиСтроки(СтрОтбора)[0];
		
		Если ДанныеЖивотного.Ферма <> Объект.Ферма Тогда
			Сообщить("Животное - " + СтрокаТабличнойЧасти.Животное + " находится на другой ферме. Текущая ферма - " + ДанныеЖивотного.Ферма);
		КонецЕсли;
		НоваяСтрока = Объект.Животные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);   
		НоваяСтрока.ПрошлыйВес = ДанныеЖивотного.ПрошлыйВес;
		НоваяСтрока.РазницаВВесе = СтрокаТабличнойЧасти.Вес - ДанныеЖивотного.ПрошлыйВес;
		НоваяСтрока.СреднеСуточныйПривес = НоваяСтрока.РазницаВВесе / ?(ДанныеЖивотного.КоличествоДней = 0,1,ДанныеЖивотного.КоличествоДней);
		
	КонецЦикла;
		
КонецФункции   

&НаСервере
Функция ПолучитьПрошлыйВесИМестонахождение(МассивЖивотных)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Животные.Ссылка КАК Животное
		|ПОМЕСТИТЬ вт_Животные
		|ИЗ
		|	Справочник.Животные КАК Животные
		|ГДЕ
		|	Животные.Ссылка В(&МассивЖивотных)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВзвешиванияСрезПоследних.Вес, 0) КАК ПрошлыйВес,
		|	вт_Животные.Животное КАК Животное,
		|	РазмещениеЖивотныхСрезПоследних.Ферма КАК Ферма,
		|	ВЫБОР
		|		КОГДА ВзвешиванияСрезПоследних.Период ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ РАЗНОСТЬДАТ(ВзвешиванияСрезПоследних.Период, &ДатаПроверки, ДЕНЬ)
		|	КОНЕЦ КАК КоличествоДней
		|ИЗ
		|	вт_Животные КАК вт_Животные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Взвешивания.СрезПоследних(
		|				&ДатаПроверки,
		|				Регистратор <> &ТекущийДокумент
		|					И Животное В (&МассивЖивотных)) КАК ВзвешиванияСрезПоследних
		|		ПО вт_Животные.Животное = ВзвешиванияСрезПоследних.Животное
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЖивотных.СрезПоследних(&ДатаПроверки, Животное В (&МассивЖивотных)) КАК РазмещениеЖивотныхСрезПоследних
		|		ПО вт_Животные.Животное = РазмещениеЖивотныхСрезПоследних.Животное
		|ГДЕ
		|	ВзвешиванияСрезПоследних.Регистратор <> &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		Объект.Дата);
	Запрос.УстановитьПараметр("МассивЖивотных", 	МассивЖивотных);
	Запрос.УстановитьПараметр("ТекущийДокумент", 	Объект.Ссылка); 
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;

КонецФункции // ПолучитьПрошлыйВесИМестонахождение()


	
#КонецОбласти























