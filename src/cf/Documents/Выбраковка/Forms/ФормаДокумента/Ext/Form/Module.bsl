
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущиеДанные = Элементы.Животные.ТекущиеДанные;
	
	ТекущиеДанные.Животное = ВыбранноеЗначение;
		
КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Ссылка", ДанныеЖивотных.ПолучитьСписокЖивотныхПоФермеДокумента(Объект.Ферма, Объект.Дата));
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить(ПараметрВыбора);
	ФиксированныеПараметры = Новый ФиксированныйМассив(СписокПараметров);
	
	Элемент.ПараметрыВыбора = ФиксированныеПараметры;

КонецПроцедуры

&НаКлиенте
Процедура ЖивотныеЖивотноеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокПараметров = Новый Структура;
	СписокПараметров.Вставить("Ферма", Объект.Ферма);
	СписокПараметров.Вставить("НеобходимоОповестить", Истина);
	
	ВзаимодействиеКлиент.ОткрытьФормуВыбораЖивотного(ЭтаФорма, СписокПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.Ферма = ПараметрыСеанса.ТекущийПользователь.ОсновнаяФерма;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ТолькоПросмотр = ОграничениеДоступности.ОграничитьДанныеДокумента(Объект.Дата);
	
КонецПроцедуры



//Процедура ВзвешиванияЖивотноеНачалоВыбора(Элемент, СтандартнаяОбработка)
//	
//	Если ЗначениеЗаполнено(Корпус) Тогда
//		
//		СтандартнаяОбработка = Ложь;
		//Справочники.Животные.ОткрытьВыборЖивотногоОтборПоКорпусу(Дата, Корпус, ЭтаФорма.ЭлементыФормы.Животные);
//			
//	КонецЕсли;

//КонецПроцедуры

//Процедура ВзвешиванияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	Если ВыбранноеЗначение.Метаданные().Имя = "Животные" Тогда
//		
//		дубли = Животные.НайтиСтроки(Новый Структура("Животное", ВыбранноеЗначение));
//		Если дубли.Количество() > 0 Тогда
//			Сообщить("Выбранное Животное уже указано в табличной части!", СтатусСообщения.Внимание);
//			Элемент.ТекущаяСтрока.Животное = Справочники.Животные.ПустаяСсылка()
//		Иначе
//			Элемент.ТекущаяСтрока.Животное = ВыбранноеЗначение;
//		КонецЕсли;
//		
//	КонецЕсли;

//КонецПроцедуры

//Процедура ФермаПриИзменении(Элемент)
//	
//	Корпус = Неопределено;
//	
//	//Если ЗначениеЗаполнено(Ферма) Тогда
//	//	КорпусСухостоя = ?(ЗначениеЗаполнено(Ферма.КорпусДляСухостоя),Ферма.КорпусДляСухостоя,Неопределено);
//	//КонецЕсли;
//	
//КонецПроцедуры

//Процедура ВзвешиванияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
//	
//	Если ЗначениеЗаполнено(Элемент.ТекущаяСтрока) Тогда
//		дубли = Животные.НайтиСтроки(Новый Структура("Животное", Элемент.ТекущаяСтрока.Животное));
//		Если дубли.Количество() > 1 Тогда
//			Сообщить("Выбранное Животное уже указано в табличной части!", СтатусСообщения.Внимание);
//			Элемент.ТекущаяСтрока.Животное = Справочники.Животные.ПустаяСсылка()
//		КонецЕсли;
//		
//		Если НЕ Справочники.Животные.ЖивотноеВКорпусе(Элемент.ТекущаяСтрока.Животное, Корпус, Дата) Тогда
//			Сообщить("Выбранное Животное не расположено в этом Корпусе!", СтатусСообщения.Внимание);
//			Элемент.ТекущаяСтрока.Животное = Справочники.Животные.ПустаяСсылка()
//		КонецЕсли;
//		
//		Если ЗначениеЗаполнено(Элемент.ТекущаяСтрока.Животное) Тогда
//			Если Справочники.Животные.ПолучитьДатуВыбытияВБрак(Элемент.ТекущаяСтрока.Животное, Дата-1) > Дата(1,1,1) Тогда 
//				Сообщить("Выбранное Животное выбыло (проведен документ ""Выбытие"")!", СтатусСообщения.Внимание);
//				Элемент.ТекущаяСтрока.Животное = Справочники.Животные.ПустаяСсылка()
//			КонецЕсли;
//		КонецЕсли;
//		
//	КонецЕсли;
//	
//КонецПроцедуры

//Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Если НЕ ЗначениеЗаполнено(КорпусСухостоя) Тогда
	//	Если ЗначениеЗаполнено(Ферма) Тогда
	//		КорпусСухостоя = ?(ЗначениеЗаполнено(Ферма.КорпусДляСухостоя),Ферма.КорпусДляСухостоя,Неопределено);
	//	Иначе	
	//		Сообщить("У выбранной фермы """+СокрЛП(Ферма)+""" не указан корпус для сухостойного периода! Запись документа невозможна!", СтатусСообщения.Внимание);
	//		Отказ = Истина;
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
//КонецПроцедуры












































