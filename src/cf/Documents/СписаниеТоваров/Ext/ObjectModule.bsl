
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
    Движения.ТоварыНаСкладах.Очистить();
    Движения.ТоварыНаСкладах.Записывать = Истина;
    Движения.Записать();
    
    ВыборкаТовары = РасчетСебестоимостиСервер.ПолучитьОстатки("СписаниеТоваров", "Товары", "Номенклатура",Ссылка, Склад);
    
    Пока ВыборкаТовары.Следующий() Цикл
       
        Дефицит = ВыборкаТовары.Количество - ВыборкаТовары.КоличествоОстатокВЕдиницахДокумента;
        Если Дефицит > 0 Тогда
            Отказ = Истина;
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = СтрШаблон("Номенклатуры %1 недостаточно в количестве %2 %3",ВыборкаТовары.НоменклатураПредставление,Дефицит,ВыборкаТовары.ЕдиницаИзмерения);
            Сообщение.Сообщить();
        КонецЕсли;
       
        Если Отказ Тогда
            Продолжить;
        КонецЕсли;
       
        Движение 				= Движения.ТоварыНаСкладах.ДобавитьРасход();
        Движение.Период 		= Дата;
        Движение.Склад 			= ВыборкаТовары.Склад;
        Движение.Номенклатура 	= ВыборкаТовары.Номенклатура;
        
        Движение.Количество 	= ВыборкаТовары.Количество * ВыборкаТовары.Кофффициент;
        Если ВыборкаТовары.Количество = ВыборкаТовары.КоличествоОстатокВЕдиницахДокумента Тогда
	        Движение.Сумма		 = ВыборкаТовары.СуммаОстаток;
		Иначе
	        Движение.Сумма		 = ВыборкаТовары.Количество * ВыборкаТовары.Кофффициент * ВыборкаТовары.Цена;
		КонецЕсли;
        
    КонецЦикла;
   
    Движения.ТоварыНаСкладах.Записывать = Истина;	
    
	//ПроверкаОстатков(Отказ);
	//
	//Если Не Отказ Тогда
	//	
	//	Для каждого СтрокаТабличнойЧасти Из Товары Цикл
	//		
	//		НовоеДвижение 				= Движения.ТоварыНаСкладах.Добавить();
	//		НовоеДвижение.Период 		= Дата;
	//		НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	//		НовоеДвижение.Склад 		= Склад;
	//		НовоеДвижение.Номенклатура 	= СтрокаТабличнойЧасти.Номенклатура;
	//		НовоеДвижение.Количество 	= Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.Количество);
	//		НовоеДвижение.Сумма 		= СтрокаТабличнойЧасти.Сумма;
	//		
	//	КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры  

Процедура ПроверкаОстатков(Отказ)
	
	ТоварыКопия = Товары.Выгрузить();
	Справочники.Номенклатура.РассчитатьКоличествоВОсновнойЕдиницеИзмеренияВТабличнойЧасти(ТоварыКопия);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.Количество КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ВременнаяТаблица КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаДокумента.КоличествоДокумент КАК КоличествоДокумент,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ОстаткиВТ.КоличествоОстаток, 0) КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Остатки.Номенклатура КАК Номенклатура,
		|			Остатки.КоличествоОстаток КАК КоличествоОстаток
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(
		|					&ДатаПроверки,
		|					Номенклатура В
		|							(ВЫБРАТЬ
		|								ТаблицаДокумента.Номенклатура
		|							ИЗ
		|								ТаблицаДокумента)
		|						И Склад = &Склад) КАК Остатки) КАК ОстаткиВТ
		|		ПО ТаблицаДокумента.Номенклатура = ОстаткиВТ.Номенклатура";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		Новый МоментВремени(Дата, Ссылка));
	Запрос.УстановитьПараметр("ВременнаяТаблица", 	ТоварыКопия);
	Запрос.УстановитьПараметр("Склад", 				Склад);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТабличнойЧасти Из РезультатЗапроса Цикл
		
		Если СтрокаТабличнойЧасти.КоличествоДокумент > СтрокаТабличнойЧасти.КоличествоОстаток Тогда
			
			Отказ = Истина;
			Сообщить("На складе - " + Склад + " не хватает остатка по товару " + СтрокаТабличнойЧасти.Номенклатура + 
								". На складе - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоОстаток) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения + 
								", требуется списать - " + Справочники.Номенклатура.РассчитатьКоличествоИзОсновнойЕдиницыИзмерения(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ЕдиницаИзмерения, СтрокаТабличнойЧасти.КоличествоДокумент) + " " + СтрокаТабличнойЧасти.ЕдиницаИзмерения);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПроизводственнаяСводка") Тогда
		
		Дата 									= ДанныеЗаполнения.Дата;
		Склад 								= ДанныеЗаполнения.Склад;
		Автор									= ОбщегоНазначения.ТекущийПользователь();
		ДокументОснование 	= ДанныеЗаполнения;
		
		НоваяСтрока 											= Товары.Добавить();
		НоваяСтрока.Номенклатура 				= Справочники.Номенклатура.Молоко;
		НоваяСтрока.ЕдиницаИзмерения	= Справочники.Номенклатура.Молоко.ЕдиницаИзмерения;
		НоваяСтрока.Количество 					= ОстатокМолока();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОстатокМолока()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаПроверки,
		|			Номенклатура = &Номенклатура
		|				И Склад = &Склад) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	КонецДня(Дата));
	Запрос.УстановитьПараметр("Склад", 				Склад);
	Запрос.УстановитьПараметр("Номенклатура", 	Справочники.Номенклатура.Молоко);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КоличествоОстаток;
	
КонецФункции

