
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПоказателиРационов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНормативовЕдиницаИзмеренияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;   
	ТекущиеДанные = Элементы.ТаблицаНормативов.ТекущиеДанные;   
	ДанныеВыбора = Новый СписокЗначений;
	МассивЕдиниц = МассивЕдиницПоказателя(ТекущиеДанные.ПоказательРациона); 
	Для каждого Единица Из МассивЕдиниц Цикл
		ДанныеВыбора.Добавить(Единица);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивЕдиницПоказателя(Показатель)

	МассивЕдиниц = Новый Массив; 
	МассивЕдиниц.Добавить(ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.Процент")); 
	Если ЗначениеЗаполнено(Показатель.ЕдиницаИзмерения) Тогда
		МассивЕдиниц.Добавить(Показатель.ЕдиницаИзмерения);
	КонецЕсли;
	Возврат МассивЕдиниц;	

КонецФункции

&НаСервере
Процедура ЗаполнитьПоказателиРационов()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГруппыЖивотных.Ссылка КАК ГруппаЖивотных,
	|	ГруппыЖивотных.Наименование КАК НаименованиеГруппыЖивотных,
	|	ГруппыЖивотных.Код КАК ПорядокГруппыЖивотных
	|ИЗ
	|	Справочник.ГруппыЖивотных КАК ГруппыЖивотных
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокГруппыЖивотных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиРационов.Ссылка КАК ПоказательРациона,
	|	ПоказателиРационов.Код КАК ПорядокПоказатели,
	|	ПоказателиРационов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоказателиРационов.ПереводитьВПроценты КАК ПереводитьВПроценты
	|ИЗ
	|	Справочник.ПоказателиРационов КАК ПоказателиРационов
	|ГДЕ
	|	ПоказателиРационов.ПометкаУдаления = ЛОЖЬ
	|	И ПоказателиРационов.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокПоказатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормативныеПоказателиРационов.Минимум КАК Минимум,
	|	НормативныеПоказателиРационов.Максимум КАК Максимум,
	|	НормативныеПоказателиРационов.ГруппаЖивотных КАК ГруппаЖивотных,
	|	НормативныеПоказателиРационов.ПоказательРациона КАК ПоказательРациона,
	|	НормативныеПоказателиРационов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НормативныеПоказателиРационов.ПоказыватьВРационе КАК ПоказыватьВРационе
	|ИЗ
	|	РегистрСведений.НормативныеПоказателиРационов КАК НормативныеПоказателиРационов"; 
	
	МассивРезультатов 	= Запрос.ВыполнитьПакет();
	ВыборкаГрупп		= МассивРезультатов[0].Выбрать();
	ВыборкаПоказателей	= МассивРезультатов[1].Выбрать(); 
	ВыборкаНормативов	= МассивРезультатов[2].Выбрать();
	
	ДобавитьКолонки(ВыборкаГрупп);
	ДобавитьСтрокиПоказателей(ВыборкаПоказателей);
	ЗаполнитьПоказателиИзРегистра(ВыборкаНормативов);

КонецПроцедуры 

&НаСервере
Процедура ДобавитьКолонки(ВыборкаГрупп)
	
	Пока ВыборкаГрупп.Следующий() Цикл  
		
		НаименованиеГруппы = СтрЗаменить(ВыборкаГрупп.ГруппаЖивотных," ","");
		НаименованиеГруппы = СтрЗаменить(НаименованиеГруппы,"-","");
		НаименованиеГруппы = СтрЗаменить(НаименованиеГруппы,".","");
		СписокГруппЖивотных.Добавить(ВыборкаГрупп.ГруппаЖивотных,НаименованиеГруппы);
		
		Если Элементы.Найти(НаименованиеГруппы) = Неопределено Тогда
		
			Группа = Элементы.Добавить(НаименованиеГруппы,Тип("ГруппаФормы"),Элементы.ТаблицаНормативов);
			Группа.Заголовок 						= Строка(ВыборкаГрупп.ГруппаЖивотных);
			Группа.Вид 								= ВидГруппыФормы.ГруппаКолонок; 
			Группа.Группировка 						= ГруппировкаКолонок.Горизонтальная; 
			Группа.ОтображатьВШапке 				= Истина; 
			Группа.ЦветФонаЗаголовка 				= ЦветаСтиля.ЦветНавигации; 
			Группа.ГоризонтальноеПоложениеВШапке 	= ГоризонтальноеПоложениеЭлемента.Центр;
			                                            
			МассивДобавляемыхРеквизитов = Новый Массив; 
			ИмяМинимум 		= НаименованиеГруппы + "_Минимум";
			ИмяМаксимум 	= НаименованиеГруппы + "_Максимум";
			ИмяПоказывать 	= НаименованиеГруппы + "_ПоказыватьВРационе";
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяМинимум, Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,2)),"ТаблицаНормативов","Мин."));
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяМаксимум, Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,2)),"ТаблицаНормативов","Макс.")); 
			МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяПоказывать, Новый ОписаниеТипов("Булево"),"ТаблицаНормативов","Показывать")); 
			ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);    
			
			ДобавитьКолонку(ИмяМинимум, "Мин.", "ТаблицаНормативов." + ИмяМинимум, Группа);
			ДобавитьКолонку(ИмяМаксимум, "Макс.", "ТаблицаНормативов." + ИмяМаксимум, Группа);
			ДобавитьКолонку(ИмяПоказывать, "Показывать", "ТаблицаНормативов." + ИмяПоказывать, Группа);
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонку(Имя, Заголовок, ПутьКДанным, Группа)

	НоваяКолонка = Элементы.Добавить(Имя, Тип("ПолеФормы"), Группа);
	НоваяКолонка.Заголовок 						= Заголовок;
	НоваяКолонка.ПутьКДанным 					= "ТаблицаНормативов." + Имя;
	НоваяКолонка.Вид 							= ВидПоляФормы.ПолеВвода;  
	НоваяКолонка.Ширина 						= 7;
	НоваяКолонка.РежимРедактирования 			= РежимРедактированияКолонки.ВходПриВводе; 
	НоваяКолонка.ЦветФонаЗаголовка 				= ЦветаСтиля.ЦветНавигации;
	НоваяКолонка.ГоризонтальноеПоложениеВШапке 	= ГоризонтальноеПоложениеЭлемента.Центр;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокиПоказателей(ВыборкаПоказателей)
	
	ТаблицаНормативов.Очистить();
	Пока ВыборкаПоказателей.Следующий() Цикл   
		
		СтрокаПоказателя = ТаблицаНормативов.Добавить();
		СтрокаПоказателя.ПоказательРациона 	= ВыборкаПоказателей.ПоказательРациона;
		СтрокаПоказателя.ЕдиницаИзмерения 	= ВыборкаПоказателей.ЕдиницаИзмерения;
		 
	КонецЦикла; 
	
	ВыборкаПоказателей.Сбросить();
	
	ЕдиницаПроцент = Справочники.ЕдиницыИзмерения.Процент; 
	Пока ВыборкаПоказателей.Следующий() Цикл 
		
		Если НЕ ВыборкаПоказателей.ПереводитьВПроценты Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПоказателя = ТаблицаНормативов.Добавить();
		СтрокаПоказателя.ПоказательРациона 	= ВыборкаПоказателей.ПоказательРациона;
		СтрокаПоказателя.ЕдиницаИзмерения	= ЕдиницаПроцент; 
	КонецЦикла; 

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьПоказателиИзРегистра(ВыборкаНормативов)

	Пока ВыборкаНормативов.Следующий() Цикл
		
		ИмяКолонкиГруппы = СтрЗаменить(ВыборкаНормативов.ГруппаЖивотных," ","");
		ИмяКолонкиГруппы = СтрЗаменить(ИмяКолонкиГруппы,"-","");
		ИмяКолонкиГруппы = СтрЗаменить(ИмяКолонкиГруппы,".","");
		
		СтрОтбора = Новый Структура("ПоказательРациона,ЕдиницаИзмерения",ВыборкаНормативов.ПоказательРациона,ВыборкаНормативов.ЕдиницаИзмерения);
		НайденныеСтроки = ТаблицаНормативов.НайтиСтроки(СтрОтбора);	 
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока[ИмяКолонкиГруппы + "_Минимум"] = ВыборкаНормативов.Минимум;
			НайденнаяСтрока[ИмяКолонкиГруппы + "_Максимум"] = ВыборкаНормативов.Максимум;
			НайденнаяСтрока[ИмяКолонкиГруппы + "_ПоказыватьВРационе"] = ВыборкаНормативов.ПоказыватьВРационе;
		КонецЦикла;
	
	КонецЦикла;	

КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры 

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда) 
	
	 ЗаписатьНаСервере();
	 Закрыть(); 
	 
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	НачатьТранзакцию();
	НаборЗаписей = РегистрыСведений.НормативныеПоказателиРационов.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
	ЕдиницаПроцент = Справочники.ЕдиницыИзмерения.Процент; 
	
	Для каждого СтрокаПоказателя Из ТаблицаНормативов Цикл  
		
		Для каждого ГруппаЖивотных Из СписокГруппЖивотных Цикл 
			
			НаборЗаписей = РегистрыСведений.НормативныеПоказателиРационов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПоказательРациона.Установить(СтрокаПоказателя.ПоказательРациона);
			НаборЗаписей.Отбор.ГруппаЖивотных.Установить(ГруппаЖивотных.Значение);
			НаборЗаписей.Отбор.ЕдиницаИзмерения.Установить(СтрокаПоказателя.ЕдиницаИзмерения);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				ЗаписьНабора = НаборЗаписей.Добавить();
				ЗаписьНабора.ГруппаЖивотных 	= ГруппаЖивотных.Значение;
				ЗаписьНабора.ПоказательРациона 	= СтрокаПоказателя.ПоказательРациона;
				ЗаписьНабора.ЕдиницаИзмерения	= СтрокаПоказателя.ЕдиницаИзмерения;
			Иначе
				ЗаписьНабора = НаборЗаписей[0];
			КонецЕсли;
			
			ИмяМинимум = ГруппаЖивотных.Представление + "_Минимум";
			ИмяМаксимум = ГруппаЖивотных.Представление + "_Максимум";
			ИмяПоказывать = ГруппаЖивотных.Представление + "_ПоказыватьВРационе"; 
			
			Если ЗаписьНабора.Минимум <> СтрокаПоказателя[ИмяМинимум] ИЛИ ЗаписьНабора.Максимум <> СтрокаПоказателя[ИмяМаксимум] 
					ИЛИ ЗаписьНабора.ЕдиницаИзмерения <> СтрокаПоказателя.ЕдиницаИзмерения ИЛИ ЗаписьНабора.ПоказыватьВРационе <> СтрокаПоказателя[ИмяПоказывать] Тогда  
				ЗаписьНабора.ЕдиницаИзмерения	= СтрокаПоказателя.ЕдиницаИзмерения;
				ЗаписьНабора.Минимум            = СтрокаПоказателя[ИмяМинимум];
				ЗаписьНабора.Максимум           = СтрокаПоказателя[ИмяМаксимум];
				ЗаписьНабора.ПоказыватьВРационе = СтрокаПоказателя[ИмяПоказывать];
				НаборЗаписей.Записать();
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда) 
	
	ЗаполнитьПоказателиРационов();
	
КонецПроцедуры


















