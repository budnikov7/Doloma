&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДанные();

	ОбработатьДеревоНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанные();
	
	ОбработатьДеревоНаКлиенте();
	
КонецПроцедуры

Процедура ОбновитьДанные()
	
	//РАСКРАСИМ ОСНОВНОЙ ОБЪЕКТ
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветНавигации);

	ЭлементУсловия                = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокОбъектов.ОсновнойОбъект");
	ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Истина;
	ЭлементУсловия.Использование  = Истина;

	ОформляемоеПоле      = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СписокОбъектовОбъект");
   	
    //УДАЛИМ СТАРЫЕ ДАННЫЕ
	СписокОбъектов.ПолучитьЭлементы().Очистить();
	
	РодительОсновногоДокумента = "";
	//ПОЛУЧИМ ДОКУМЕНТ НА ОСНОВАНИИ КОТОРОГО СОЗДАН ТЕКУЩИЙ 
	Если НЕ Объект.ОсновнойОбъект.Метаданные().Реквизиты.Найти("ДокументОснование") = Неопределено Тогда
			
		ДокументОснования = Объект.ОсновнойОбъект.ДокументОснование;
		
		Если ЗначениеЗаполнено(ДокументОснования) Тогда
			
			Если ДокументОснования.ПометкаУдаления Тогда
				КартинкаДокументаОснования = БиблиотекаКартинок.Удалить;
			ИначеЕсли ДокументОснования.Проведен Тогда
				КартинкаДокументаОснования = БиблиотекаКартинок.СинтаксическийКонтроль;
			Иначе	
				КартинкаДокументаОснования = БиблиотекаКартинок.Записать;
			КонецЕсли;	
			
			РодительОсновногоДокумента 			= СписокОбъектов.ПолучитьЭлементы().Добавить();
			РодительОсновногоДокумента.Объект 	= ДокументОснования;
			РодительОсновногоДокумента.Картинка = КартинкаДокументаОснования;

		КонецЕсли;
	КонецЕсли;
	
	//ДОБАВИМ ТЕКУЩИЙ ДОКУМЕНТ
	Если Объект.ОсновнойОбъект.Ссылка.ПометкаУдаления Тогда
		КартинкаОсновногоОбъекта = БиблиотекаКартинок.Удалить;
	ИначеЕсли Объект.ОсновнойОбъект.Ссылка.Проведен Тогда
		КартинкаОсновногоОбъекта = БиблиотекаКартинок.СинтаксическийКонтроль;
	Иначе	
		КартинкаОсновногоОбъекта = БиблиотекаКартинок.Записать;
	КонецЕсли;
	
	Если РодительОсновногоДокумента = "" Тогда
		ОсновнойДокумент = СписокОбъектов.ПолучитьЭлементы().Добавить();
	Иначе
		ОсновнойДокумент = РодительОсновногоДокумента.ПолучитьЭлементы().Добавить();		
	КонецЕсли;
	ОсновнойДокумент.Объект 		= Объект.ОсновнойОбъект.Ссылка;
	ОсновнойДокумент.Картинка 		= КартинкаОсновногоОбъекта;
	ОсновнойДокумент.ОсновнойОбъект = Истина;
	
	//ПОЛУЧИМ ДОКУМЕНТЫ СОЗДАННЫЕ НА ОСНОВАНИИ ТЕКУЩЕГО
	ИтоговыйТекстЗапроса = "";
	
	Для каждого ОбъектМетаданных Из Метаданные.Документы Цикл
		
		Если ОбъектМетаданных.Реквизиты.Найти("ДокументОснование") = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ИтоговыйТекстЗапроса) Тогда
			ИтоговыйТекстЗапроса = ИтоговыйТекстЗапроса + " ОБЪЕДИНИТЬ ВСЕ ";
		КонецЕсли;
		
		ИтоговыйТекстЗапроса = ИтоговыйТекстЗапроса + "
		|ВЫБРАТЬ
		|	Ссылка
		|ИЗ
		|	" + ОбъектМетаданных.ПолноеИмя() + "
		|ГДЕ
		|	ДокументОснование = &ДокументОснования";
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ИтоговыйТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументОснования", Объект.ОсновнойОбъект);
	
	Результат = Запрос.Выполнить();
	ВыборкаРезультата = Результат.Выбрать();
	
	Пока ВыборкаРезультата.Следующий() Цикл
		
		ПодчиненныеСтроки = ОсновнойДокумент.ПолучитьЭлементы().Добавить();
		ПодчиненныеСтроки.Объект = ВыборкаРезультата.Ссылка;
		
		Если ВыборкаРезультата.Ссылка.ПометкаУдаления Тогда
			КартинкаВложенногоОбъекта = БиблиотекаКартинок.ПометитьНаУдаление;
		ИначеЕсли ВыборкаРезультата.Ссылка.Проведен Тогда
			КартинкаВложенногоОбъекта = БиблиотекаКартинок.СинтаксическийКонтроль;
		Иначе	
			КартинкаВложенногоОбъекта = БиблиотекаКартинок.Записать;
		КонецЕсли;
		
		ПодчиненныеСтроки.Картинка = КартинкаВложенногоОбъекта;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ИдентификаторТекущаяСтрокаДерева 	= Элементы.СписокОбъектов.ТекущаяСтрока;
	ТекущаяСтрокаДерева 				= СписокОбъектов.НайтиПоИдентификатору(ИдентификаторТекущаяСтрокаДерева);
	
	ОткрытьЗначение(ТекущаяСтрокаДерева.Объект);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбъект(Команда)
	
	ИдентификаторТекущаяСтрокаДерева 	= Элементы.СписокОбъектов.ТекущаяСтрока;
	Если ИдентификаторТекущаяСтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаДерева 				= СписокОбъектов.НайтиПоИдентификатору(ИдентификаторТекущаяСтрокаДерева);
	ОткрытьЗначение(ТекущаяСтрокаДерева.Объект);	

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Команда)
	
	ИдентификаторТекущаяСтрокаДерева 	= Элементы.СписокОбъектов.ТекущаяСтрока;
	Если ИдентификаторТекущаяСтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаДерева 				= СписокОбъектов.НайтиПоИдентификатору(ИдентификаторТекущаяСтрокаДерева);
	СсылкаНаДокумент = ТекущаяСтрокаДерева.Объект;
	
	УстановитьПометкуУдаленияНаСервере(СсылкаНаДокумент);
	
	ОбновитьДанные();
	
	ОбработатьДеревоНаКлиенте();
	
КонецПроцедуры

Процедура УстановитьПометкуУдаленияНаСервере(СсылкаНаДокумент)
	
	ДокументОбъект = СсылкаНаДокумент.ПолучитьОбъект();
	
	ДокументОбъект.УстановитьПометкуУдаления(НЕ ДокументОбъект.ПометкаУдаления);
	
	Попытка
		ДокументОбъект.Записать();
	Исключение 
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Функция ОбработатьДеревоНаКлиенте()

	//РАЗВЕНЕМ СПИСОК ДЕРЕВА                                                    
	Для Каждого СтрокаДерева Из СписокОбъектов.ПолучитьЭлементы() Цикл
		
		ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
	    Элементы.СписокОбъектов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;	

КонецФункции




//СЛУЖЕБНЫЕ ФУНКЦИИ
&НаКлиенте
Процедура СписокОбъектовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокОбъектовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры



