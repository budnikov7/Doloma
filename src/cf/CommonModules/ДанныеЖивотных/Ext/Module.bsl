//ДАННЫЕ О СОБЫТИЯХ

Функция ДатаПоследнегоОсеменения(МамаЖивотенка, ДатаПроверки, ВернутьБыка = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(ОсемененияСрезПоследних.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	ОсемененияСрезПоследних.Семя.Бык КАК СемяБык
	|ИЗ
	|	РегистрСведений.Осеменения.СрезПоследних(&ДатаСреза, Животное = &МамаЖивотенка) КАК ОсемененияСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсемененияСрезПоследних.Семя.Бык
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", 	МамаЖивотенка);
	Запрос.УстановитьПараметр("ДатаСреза", 		ДатаПроверки);
	
	Ответ = Запрос.Выполнить().Выгрузить();
	
	Если Ответ.Количество() Тогда
		
		Если ВернутьБыка Тогда
			Возврат Новый Структура("Период, Бык", Ответ.Получить(0).Период, Ответ.Получить(0).СемяБык);
		Иначе
			Возврат Ответ.Получить(0).Период;
		КонецЕсли;
	Иначе
		
		Если ВернутьБыка Тогда
			Возврат Новый Структура("Период, Бык", Дата(1, 1, 1), Справочники.БыкиПлеменные.ПустаяСсылка());
		Иначе
			Возврат Дата(1, 1, 1);
		КонецЕсли;		
		
	КонецЕсли;
	
	
	
КонецФункции


Функция ДатаПоследнегоОтела(МамаЖивотенка, ДатаПроверки, ВернутьСтруктуру=Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтелыСрезПоследних.Период КАК Период,
	|	ОтелыСрезПоследних.МежотёльныйПериод КАК МежотёльныйПериод
	|ПОМЕСТИТЬ втОтелы
	|ИЗ
	|	РегистрСведений.Отелы.СрезПоследних(&ДатаСреза, Мать = &МамаЖивотенка) КАК ОтелыСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АбортыСрезПоследних.Период,
	|	АбортыСрезПоследних.МежотёльныйПериод
	|ИЗ
	|	РегистрСведений.Аборты.СрезПоследних(
	|			&ДатаСреза,
	|			Мать = &МамаЖивотенка
	|				И ОткрытьЛактацию = ИСТИНА) КАК АбортыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОтелы.Период КАК Период,
	|	втОтелы.МежотёльныйПериод КАК МежотёльныйПериод
	|ИЗ
	|	втОтелы КАК втОтелы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", 	МамаЖивотенка);
	Запрос.УстановитьПараметр("ДатаСреза", 		ДатаПроверки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если ВернутьСтруктуру Тогда 
		Если Выборка.Следующий() Тогда    
			Возврат Новый Структура("Период,МежотёльныйПериод", Выборка.Период, Выборка.МежотёльныйПериод);
		Иначе
			Возврат Новый Структура("Период,МежотёльныйПериод", Дата(1, 1, 1),0);
		КонецЕсли;
	Иначе
		Если Выборка.Следующий() Тогда    
			Возврат Выборка.Период;
		Иначе
			Возврат Дата(1, 1, 1);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


Функция ДатаПоследнегоАборта(МамаЖивотенка, ДатаПроверки, ОткрытьЛактацию = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕстьNull(МАКСИМУМ(АбортыСрезПоследних.Период), ДАТАВРЕМЯ(0001, 01, 01)) КАК Период
	|ИЗ
	|	РегистрСведений.Аборты.СрезПоследних(&ДатаПроверки, Мать = &МамаЖивотенка) КАК АбортыСрезПоследних
	|ГДЕ
	|	" + ?(ОткрытьЛактацию = Неопределено, "Истина", "АбортыСрезПоследних.ОткрытьЛактацию = &ОткрытьЛактацию");
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		ДатаПроверки);
	Запрос.УстановитьПараметр("МамаЖивотенка", 		МамаЖивотенка);
	Запрос.УстановитьПараметр("ОткрытьЛактацию", 	ОткрытьЛактацию);
	
	Ответ = Запрос.Выполнить().Выгрузить();

	Возврат Ответ.Получить(0).Период;
	
КонецФункции


Функция ДатаПоследнегоУЗИ(МамаЖивотенка, ДатаПроверки) Экспорт
	
	ДатаПослегоУЗИ = Дата(1, 1, 1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УЗИисследованияСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.УЗИисследования.СрезПоследних(&ДатаПроверки, Мать = &МамаЖивотенка) КАК УЗИисследованияСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		ДатаПроверки);
	Запрос.УстановитьПараметр("МамаЖивотенка",	МамаЖивотенка);
	
	Ответ = Запрос.Выполнить();
	
	Если Не Ответ.Пустой() Тогда
		Выборка = Ответ.Выбрать();
		Выборка.Следующий();
		
		ДатаПослегоУЗИ = Выборка.Период;
		
	КонецЕсли;
	
	Возврат ДатаПослегоУЗИ;
	
КонецФункции


Функция ДанныеПоследнегоУЗИ(МамаЖивотенка, ДатаПроверки) Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	ПустаяДата = Дата(1, 1, 1);
	
	СтруктураРеквизитов.Вставить("ДатаПредполагаемогоОтёла", 			ПустаяДата);
	СтруктураРеквизитов.Вставить("ДатаЗапуска", 											ПустаяДата);
	СтруктураРеквизитов.Вставить("ДатаПереводаВоВторойСухостой", 	ПустаяДата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УЗИисследованияСрезПоследних.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ДокументУЗИ
		|ИЗ
		|	РегистрСведений.УЗИисследования.СрезПоследних(&ДатаПроверки, Мать = &МамаЖивотенка) КАК УЗИисследованияСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатаПредполагаемогоОтёлаСрезПоследних.ДатаПредполагаемогоОтёла КАК ДатаПредполагаемогоОтёла,
		|	ДатаПредполагамогоЗапускаСрезПоследних.ДатаПереводаВоВторойСухостой КАК ДатаПереводаВоВторойСухостой,
		|	ДатаПредполагамогоЗапускаСрезПоследних.ДатаЗапуска КАК ДатаЗапуска
		|ИЗ
		|	РегистрСведений.ДатаПредполагаемогоОтёла.СрезПоследних(&ДатаПроверки, Животное = &МамаЖивотенка) КАК ДатаПредполагаемогоОтёлаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатаПредполагамогоЗапуска.СрезПоследних(&ДатаПроверки, Животное = &МамаЖивотенка) КАК ДатаПредполагамогоЗапускаСрезПоследних
		|		ПО ДатаПредполагаемогоОтёлаСрезПоследних.Животное = ДатаПредполагамогоЗапускаСрезПоследних.Животное
		|ГДЕ
		|	ДатаПредполагаемогоОтёлаСрезПоследних.Регистратор В
		|			(ВЫБРАТЬ
		|				ДокументУЗИ.Регистратор
		|			ИЗ
		|				ДокументУЗИ)
		|	И ДатаПредполагамогоЗапускаСрезПоследних.Регистратор В
		|			(ВЫБРАТЬ
		|				ДокументУЗИ.Регистратор
		|			ИЗ
		|				ДокументУЗИ)";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	Новый МоментВремени(ДатаПроверки - 1));
	Запрос.УстановитьПараметр("МамаЖивотенка",	МамаЖивотенка);
	
	Ответ = Запрос.Выполнить();
	
	Если Не Ответ.Пустой() Тогда
		Выборка = Ответ.Выбрать();
		Выборка.Следующий();
		
		СтруктураРеквизитов.Вставить("ДатаПредполагаемогоОтёла", 			Выборка.ДатаПредполагаемогоОтёла);
		СтруктураРеквизитов.Вставить("ДатаЗапуска", 											Выборка.ДатаЗапуска);
		СтруктураРеквизитов.Вставить("ДатаПереводаВоВторойСухостой", 	Выборка.ДатаПереводаВоВторойСухостой);
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции


Функция ДатаПоследнегоФактическогоЗапуска(МамаЖивотенка, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапускЖивотныхСрезПоследних.ДатаЗапуска КАК ДатаЗапуска
		|ИЗ
		|	РегистрСведений.ЗапускЖивотных.СрезПоследних(&ДатаПроверки, Животное = &МамаЖивотенка) КАК ЗапускЖивотныхСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("МамаЖивотенка", МамаЖивотенка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если РезультатЗапроса.Количество() Тогда
		
		Возврат РезультатЗапроса.Получить(0).ДатаЗапуска;
	Иначе
		
		Возврат Дата(1, 1, 1);
	КонецЕсли;
	
КонецФункции


Функция ПолучитьДатуПредполагаемогоОтела(Животное, ДатаПроверки = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Максимум(ПЕРИОД),
	|	ДатаПредполагаемогоОтёла КАК ДатаПредполагаемогоОтёла
	|ИЗ
	|	РегистрСведений.ДатаПредполагаемогоОтёла.СрезПоследних(" + ?(ДатаПроверки = Неопределено, "", "&ДатаПроверки") + ", Животное = &Животное)
	|СГРУППИРОВАТЬ ПО 
	|	ДатаПредполагаемогоОтёла";

	Запрос.УстановитьПараметр("Животное", 			Животное);
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);

	Ответ = Запрос.Выполнить();

	Если НЕ Ответ.Пустой() Тогда

		Результат = Ответ.Выгрузить().Получить(0);
		Возврат Результат.ДатаПредполагаемогоОтёла;
		
	КонецЕсли;
	
	Возврат Дата(1, 1, 1);
	
КонецФункции




//ДАННЫЕ ПО ПЕРИОДАМ ЖИВОТНОГО

Функция ДнейСтельности(МамаЖивотенка, ДатаПроверки) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕстьNull(МАКСИМУМ(ОсемененияСрезПоследних.Период), ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	|ИЗ
	|	РегистрСведений.Осеменения.СрезПоследних(&ДатаСреза, Животное = &МамаЖивотенка) КАК ОсемененияСрезПоследних";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", 	МамаЖивотенка);
	Запрос.УстановитьПараметр("ДатаСреза", 		ДатаПроверки);
	
	Ответ = Запрос.Выполнить().Выгрузить();
	
	Если Ответ.Количество() Тогда
		
		//ПОЛУЧИМ ДАТУ ОСЕМЕНЕНИЯ
		ДатаОсеменения = Ответ.Получить(0).Период;
		
		//ПОЛУЧИМ РАЗНОСТЬ ДАТ В ДНЯХ
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(&ДатаНачала, &ДатаОкончания, ДЕНЬ) КАК РазностьДней";
		
		Запрос.УстановитьПараметр("ДатаНачала", 	ДатаОсеменения);
		Запрос.УстановитьПараметр("ДатаОкончания", 	ДатаПроверки);
		
		Ответ = Запрос.Выполнить().Выгрузить();
		
		Если Ответ.Количество() Тогда
			
			КоличествоДнейРазности = Ответ.Получить(0).РазностьДней;
			Возврат КоличествоДнейРазности;
		КонецЕсли;
		
		//ЕСЛИ ВДРУГ НЕ ПОЛУЧИЛОСЬ ПОСЧИТАТЬ РАЗНОСТЬ, СЧИТАЕМ ЧТО РАЗНОСТЬ РАВНА -1
		Возврат -1;
		
	КонецЕсли;
	
	//В РЕГИСТРЕ НЕТ ДАННЫХ О ПЕРИОДЕ ОСЕМЕНЕНИЯ
	Возврат -1;
	
КонецФункции


Функция КоличествоОсемененийПослеОтела(МамаЖивотенка, ДатаПроверки) Экспорт
	
	ПарамДатаПоследнегоОтела 	= ДатаПоследнегоОтела(МамаЖивотенка, ДатаПроверки);
	ПарамДатаПоследнегоАборта 	= ДатаПоследнегоАборта(МамаЖивотенка, ДатаПроверки, Истина);
	ПеремДата					= Макс(ПарамДатаПоследнегоАборта, ПарамДатаПоследнегоОтела);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕстьNull(КОЛИЧЕСТВО(1), 0) КАК Количество
	|ИЗ
	|	РегистрСведений.Осеменения КАК Осеменения
	|ГДЕ
	|	Осеменения.Животное = &МамаЖивотенка
	|	И Осеменения.Период МЕЖДУ &ПериодНачала И &ДатаПроверки";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", 	МамаЖивотенка);
	Запрос.УстановитьПараметр("ПериодНачала", 	ПеремДата);
	Запрос.УстановитьПараметр("ДатаПроверки",	ДатаПроверки);
	
	Ответ = Запрос.Выполнить().Выгрузить();
	
	Возврат Ответ.Получить(0).Количество;
	
КонецФункции


Функция КоличествоОтелов(МамаЖивотенка, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		Отелы.Регистратор КАК Количество
	|	ИЗ
	|		РегистрСведений.Отелы КАК Отелы
	|	ГДЕ
	|		Отелы.Мать = &МамаЖивотенка
	|		И НЕ Отелы.Регистратор ССЫЛКА Документ.ДобавлениеЖивотного
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Отелы.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Отелы.Регистратор
	|	ИЗ
	|		РегистрСведений.Отелы КАК Отелы
	|	ГДЕ
	|		Отелы.Мать = &МамаЖивотенка
	|		И Отелы.Регистратор ССЫЛКА Документ.ДобавлениеЖивотного
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Аборты.Регистратор
	|	ИЗ
	|		РегистрСведений.Аборты КАК Аборты
	|	ГДЕ
	|		Аборты.Мать = &МамаЖивотенка
	|		И Аборты.ОткрытьЛактацию = ИСТИНА) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", МамаЖивотенка);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		Возврат 0;
	КонецЕсли;
	
	Возврат Ответ.Выгрузить().Получить(0).Количество;
	
КонецФункции

Функция КоличествоФуражныхКоров(Ферма, ДатаПроверки) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕстьNull(Сумма(ФуражныхКоровСрезПоследних.ФуражныхКоров), 0) КАК ФуражныхКоров
		|ИЗ
		|	РегистрСведений.ФуражныхКоров.СрезПоследних(&ДатаПроверки, Ферма = &Ферма) КАК ФуражныхКоровСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("Ферма", Ферма);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();

	Возврат ВыборкаДетальныеЗаписи.Получить(0).ФуражныхКоров;	

КонецФункции


//ПОСЛЕДНИЕ ДАННЫЕ ПО ЖИВОТНОМУ
Функция ПоследнийУдой(Животное, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕстьNull(УдойСуточный, 0) КАК Удой
	|ИЗ
	|	РегистрСведений.КонтрольныеНадои.СрезПоследних(&ДатаАкт, Животное = &Животное)";

	Запрос.Параметры.Вставить("Животное", Животное);
	Запрос.Параметры.Вставить("ДатаАкт",  ДатаПроверки);
	
	Ответ = Запрос.Выполнить().Выгрузить();
	
	Возврат ?(Ответ.Количество(), Ответ.Получить(0).Удой, 0);	
		
КонецФункции

Функция НомерЛактацииЖивотного(Животное) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Животное КАК Животное,
		|	СУММА(ВложенныйЗапрос.КоличествоЛактаций) КАК КоличествоЛактаций
		|ИЗ
		|	(ВЫБРАТЬ
		|		Отелы.Мать КАК Животное,
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
		|				КОГДА Отелы.Регистратор ССЫЛКА Документ.ДобавлениеЖивотного
		|					ТОГДА Отелы.УИД
		|				ИНАЧЕ Отелы.Период
		|			КОНЕЦ) КАК КоличествоЛактаций
		|	ИЗ
		|		РегистрСведений.Отелы КАК Отелы
		|	ГДЕ
		|		Отелы.Мать = &Животное
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Отелы.Мать
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Аборты.Мать,
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Аборты.Период)
		|	ИЗ
		|		РегистрСведений.Аборты КАК Аборты
		|	ГДЕ
		|		Аборты.ОткрытьЛактацию = ИСТИНА
		|		И Аборты.Мать = &Животное
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Аборты.Мать) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Животное";
	
	Запрос.УстановитьПараметр("Животное", Животное);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоЛактаций;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция КоличествоДнейПоследнегоВзвешивания(Животное, ДатаПроверки, ТекущийДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзвешиванияСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.Взвешивания.СрезПоследних(
		|			&ДатаПроверки,
		|			Животное = &Животное
		|				И Регистратор <> &ТекущийДокумент) КАК ВзвешиванияСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 			Животное);
	Запрос.УстановитьПараметр("ТекущийДокумент", 	ТекущийДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ДатаРожденияЖивотного = ДатаРожденияЖивотного(Животное);
		
		Возврат ОбщегоНазначения.РазностьДат(ДатаРожденияЖивотного, ДатаПроверки,, Истина);
	Иначе
		
		Ответ = РезультатЗапроса.Выгрузить().Получить(0).Период;
		
		Возврат ОбщегоНазначения.РазностьДат(Ответ, ДатаПроверки,, Истина);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПоследнийВесЖивотного(Животное, ДатаПроверки, ТекущийДокумент = Неопределено) Экспорт
	
	ТекущийДокумент = ?(ТекущийДокумент = Неопределено, Документы.Взвешивание.ПустаяСсылка(), ТекущийДокумент);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзвешиванияСрезПоследних.Вес КАК Вес
		|ИЗ
		|	РегистрСведений.Взвешивания.СрезПоследних(
		|			&ДатаПроверки,
		|			Животное = &Животное
		|				И Регистратор <> &ТекущийДокумент) КАК ВзвешиванияСрезПоследних
		|ГДЕ
		|	ВзвешиванияСрезПоследних.Регистратор <> &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 		ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 			Животное);
	Запрос.УстановитьПараметр("ТекущийДокумент", 	ТекущийДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
		//ПараметрыРождения = ПараметрыПриРождении(Животное);
		//Возврат ПараметрыРождения.Вес;
	Иначе
		
		Ответ = РезультатЗапроса.Выгрузить();
		Возврат Ответ.Получить(0).Вес;
	КонецЕсли;
	
КонецФункции

Функция ПоследнийСреднесуточныйПривес(Животное, ДатаПроверки, ТекущийДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзвешиванияСрезПоследних.СреднеСуточныйПривес КАК СреднеСуточныйПривес
		|ИЗ
		|	РегистрСведений.Взвешивания.СрезПоследних(
		|			&ДатаПроверки,
		|			Животное = &Животное
		|				И Регистратор <> &ТекущийДокумент) КАК ВзвешиванияСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 		Животное);
	Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат 0;
	Иначе
		
		Ответ = РезультатЗапроса.Выгрузить();
		Возврат Ответ.Получить(0).СреднеСуточныйПривес;
	КонецЕсли;
	
КонецФункции

Функция ПоследниеСреднесуточныеКонтрольныеНадои(Животное, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрольныеНадоиСрезПоследних.УдойСуточный КАК УдойСуточный
		|ИЗ
		|	РегистрСведений.КонтрольныеНадои.СрезПоследних(
		|			&ДатаПроверки,
		|			НЕ Регистратор ССЫЛКА Документ.РождениеТеленка
		|				И Животное = &Животное) КАК КонтрольныеНадоиСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", Животное);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.УдойСуточный;
		
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

//ДАННЫЕ ЖИВОТНОГО 
Функция МестонахождениеЖивотного(МамаЖивотенка, ДатаПроверки, ДанныеПоФерме = Ложь, Регистратор=Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеЖивотныхСрезПоследних.Корпус КАК Корпус,
	|	РазмещениеЖивотныхСрезПоследних.Ферма КАК Ферма
	|ИЗ
	|	РегистрСведений.РазмещениеЖивотных.СрезПоследних(
	|			&ДатаПроверки,
	|			Животное = &МамаЖивотенка
	|				И 1 = 1) КАК РазмещениеЖивотныхСрезПоследних";
	
	Запрос.УстановитьПараметр("МамаЖивотенка", 	МамаЖивотенка);
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);
	Если Регистратор <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"1 = 1","Регистратор <> &Регистратор");
		Запрос.УстановитьПараметр("Регистратор",Регистратор);
	КонецЕсли;
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		Возврат ?(ДанныеПоФерме, Справочники.Фермы.ПустаяСсылка(), Справочники.Корпуса.ПустаяСсылка());
	КонецЕсли;
	
	Возврат ?(ДанныеПоФерме, Ответ.Выгрузить().Получить(0).Ферма, Ответ.Выгрузить().Получить(0).Корпус);
	
КонецФункции
                                                                                                                        
Функция МестоРожденияЖивотного(Животное) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФермаРождения КАК Ферма
		|ИЗ
		|	РегистрСведений.ИнформацияОРождении.СрезПоследних(, Животное = &Животное)";
	
	Запрос.УстановитьПараметр("Животное", Животное);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		Возврат Справочники.Фермы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Ответ.Выгрузить().Получить(0).Ферма;
	
КонецФункции

Функция ДатаРожденияЖивотного(Животное) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Период КАК Период
	|ИЗ
	|	РегистрСведений.ИнформацияОРождении.СрезПоследних(, Животное = &Животное)";
	
	Запрос.УстановитьПараметр("Животное", Животное);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		Возврат Дата('00010101');
	КонецЕсли;
	
	Возврат Ответ.Выгрузить().Получить(0).Период;
	
КонецФункции

Функция ПараметрыПриРождении(Животное) Экспорт
	
	ПараметрыРождения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Вес КАК Вес,
	|	Пол КАК Пол
	|ИЗ
	|	РегистрСведений.ИнформацияОРождении.СрезПоследних(, Животное = &Животное) ";
	
	Запрос.УстановитьПараметр("Животное", Животное);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() ТОГДА
		
		ПараметрыРождения.Вставить("Вес", 0);
		ПараметрыРождения.Вставить("Пол", Перечисления.ПолЖивотного.ПустаяСсылка());
		
		Возврат ПараметрыРождения;
		
	КонецЕсли;
	
	СтрокаДанных = Ответ.Выгрузить().Получить(0);
	
	ПараметрыРождения.Вставить("Вес", СтрокаДанных.Вес);
	ПараметрыРождения.Вставить("Пол", СтрокаДанных.Пол);
	
	Возврат ПараметрыРождения;
	
КонецФункции

Функция РодителиЖивотного(Животное) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РодителиЖивотныхСрезПоследних.Мать КАК Мать,
	|	РодителиЖивотныхСрезПоследних.Отец КАК Отец
	|ИЗ
	|	РегистрСведений.РодителиЖивотных.СрезПоследних(, Животное = &Животное) КАК РодителиЖивотныхСрезПоследних";
		
	Запрос.УстановитьПараметр("Животное", Животное);

	Ответ = Запрос.Выполнить();
	
	Если НЕ Ответ.Пустой() Тогда
		
		Результат 	= Ответ.Выгрузить().Получить(0);
		Возврат Новый Структура("Мать, Отец", Результат.Мать, Результат.Отец);
		
	КонецЕсли;

	Возврат Новый Структура("Мать, Отец", "", "");
	
КонецФункции

Функция ПолучитьСписокСемениБыка(Бык) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Семя.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Семя
		|ГДЕ
		|	Семя.Бык = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Бык);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ПолучитьИндексыБыка(Бык, ДатаСреза = Неопределено) Экспорт
	
	ДатаСреза = ?(ДатаСреза = Неопределено, ТекущаяДата(), ДатаСреза);
	ИндексыБыков = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИндексыБыковСрезПоследних.TPI КАК TPI,
		|	ИндексыБыковСрезПоследних.NM КАК NM,
		|	ИндексыБыковСрезПоследних.Молоко КАК Молоко,
		|	ИндексыБыковСрезПоследних.PL КАК PL,
		|	ИндексыБыковСрезПоследних.CCR КАК CCR,
		|	ИндексыБыковСрезПоследних.HCR КАК HCR
		|ИЗ
		|	РегистрСведений.ИндексыБыков.СрезПоследних(&ДатаСреза, Бык = &Бык) КАК ИндексыБыковСрезПоследних";
	
	Запрос.УстановитьПараметр("Бык", 				Бык);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если РезультатЗапроса.Количество() Тогда
		
		СтрокаОтвета = РезультатЗапроса.Получить(0);
		
		ИндексыБыков.Вставить("TPI",		СтрокаОтвета.TPI);
	    ИндексыБыков.Вставить("NM", 		СтрокаОтвета.NM);
		ИндексыБыков.Вставить("Молоко", 	СтрокаОтвета.Молоко);
		ИндексыБыков.Вставить("CCR", 		СтрокаОтвета.CCR);
		ИндексыБыков.Вставить("PL", 		СтрокаОтвета.PL);
		ИндексыБыков.Вставить("HCR", 		СтрокаОтвета.HCR);
		
		Возврат ИндексыБыков;	

	КонецЕсли;
	
	ИндексыБыков.Вставить("TPI",		0);
    ИндексыБыков.Вставить("NM", 		0);
	ИндексыБыков.Вставить("Молоко", 	0);
	ИндексыБыков.Вставить("CCR", 		0);
	ИндексыБыков.Вставить("PL", 		0);
	ИндексыБыков.Вставить("HCR", 		0);
	
	Возврат ИндексыБыков;	

КонецФункции

//СТАТУСЫ ЖИВОТНОГО
Функция АктуальностьЖивотного(Животное, ДатаПроверки = Неопределено) Экспорт
	
	ДатаПроверки = ?(ДатаПроверки = Неопределено, ТекущаяДата(), ДатаПроверки);	
	
	ДанныеОбАктуальности = Новый Структура;
	ДанныеОбАктуальности.Вставить("ПричинаВыбытия", 	"");
	ДанныеОбАктуальности.Вставить("Вес", 				"");;
	ДанныеОбАктуальности.Вставить("Диагноз", 			"");
	ДанныеОбАктуальности.Вставить("СпособВыбытия", 	"");
	ДанныеОбАктуальности.Вставить("Примечание", 		"");
	ДанныеОбАктуальности.Вставить("ДатаВыбытия", 		"");
	ДанныеОбАктуальности.Вставить("Актуально", 		"");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыбытияСрезПоследних.ПричинаВыбытия КАК ПричинаВыбытия,
	|	ВыбытияСрезПоследних.Вес КАК Вес,
	|	ВыбытияСрезПоследних.Диагноз КАК Диагноз,
	|	ВыбытияСрезПоследних.СпособВыбытия КАК СпособВыбытия,
	|	ВыбытияСрезПоследних.Примечание КАК Примечание,
	|	ВыбытияСрезПоследних.Период КАК ДатаВыбытия
	|ИЗ
	|	РегистрСведений.Выбытия.СрезПоследних(&ДатаПроверки, Животное = &Животное) КАК ВыбытияСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 		Животное);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		ДанныеОбАктуальности.Вставить("ПричинаВыбытия", 	Перечисления.ПричиныВыбытия.ПустаяСсылка());
		ДанныеОбАктуальности.Вставить("Вес", 				0);
		ДанныеОбАктуальности.Вставить("Диагноз", 			Справочники.Заболевания.ПустаяСсылка());
		ДанныеОбАктуальности.Вставить("СпособВыбытия", 	Перечисления.СпособыВыбытия.ПустаяСсылка());
		ДанныеОбАктуальности.Вставить("Примечание", 		"");
		ДанныеОбАктуальности.Вставить("ДатаВыбытия", 		Дата('00010101'));
		ДанныеОбАктуальности.Вставить("Актуально", 		Истина);
		
		Возврат ДанныеОбАктуальности;
		
	КонецЕсли;	
	
	ДанныеЗаполнения = Ответ.Выгрузить().Получить(0);
	
	ЗаполнитьЗначенияСвойств(ДанныеОбАктуальности, ДанныеЗаполнения);
	ДанныеОбАктуальности.Вставить("Актуально", 	Ложь);
	
	Возврат ДанныеОбАктуальности;
	
КонецФункции

Функция ЖивотноеСписаноВБарк(Животное, ДатаПроверки = Неопределено) Экспорт
	
	Если ДатаПроверки = Неопределено Тогда
		
		ДатаПроверки = Дата('00010101');
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыбраковкаЖивотныхСрезПоследних.Брак КАК Брак
		|ИЗ
		|	РегистрСведений.ВыбраковкаЖивотных.СрезПоследних(&ДатаПроверки, Животное = &Животное) КАК ВыбраковкаЖивотныхСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки",	ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", 		Животное);
	
	Ответ = Запрос.Выполнить();
	
	Возврат НЕ Ответ.Пустой();
	
КонецФункции

Функция СтатусЖивотного(Животное, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеЖивотныхСрезПоследних.СостояниеЖивотного КАК СостояниеЖивотного
		|ИЗ
		|	РегистрСведений.СостояниеЖивотных.СрезПоследних(&ДатаПроверки, Животное = &Животное) КАК СостояниеЖивотныхСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);
	Запрос.УстановитьПараметр("Животное",		Животное);
	
	Ответ = Запрос.Выполнить();
	
	Если Ответ.Пустой() Тогда
		
		Возврат Перечисления.СтатусЖивотного.ПустаяСсылка();
		
	КонецЕсли;
	
	Возврат Ответ.Выгрузить().Получить(0).СостояниеЖивотного;
	
КонецФункции

Функция ПолучитьПроизводственнуюГруппу(Животное, ДатаПроверки = Неопределено) Экспорт 
	
	Если ДатаПроверки = Неопределено Тогда
		ДатаПроверки = ТекущаяДата();
	КонецЕсли;
	
	ПолЖивотного = ПараметрыПриРождении(Животное).Пол;
	ДатаОтела	 = ДатаПоследнегоОтела(Животное, ДатаПроверки);
	
	Если ПолЖивотного = Перечисления.ПолЖивотного.ПустаяСсылка() Тогда
		Возврат "";
	КонецЕсли;
	
	ПроизводственнаяГруппа 	= ?(ПолЖивотного = Перечисления.ПолЖивотного.Корова,?(ДатаОтела = Дата(1, 1, 1),"Телка","Корова"),"Бычки");
								
	Возврат ПроизводственнаяГруппа;								
								
КонецФункции

Функция ВетСтатусЖивотного(Животное, ДатаПроверки) Экспорт
	
	ВетСтатус = "Здоровая";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПериодыБолезнейЖивотныхСрезПоследних.Заболевание КАК Заболевание,
		|	ПериодыБолезнейЖивотныхСрезПоследних.Животное КАК Животное,
		|	ПериодыБолезнейЖивотныхСрезПоследних.СтатусБолезни КАК СтатусБолезни
		|ИЗ
		|	РегистрСведений.ПериодыБолезнейЖивотных.СрезПоследних(&ДатаПроверки, Животное = &Животное) КАК ПериодыБолезнейЖивотныхСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("Животное", Животное);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не Выборка.СтатусБолезни = Перечисления.ПериодыЗаболеваний.КонецЛечения Тогда
			ВетСтатус = "Больная";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВетСтатус;
	
КонецФункции

//ОБЩИЕ ДАННЫЕ ЖИВОТНЫХ
Функция КоличествоЖивотныхВДойныхКорпусах(Ферма, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазмещениеЖивотныхСрезПоследних.Животное КАК Животное
		|ИЗ
		|	РегистрСведений.РазмещениеЖивотных.СрезПоследних(&ДатаПроверки, ) КАК РазмещениеЖивотныхСрезПоследних
		|ГДЕ
		|	РазмещениеЖивотныхСрезПоследних.Ферма = &Ферма
		|	И РазмещениеЖивотныхСрезПоследних.Корпус.ДойныйКорпус";
	
	Запрос.УстановитьПараметр("ДатаПроверки", ДатаПроверки);
	Запрос.УстановитьПараметр("Ферма", Ферма);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("Животное");
	
КонецФункции

Функция ПолучитьОбщиеДанныеЖивотного(Животное, ДатаПроверки) Экспорт
	
		НеобходимыеРеквизиты = Новый Структура();
		
		ПараметрыРождения 	= ПараметрыПриРождении(Животное);
		ДанныеАктуальности 	= АктуальностьЖивотного(Животное);
		РодителиЖивотного	= РодителиЖивотного(Животное);
		ДанныеПоследнегоУЗИ = ДанныеПоследнегоУЗИ(Животное, ДатаПроверки);
		ДанныеОбОсеменении  = ДатаПоследнегоОсеменения(Животное, ДатаПроверки, Истина);
		ДнейСтельности 		= ДнейСтельности(Животное, ДатаПроверки);
		
		НеобходимыеРеквизиты.Вставить("КоличествоОсеменений", 		КоличествоОсемененийПослеОтела(Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("КоличествоОтелов", 			КоличествоОтелов(Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("КорпусЖивотного", 			МестонахождениеЖивотного(	Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("МестоРождения", 				МестоРожденияЖивотного(Животное));
		НеобходимыеРеквизиты.Вставить("ФермаЖивотного", 			МестонахождениеЖивотного(Животное, ДатаПроверки, Истина));
		НеобходимыеРеквизиты.Вставить("Вес", 						ПараметрыРождения["Вес"]);
		НеобходимыеРеквизиты.Вставить("Пол", 						ПараметрыРождения["Пол"]);
		НеобходимыеРеквизиты.Вставить("СтатусЖивотного", 			СтатусЖивотного(Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("ПроизводственнаяГруппа", 	ПолучитьПроизводственнуюГруппу(Животное));
		СтруктураПоследнегоОтёла = ДатаПоследнегоОтела(Животное, ДатаПроверки, Истина);
		НеобходимыеРеквизиты.Вставить("ДатаПоследнегоОтела", 		СтруктураПоследнегоОтёла.Период);
		НеобходимыеРеквизиты.Вставить("МежотёльныйПериод", 			СтруктураПоследнегоОтёла.МежотёльныйПериод);
		НеобходимыеРеквизиты.Вставить("Актуальность", 				ДанныеАктуальности.Актуально);
		НеобходимыеРеквизиты.Вставить("ДатаВыбытия", 				ДанныеАктуальности.ДатаВыбытия);
		НеобходимыеРеквизиты.Вставить("ДатаРождения", 				ДатаРожденияЖивотного(Животное));
		НеобходимыеРеквизиты.Вставить("Брак", 						ЖивотноеСписаноВБарк(Животное));
		НеобходимыеРеквизиты.Вставить("ДатаПоследнегоОсеменения",   ДанныеОбОсеменении.Период);
		НеобходимыеРеквизиты.Вставить("Мать",  						РодителиЖивотного.Мать);
		НеобходимыеРеквизиты.Вставить("Отец", 						РодителиЖивотного.Отец);
		НеобходимыеРеквизиты.Вставить("ДатаПредполагаемогоОтела", 	ПолучитьДатуПредполагаемогоОтела(Животное));
		НеобходимыеРеквизиты.Вставить("МолокоЗаЛактацию", 			ПоследниеСреднесуточныеКонтрольныеНадои(Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("ВетСтатус", 					ВетСтатусЖивотного(Животное, ДатаПроверки));
		НеобходимыеРеквизиты.Вставить("ДнейДоЗапуска", 				?(НЕ НеобходимыеРеквизиты.Актуальность ИЛИ 
																		НЕ ЗначениеЗаполнено(ДанныеПоследнегоУЗИ.ДатаЗапуска)
																		ИЛИ ДанныеПоследнегоУЗИ.ДатаЗапуска < НеобходимыеРеквизиты.ДатаПоследнегоОтела
		                                                               	ИЛИ НЕ ДнейСтельности
																		ИЛИ ДатаПоследнегоУЗИ(Животное, ДатаПроверки) < ДатаПоследнегоФактическогоЗапуска(Животное, ДатаПроверки), 0, ОбщегоНазначения.РазностьДат(ДанныеПоследнегоУЗИ.ДатаЗапуска, ДатаПроверки,,)));
		НеобходимыеРеквизиты.Вставить("ПоследнийБыкОсеменения",     ДанныеОбОсеменении.Бык);
		НеобходимыеРеквизиты.Вставить("ПоследнийВесЖивотного", 		?(НеобходимыеРеквизиты.ПроизводственнаяГруппа = "Телка", ПолучитьПоследнийВесЖивотного(Животное, ДатаПроверки), 0));
		
		Возврат НеобходимыеРеквизиты;
		
КонецФункции

Функция ПолучитьСписокЖивотныхПоФермеДокумента(Ферма, ДатаПроверки, Корпус = Неопределено, Состояние = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Животные.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Животные КАК Животные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеЖивотных.СрезПоследних(&ДатаПроверки, ) КАК РазмещениеЖивотныхСрезПоследних
	|		ПО (РазмещениеЖивотныхСрезПоследних.Животное = Животные.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЖивотных.СрезПоследних(&ДатаПроверки, &ПроверятьСостояние) КАК СостояниеЖивотныхСрезПоследних
	|		ПО (СостояниеЖивотныхСрезПоследних.Животное = Животные.Ссылка)
	|ГДЕ
	|	РазмещениеЖивотныхСрезПоследних.Ферма = &Ферма
	|	И 1 = 1
	|	И 2 = 2" ;
	Если ЗначениеЗаполнено(Корпус) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"1 = 1","Корпус = &Корпус"); 
	КонецЕсли;  
	Если Состояние <> Неопределено Тогда     
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"2 = 2","СостояниеЖивотныхСрезПоследних.СостояниеЖивотного В (&Состояние)"); 
		Запрос.УстановитьПараметр("ПроверятьСостояние", Истина);  
		Запрос.УстановитьПараметр("Состояние", Состояние);
	Иначе	
		Запрос.УстановитьПараметр("ПроверятьСостояние", Ложь);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаПроверки", 	ДатаПроверки);
	Запрос.УстановитьПараметр("Ферма", 			?(ЗначениеЗаполнено(Ферма), Ферма, ОбщегоНазначения.ТекущийПользователь().ОсновнаяФерма));
	Запрос.УстановитьПараметр("Корпус", 		Корпус);
	
	Ответ = Запрос.Выполнить().Выгрузить();
	
	Возврат Ответ.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ПолучитьДатуЗапрос(ДатаРождения, ПолучитьДатуВГодах = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаРождения) Тогда	
		Возврат "";
	КонецЕсли;
		
	Если ПолучитьДатуВГодах Тогда
		Возврат "" + ЦЕЛ(ОбщегоНазначения.РазностьДат(ДатаРождения, ТекущаяДата(),"МЕСЯЦ", Истина) / 12) + " г. " +
								(ОбщегоНазначения.РазностьДат(ДатаРождения, ТекущаяДата(),"МЕСЯЦ",Истина) - (ЦЕЛ(ОбщегоНазначения.РазностьДат(ДатаРождения, ТекущаяДата(), "МЕСЯЦ", Истина) / 12) * 12)) + " мес. ";
	
	Иначе
		Возврат "" + ОбщегоНазначения.РазностьДат(ДатаРождения, ТекущаяДата(),, Истина) + " дней";							
	КонецЕсли;
		
КонецФункции

Функция ПолучитьСписокЗаболеваний(ВидЗаболевания) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Заболевания.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Заболевания КАК Заболевания
		|ГДЕ
		|	Заболевания.Ссылка <> Значение(Справочник.Заболевания.Мастит)";
	Если ВидЗаболевания = Перечисления.ВидыЗаболеваний.Мастит Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "<>", "="); 
	КонецЕсли;
	МассивЗаболеваний = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Возврат МассивЗаболеваний;
	
КонецФункции


