&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь.ОсновнаяФерма) Тогда
		
		Ферма = ПараметрыСеанса.ТекущийПользователь.ОсновнаяФерма;
		Элементы.ОтборПоФерме.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	Элементы.ПоказыватьБычков.Пометка	= Истина;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьАрхив(Команда)
	
	Элементы.ПоказыватьАрхив.Пометка = НЕ Элементы.ПоказыватьАрхив.Пометка;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьБычков(Команда)
	
	Элементы.ПоказыватьБычков.Пометка = НЕ Элементы.ПоказыватьБычков.Пометка;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ФермаПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ФермаОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаСервере
Функция УстановитьОтборы()
	
	Список.Отбор.Элементы.Очистить();

	Если ЗначениеЗаполнено(Ферма) Тогда 
		Если Элементы.ПоказыватьАрхив.Пометка Тогда
			ГруппаОтбор 			= Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтбор.ТипГруппы	= ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			ГруппаОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ГруппаОтбор.Использование = Истина;
			Отбор 					= ГруппаОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			Отбор.ПравоеЗначение 	= Ферма;
			Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ферма");
			Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Отбор.Использование 	= Истина;
			Отбор 					= ГруппаОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			Отбор.ПравоеЗначение 	= Ферма;
			Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ФермаВыбытия");
			Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Отбор.Использование 	= Истина;
		Иначе	
			Отбор 					= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			Отбор.ПравоеЗначение 	= Ферма;
			Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ферма");
			Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			Отбор.Использование 	= Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Элементы.ПоказыватьАрхив.Пометка Тогда 
		
		Отбор 					= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение 	= Ложь;
		Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Архив");
		Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Отбор.Использование 	= Истина;
		
	КонецЕсли;	
	
	Если НЕ Элементы.ПоказыватьБычков.Пометка Тогда
		
		Отбор 					= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		Отбор.ПравоеЗначение 	= Перечисления.ПолЖивотного.Корова;
		Отбор.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Пол");
		Отбор.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Отбор.Использование 	= Истина;
		
	КонецЕсли;
	
	//+ SnowBars 20220301 Добавил параметры в список
	ПараметрТекущейДаты 				= ЭтаФорма.Список.Параметры.Элементы.Найти("ТекущаяДата");
	ПараметрТекущейДаты.Значение 		= ТекущаяДата();
	ПараметрТекущейДаты.Использование 	= Истина;
	//- SnowBars 20220301 Добавил параметры в список
	
	ПараметрыСпискаНаСервере();
	
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьЖивотное", ЭтотОбъект);
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(1, "Добавление животного");
	СписокКнопок.Добавить(2, "Рождение животного");
	СписокКнопок.Добавить(3, "Отмена");
	
	ПоказатьВопрос(ОписаниеОповещения, "Каким документов ввести новое животное?", СписокКнопок, 
					,, "Добавление животного");
					
КонецПроцедуры

&НаКлиенте
Процедура ДополнительнаяИнформация(Команда)
	
	Элементы.ДополнительнаяИнформация.Пометка = Не Элементы.ДополнительнаяИнформация.Пометка;
	
	ПоказатьСкрытьДополнительнуюИнформацию();
	
КонецПроцедуры

&НаКлиенте
Функция ПоказатьСкрытьДополнительнуюИнформацию()
	
	Если Элементы.ДополнительнаяИнформация.Пометка Тогда
		
		Элементы.ГруппаДополнительнаяИнформация.Видимость = Истина;
	Иначе
		
		Элементы.ГруппаДополнительнаяИнформация.Видимость = Ложь;
		Возврат 0;
		
	КонецЕсли;
	
	ПараметрыСпискаНаСервере();
	
КонецФункции

&НаСервере
Функция ПараметрыСпискаНаСервере()
	
	Если НЕ Элементы.ДополнительнаяИнформация.Пометка Тогда
		Возврат 0;
	КонецЕсли;
	
	СхемаКомпоновки 			= Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	НастройкиСхемыКомпоновки 	= Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновкиДанных 		= КомпоновщикМакета.Выполнить(СхемаКомпоновки, 
										НастройкиСхемыКомпоновки,,,
										Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
										
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ОбщиеИтоги.Очистить();
	
	НоваяСтрокаОбщегоИтога = ОбщиеИтоги.Добавить();
	НоваяСтрокаОбщегоИтога.КолонкаКорпуса = "Общий итог:";
	НоваяСтрокаОбщегоИтога.КоличествоКорпус = Результат.Количество();
	
	//ПОСЧИТАЕМ ИТОГИ ПО КОРПУСАМ
	
	Результат.Колонки.Добавить("Количество");
	
	Для каждого СтрокаТабличнойЧасти Из Результат Цикл
		
		СтрокаТабличнойЧасти.Количество = 1;
	КонецЦикла;
	
	Результат.Свернуть("Корпус", "Количество");
	
	Для каждого СтрокаТабличнойЧасти Из Результат Цикл
		
		НоваяСтрокаОбщегоИтога 					= ОбщиеИтоги.Добавить();
		НоваяСтрокаОбщегоИтога.КолонкаКорпуса 	= СтрокаТабличнойЧасти.Корпус;
		НоваяСтрокаОбщегоИтога.КоличествоКорпус = СтрокаТабличнойЧасти.Количество;
		
	КонецЦикла;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	//РАСЧИТАЕМ ВОЗРАСТ
	Для каждого СтрокаТабличнойЧасти Из Строки Цикл
		
		ТекущиеДанные = СтрокаТабличнойЧасти.Значение.Данные;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаРождения) Тогда 
			Продолжить;
		КонецЕсли;   
		
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ДатаВыбытия) Тогда
			ДатаРасчета = ТекущиеДанные.ДатаВыбытия;
		Иначе	
			ДатаРасчета = ТекущаяДата();
		КонецЕсли;   
		
		ВозрастЖивотного = 
		?(ТекущиеДанные.Пол = Перечисления.ПолЖивотного.Корова И ТекущиеДанные.Отелов > 0, 
		
		"" + ЦЕЛ(ОбщегоНазначения.РазностьДат(ТекущиеДанные.ДатаРождения, ДатаРасчета,"МЕСЯЦ", Истина) / 12) + " г. " +
		(ОбщегоНазначения.РазностьДат(ТекущиеДанные.ДатаРождения, ДатаРасчета,"МЕСЯЦ",Истина) - 
		(ЦЕЛ(ОбщегоНазначения.РазностьДат(ТекущиеДанные.ДатаРождения, ДатаРасчета, "МЕСЯЦ", Истина) / 12) * 12)) + " мес. ", 
		
		"" + (ОбщегоНазначения.РазностьДат(ТекущиеДанные.ДатаРождения, ДатаРасчета,, Истина) + 1) + " дней" );
		
		СтрокаТабличнойЧасти.Значение.Данные.Возраст = ВозрастЖивотного;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьЖивотное(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = 1 Тогда
		
		ОткрытьФорму("Документ.ДобавлениеЖивотного.Форма.ФормаДокумента");
	ИначеЕсли Ответ = 2 Тогда
		
		ОткрытьФорму("Документ.РождениеТеленка.Форма.ФормаДокумента");
	КонецЕсли;

КонецФункции







