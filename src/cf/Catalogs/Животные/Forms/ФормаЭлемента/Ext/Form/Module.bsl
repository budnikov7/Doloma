
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ЗАПОЛНИМ ПАРАМЕТРЫ ДИНАМИЧЕСКИХ СПИСКОВ
	ВетеринарныеДокументы.Параметры.Элементы[0].Использование	= Истина;
	ВетеринарныеДокументы.Параметры.Элементы[0].Значение		= Объект.Ссылка;
	ИсторияЖивотного.Параметры.Элементы[0].Использование		= Истина;
	ИсторияЖивотного.Параметры.Элементы[0].Значение				= Объект.Ссылка; 
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СформироватьДеревоСвязей();
	КонецЕсли;
	
	УстановитьДоступностьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьИсториюЖивотного();		
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИсториюЖивотного()
	
	СвойстваЖивотного = ДанныеЖивотных.ПолучитьОбщиеДанныеЖивотного(Объект.Ссылка, ТекущаяДата());
	
	ДополнительныйПараметр_Осеменений					= СвойстваЖивотного.КоличествоОсеменений;
	ДополнительныйПараметр_Отелов						= СвойстваЖивотного.КоличествоОтелов;
	ДополнительныйПараметр_Корпус						= СвойстваЖивотного.КорпусЖивотного;
	ДополнительныйПараметр_МестоРождения				= СвойстваЖивотного.МестоРождения;
	ДополнительныйПараметр_Ферма						= СвойстваЖивотного.ФермаЖивотного;	
	ДополнительныйПараметр_Вес							= СвойстваЖивотного.Вес;	
	ДополнительныйПараметр_Пол							= СвойстваЖивотного.Пол;
	ДополнительныйПараметр_Статус						= СвойстваЖивотного.СтатусЖивотного;
	ДополнительныйПараметр_ПроизводственнаяГруппа		= СвойстваЖивотного.ПроизводственнаяГруппа;
	ДополнительныйПараметр_ДатаПоследнегоОтела			= СвойстваЖивотного.ДатаПоследнегоОтела;
	ДополнительныйПараметр_ДатаРождения					= СвойстваЖивотного.ДатаРождения;
	ДополнительныйПараметр_Мать 						= СвойстваЖивотного.Мать;
	ДополнительныйПараметр_Отец 						= СвойстваЖивотного.Отец;
	ДополнительныйПараметр_МолокоЗаЛактации				= СвойстваЖивотного.МолокоЗаЛактацию;
	ДополнительныйПараметр_ВетСтатус					= СвойстваЖивотного.ВетСтатус;
	ДополнительныйПараметр_ДатаПредполагаемогоОтела 	= ?(СвойстваЖивотного.ДатаПоследнегоОсеменения > ДополнительныйПараметр_ДатаПоследнегоОтела 
																И СвойстваЖивотного.СтатусЖивотного=Перечисления.СтатусЖивотного.Стельная, 
																	СвойстваЖивотного.ДатаПредполагаемогоОтела, 
																		Дата(1, 1, 1));
																																
	ДополнительныйПараметр_ДойныхДней					= ?(ДополнительныйПараметр_ДатаПоследнегоОтела 	= Дата(1, 1, 1), 
																	0,
																	ОбщегоНазначения.РазностьДат(
																			?(СвойстваЖивотного.Актуальность, 
																					ТекущаяДата(), 
																					СвойстваЖивотного.ДатаВыбытия), 
																			ДополнительныйПараметр_ДатаПоследнегоОтела));
																	
																																			
	ДополнительныйПараметр_ДнейДоЗапуска				= СвойстваЖивотного.ДнейДоЗапуска;	
	ДополнительныйПараметр_ДатаПоследнегоОсеменения 	= СвойстваЖивотного.ДатаПоследнегоОсеменения;
	ДополнительныйПараметр_ПоследнийБыкОсеменения       = СвойстваЖивотного.ПоследнийБыкОсеменения;
	ДополнительныйПараметр_ВесЖивотного 				= СвойстваЖивотного.ПоследнийВесЖивотного;
	ДополнительныйПараметр_МежотёльныйПериод 			= СвойстваЖивотного.МежотёльныйПериод;
	
	Если СвойстваЖивотного.Брак ИЛИ НЕ СвойстваЖивотного.Актуальность Тогда
		Элементы.ЖивотноеВАрхивеНадпись.Заголовок 	= ?(НЕ СвойстваЖивотного.Актуальность, "Животное находится в архиве", "Не осеменять");	
		Элементы.ЖивотноеВАрхивеНадпись.Видимость = Истина;	
	КонецЕсли; 
	
	ДополнительныйПараметр_ДатаВыбытия 					= СвойстваЖивотного.ДатаВыбытия;
		
КонецФункции

&НаСервере
Функция ИзменитьНаименование()
	
	Объект.Наименование = "" + Объект.Бирка + " " + Объект.Кличка;
	
КонецФункции

&НаКлиенте
Процедура БиркаПриИзменении(Элемент)
	
	ИзменитьНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура КличкаПриИзменении(Элемент)
	
	ИзменитьНаименование();
	
КонецПроцедуры

//ФУНКЦИЯ ОТКРЫВАЕТ ДОКУМЕНТЫ ИСТОРИИ 
&НаКлиенте
Процедура ИсторияЖивотногоДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	
	ТекущиеДанные 			= Элемент.ТекущиеДанные;
	ДокументОткрытия 		= ТекущиеДанные.Ссылка;
	НазваниеДокумента 		= ОбщегоНазначения.ПолучитьИмяМетаданных(ДокументОткрытия);
	
	ОткрытьФорму("Документ." + НазваниеДокумента + ".Форма.ФормаДокумента", Новый Структура("Ключ", ДокументОткрытия));
	
КонецПроцедуры

&НаКлиенте
Процедура ВетДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	
	ТекущиеДанные 					= Элемент.ТекущиеДанные;
	ДокументОткрытия 			= ТекущиеДанные.Регистратор;
	
	ОткрытьЗначениеАсинх(ДокументОткрытия);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьНаСервере()
	
	//Если НЕ РольДоступна("ПолныеПрава") Тогда
	//	Элементы.Кличка.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
КонецПроцедуры

#Область РаботаСРодословной

&НаКлиенте
Процедура РодословнаяПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Родословная) Тогда
		СформироватьДеревоСвязей();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСвязей()
	
	ДеревоСвязей = РегистрыСведений.РодственныеСвязи.СформироватьДеревоСвязей(Объект.Родословная);
	ЗначениеВДанныеФормы(ДеревоСвязей, ДеревоРодственныхСвязей);

КонецПроцедуры

&НаКлиенте
Процедура ДеревоРодственныхСвязейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ДеревоРодственныхСвязей.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Предок) Тогда
		ПоказатьЗначение(,ТекущиеДанные.Предок);
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти













