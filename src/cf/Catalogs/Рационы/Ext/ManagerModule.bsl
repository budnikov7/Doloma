#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура Печать(ТабДок, Ссылка, ВыводитьПитательность = Ложь) Экспорт
	
	Если ВыводитьПитательность Тогда
		Макет = Справочники.Рационы.ПолучитьМакет("Печать");
	Иначе
		Макет = Справочники.Рационы.ПолучитьМакет("ПечатьСПитательностью");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Рационы.Вес КАК Вес,
	|	Рационы.ГруппаЖивотных КАК ГруппаЖивотных,
	|	Рационы.Дата КАК Дата,
	|	Рационы.Наименование КАК Наименование,
	|	Рационы.СуммаСВ КАК СуммаСВ,
	|	Рационы.СуммаСВ_КК КАК СуммаСВ_КК,
	|	Рационы.СуммаСВ_МК КАК СуммаСВ_МК,
	|	Рационы.СуммаСВ_ОК КАК СуммаСВ_ОК,
	|	Рационы.СуммаСВ_Прочее КАК СуммаСВ_Прочее,
	|	Рационы.Цена КАК Цена,
	|	Рационы.Корма.(
	|		НомерСтроки КАК НомерСтрокиКорма,
	|		Номенклатура КАК Номенклатура,
	|		Вес КАК Вес,
	|		ДоляСВ КАК ДоляСВ
	|	) КАК Корма,
	|	Рационы.ПоказателиРациона.(
	|		НомерСтроки КАК НомерСтрокиПоказатели,
	|		ПоказательРациона КАК ПоказательРациона,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Минимум КАК Минимум,
	|		Содержание КАК Содержание,
	|		Максимум КАК Максимум
	|	) КАК ПоказателиРациона
	|ИЗ
	|	Справочник.Рационы КАК Рационы
	|ГДЕ
	|	Рационы.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблиц 	= Макет.ПолучитьОбласть("ШапкаТаблиц");
	ОбластьСтрокаТаблиц	= Макет.ПолучитьОбласть("СтрокаТаблиц"); 
	Подвал 				= Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить(); 
	
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка);
		
		ТабДок.Вывести(ОбластьШапкаТаблиц); 
		
		ТаблицаКорма = Выборка.Корма.Выгрузить(); 
		КоличествоСтрокКорма = ТаблицаКорма.Количество();   
		
		Если ВыводитьПитательность Тогда
			
			ТаблицаПоказателиРациона = Выборка.ПоказателиРациона.Выгрузить();  
			
			МассивКУдалению = Новый Массив;
			Для каждого Строчка Из ТаблицаПоказателиРациона Цикл
				Если Строчка.ПоказательРациона.ПереводитьВПроценты = Истина И Строчка.ЕдиницаИзмерения <> Справочники.ЕдиницыИзмерения.Процент Тогда
					МассивКУдалению.Добавить(Строчка);
				КонецЕсли;
			КонецЦикла;
			Для каждого Строчка Из МассивКУдалению Цикл
				ТаблицаПоказателиРациона.Удалить(Строчка);
			КонецЦикла;  
			
			КоличествоСтрокПоказатели 	= ТаблицаПоказателиРациона.Количество(); 
			КоличествоСтрокМакс 		= Макс(КоличествоСтрокКорма, КоличествоСтрокПоказатели);
			
		Иначе
			
			КоличествоСтрокМакс 		= КоличествоСтрокКорма;
			
		КонецЕсли;
		
		Для Сч = 0 По КоличествоСтрокМакс - 1 Цикл 
			
			Если Сч <= КоличествоСтрокКорма - 1 Тогда
				ОбластьСтрокаТаблиц.Параметры.Заполнить(ТаблицаКорма[Сч]);
			ИначеЕсли Сч = КоличествоСтрокКорма Тогда
				ОбластьСтрокаТаблиц.Параметры.НомерСтрокиКорма 	= "";   
				ОбластьСтрокаТаблиц.Параметры.Номенклатура 		= "Итого:";
				ОбластьСтрокаТаблиц.Параметры.Вес				= Ссылка[0].Корма.Итог("Вес"); 
			Иначе	
				ОбластьСтрокаТаблиц.Параметры.НомерСтрокиКорма 	= "";   
				ОбластьСтрокаТаблиц.Параметры.Номенклатура 		= "";
				ОбластьСтрокаТаблиц.Параметры.Вес				= ""; 
				ОбластьСтрокаТаблиц.Область(1,1,1,4).ГраницаСверху 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,1,1,4).ГраницаСлева 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,1,1,4).ГраницаСнизу 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,1,1,4).ГраницаСправа 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			КонецЕсли;
			
			Если ВыводитьПитательность Тогда
				
				Если Сч <= КоличествоСтрокПоказатели - 1 Тогда
					ОбластьСтрокаТаблиц.Параметры.Заполнить(ТаблицаПоказателиРациона[Сч]);
				Иначе	
					ОбластьСтрокаТаблиц.Параметры.ПоказательРациона	= ""; 
					ОбластьСтрокаТаблиц.Параметры.ЕдиницаИзмерения	= ""; 
					ОбластьСтрокаТаблиц.Параметры.Минимум			= "";  
					ОбластьСтрокаТаблиц.Параметры.Содержание		= ""; 
					ОбластьСтрокаТаблиц.Параметры.Максимум			= ""; 
					ОбластьСтрокаТаблиц.Область(1,5,1,10).ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					ОбластьСтрокаТаблиц.Область(1,5,1,10).ГраницаСлева 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					ОбластьСтрокаТаблиц.Область(1,5,1,10).ГраницаСнизу 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					ОбластьСтрокаТаблиц.Область(1,5,1,10).ГраницаСправа = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДок.Вывести(ОбластьСтрокаТаблиц);
			
		КонецЦикла; 
		
		Если КоличествоСтрокКорма >= КоличествоСтрокМакс Тогда
			ОбластьСтрокаТаблиц.Параметры.НомерСтрокиКорма 	= "";   
			ОбластьСтрокаТаблиц.Параметры.Номенклатура 		= "Итого:";
			ОбластьСтрокаТаблиц.Параметры.Вес				= Ссылка[0].Корма.Итог("Вес");  
			Если ВыводитьПитательность Тогда
				ОбластьСтрокаТаблиц.Параметры.ПоказательРациона	= ""; 
				ОбластьСтрокаТаблиц.Параметры.ЕдиницаИзмерения	= ""; 
				ОбластьСтрокаТаблиц.Параметры.Минимум			= "";  
				ОбластьСтрокаТаблиц.Параметры.Содержание		= ""; 
				ОбластьСтрокаТаблиц.Параметры.Максимум			= ""; 
				ОбластьСтрокаТаблиц.Область(1,5,1,9).ГраницаСверху 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,5,1,9).ГраницаСлева 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,5,1,9).ГраницаСнизу 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
				ОбластьСтрокаТаблиц.Область(1,5,1,9).ГраницаСправа 	= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			КонецЕсли;
			ТабДок.Вывести(ОбластьСтрокаТаблиц);
		КонецЕсли;
		//Подвал.Параметры.Заполнить(Выборка);
		//ТабДок.Вывести(Подвал);
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьПоляЗаполнения() Экспорт
	
	МассивПолейЗаполнения = Новый Массив;
	
	//БЫК
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 										"Бык");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 						"Бык             ");
	СтруктураДанных.Вставить("Тип", 								Тип("СправочникСсылка.БыкиПлеменные"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 			Истина);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);
	
	//TPI
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"TPI");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"TPI            ");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);
	
	//NM
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"NM");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"NM				");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);

	//Молоко
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"Молоко");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"Молоко		");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);

	//PL
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"PL");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"PL				");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);

	//CCR
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"CCR");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"CCR			");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);

	//HCR
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Имя", 												"HCR");
	СтруктураДанных.Вставить("НазваниеТабличнойЧасти", 	"ОсновныеИндексы");
	СтруктураДанных.Вставить("ИмяКолонки", 								"HCR			");
	СтруктураДанных.Вставить("Тип", 												Тип("Число"));
	СтруктураДанных.Вставить("ОбязательноеПоле", 				Ложь);
	МассивПолейЗаполнения.Добавить(СтруктураДанных);

	Возврат МассивПолейЗаполнения;
	
КонецФункции

Функция ПроцентСВРациона(Рацион) Экспорт
	
	ПроцентСВ = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	(100 - РационыПоказателиРациона.Содержание) / 100 КАК ПроцентСВ
	|ИЗ
	|	Справочник.Рационы.ПоказателиРациона КАК РационыПоказателиРациона
	|ГДЕ
	|	РационыПоказателиРациона.Ссылка = &Рацион
	|	И РационыПоказателиРациона.ПоказательРациона = ЗНАЧЕНИЕ(Справочник.ПоказателиРационов.Влажность)
	|	И РационыПоказателиРациона.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.Процент)";
	
	Запрос.УстановитьПараметр("Рацион", Рацион);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПроцентСВ = Выборка.ПроцентСВ;
	КонецЕсли;
	
	Возврат ПроцентСВ;
	
КонецФункции

#КонецОбласти

#КонецЕсли












